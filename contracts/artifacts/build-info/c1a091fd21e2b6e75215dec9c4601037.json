{
	"id": "c1a091fd21e2b6e75215dec9c4601037",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ERC-20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.25;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MyToken is ERC20Capped, ERC20Burnable, Ownable {\r\n    uint256 public blockReward;\r\n\r\n    constructor(uint256 cap, uint256 reward, address initialOwner) \r\n        ERC20(\"MyToken\", \"MTK\") \r\n        ERC20Capped(cap * 10**18) \r\n        Ownable(initialOwner)\r\n    {\r\n        require(cap >= 70000000, \"Cap must be at least 70 million tokens\");\r\n        _mint(initialOwner, 70000000 * 10**18);\r\n        blockReward = reward * 10**18;\r\n    }\r\n\r\n    function _mintMinerReward() internal {\r\n        _mint(block.coinbase, blockReward);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual  {\r\n        \r\n\r\n        uint256 currentSupply = totalSupply();\r\n        address miner = block.coinbase;\r\n\r\n        if (from != address(0) && miner != address(0) && to != miner && currentSupply + blockReward <= cap()) {\r\n            _mintMinerReward();\r\n        }\r\n    }\r\n\r\n    function setBlockReward(uint256 reward) external onlyOwner {\r\n        blockReward = reward * 10**18;\r\n    }\r\n\r\n    // Override _update function from ERC20 and ERC20Capped\r\n    function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Capped) {\r\n        ERC20Capped._update(from, to, value); // Call the desired parent implementation\r\n    }\r\n}\r\n\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Total supply cap has been exceeded.\n     */\n    error ERC20ExceededCap(uint256 increasedSupply, uint256 cap);\n\n    /**\n     * @dev The supplied cap is not a valid cap.\n     */\n    error ERC20InvalidCap(uint256 cap);\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        if (cap_ == 0) {\n            revert ERC20InvalidCap(0);\n        }\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_update}.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override {\n        super._update(from, to, value);\n\n        if (from == address(0)) {\n            uint256 maxSupply = cap();\n            uint256 supply = totalSupply();\n            if (supply > maxSupply) {\n                revert ERC20ExceededCap(supply, maxSupply);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC-20.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "increasedSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20ExceededCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"name": "ERC20InvalidCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "blockReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "setBlockReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20ExceededCap(uint256,uint256)": [
								{
									"details": "Total supply cap has been exceeded."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidCap(uint256)": [
								{
									"details": "The supplied cap is not a valid cap."
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC-20.sol\":324:1618  contract MyToken is ERC20Capped, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/ERC-20.sol\":422:766  constructor(uint256 cap, uint256 reward, address initialOwner) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ERC-20.sol\":573:585  initialOwner */\n  dup1\n    /* \"contracts/ERC-20.sol\":547:553  10**18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/ERC-20.sol\":541:544  cap */\n  dup5\n    /* \"contracts/ERC-20.sol\":541:553  cap * 10**18 */\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79546f6b656e00000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4d544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_13:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":764:765  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:760  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":756:765  cap_ == 0 */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":804:805  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":788:806  ERC20InvalidCap(0) */\n  mload(0x40)\n  0x392e1e2700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":752:817  if (cap_ == 0) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":833:837  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":826:837  _cap = cap_ */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":716:844  constructor(uint256 cap_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_19\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_19:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_22\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/ERC-20.sol\":618:626  70000000 */\n  0x042c1d80\n    /* \"contracts/ERC-20.sol\":611:614  cap */\n  dup4\n    /* \"contracts/ERC-20.sol\":611:626  cap >= 70000000 */\n  lt\n  iszero\n    /* \"contracts/ERC-20.sol\":603:669  require(cap >= 70000000, \"Cap must be at least 70 million tokens\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"contracts/ERC-20.sol\":680:718  _mint(initialOwner, 70000000 * 10**18) */\n  tag_28\n    /* \"contracts/ERC-20.sol\":686:698  initialOwner */\n  dup2\n    /* \"contracts/ERC-20.sol\":700:717  70000000 * 10**18 */\n  0x39e7139a8c08fa06000000\n    /* \"contracts/ERC-20.sol\":680:685  _mint */\n  shl(0x20, tag_29)\n    /* \"contracts/ERC-20.sol\":680:718  _mint(initialOwner, 70000000 * 10**18) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contracts/ERC-20.sol\":752:758  10**18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/ERC-20.sol\":743:749  reward */\n  dup3\n    /* \"contracts/ERC-20.sol\":743:758  reward * 10**18 */\n  tag_30\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_30:\n    /* \"contracts/ERC-20.sol\":729:740  blockReward */\n  0x06\n    /* \"contracts/ERC-20.sol\":729:758  blockReward = reward * 10**18 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/ERC-20.sol\":422:766  constructor(uint256 cap, uint256 reward, address initialOwner) ... */\n  pop\n  pop\n  pop\n    /* \"contracts/ERC-20.sol\":324:1618  contract MyToken is ERC20Capped, ERC20Burnable, Ownable {... */\n  jump(tag_31)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_36\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_37)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC-20.sol\":1414:1615  function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Capped) {... */\ntag_37:\n    /* \"contracts/ERC-20.sol\":1529:1565  ERC20Capped._update(from, to, value) */\n  tag_39\n    /* \"contracts/ERC-20.sol\":1549:1553  from */\n  dup4\n    /* \"contracts/ERC-20.sol\":1555:1557  to */\n  dup4\n    /* \"contracts/ERC-20.sol\":1559:1564  value */\n  dup4\n    /* \"contracts/ERC-20.sol\":1529:1548  ERC20Capped._update */\n  shl(0x20, tag_40)\n    /* \"contracts/ERC-20.sol\":1529:1565  ERC20Capped._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_39:\n    /* \"contracts/ERC-20.sol\":1414:1615  function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Capped) {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n  tag_45\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n  shl(0x20, tag_46)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n  0x20\n  shr\n  jump\t// in\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n  tag_47\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n  shl(0x20, tag_48)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n  mload(0x40)\n  0x9e79f85400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_50\n  swap3\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_53\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_54\n  swap2\n  swap1\n  tag_55\n  jump\t// in\ntag_54:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_56)\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_57\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_58\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_60\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_61)\ntag_60:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_62\n  swap2\n  swap1\n  tag_63\n  jump\t// in\ntag_62:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n  mload(0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\ntag_48:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_67:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_69:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_70:\n    /* \"#utility.yul\":490:514   */\n  tag_110\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_69\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_111\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_111:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_71:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_113\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_70\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_72:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_73:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_116\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_72\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_74:\n    /* \"#utility.yul\":1001:1025   */\n  tag_118\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_73\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_119:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_75:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_121\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_74\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  0x00\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_124\n  tag_67\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":1326:1445   */\ntag_123:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_125\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_71\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_126\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_71\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_127\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_75\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:2054   */\ntag_76:\n    /* \"#utility.yul\":1922:1999   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1919:1920   */\n  0x00\n    /* \"#utility.yul\":1912:2000   */\n  mstore\n    /* \"#utility.yul\":2019:2023   */\n  0x11\n    /* \"#utility.yul\":2016:2017   */\n  0x04\n    /* \"#utility.yul\":2009:2024   */\n  mstore\n    /* \"#utility.yul\":2043:2047   */\n  0x24\n    /* \"#utility.yul\":2040:2041   */\n  0x00\n    /* \"#utility.yul\":2033:2048   */\n  revert\n    /* \"#utility.yul\":2060:2470   */\ntag_7:\n    /* \"#utility.yul\":2100:2107   */\n  0x00\n    /* \"#utility.yul\":2123:2143   */\n  tag_130\n    /* \"#utility.yul\":2141:2142   */\n  dup3\n    /* \"#utility.yul\":2123:2143   */\n  tag_69\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2118:2143   */\n  swap2\n  pop\n    /* \"#utility.yul\":2157:2177   */\n  tag_131\n    /* \"#utility.yul\":2175:2176   */\n  dup4\n    /* \"#utility.yul\":2157:2177   */\n  tag_69\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":2152:2177   */\n  swap3\n  pop\n    /* \"#utility.yul\":2212:2213   */\n  dup3\n    /* \"#utility.yul\":2209:2210   */\n  dup3\n    /* \"#utility.yul\":2205:2214   */\n  mul\n    /* \"#utility.yul\":2234:2264   */\n  tag_132\n    /* \"#utility.yul\":2252:2263   */\n  dup2\n    /* \"#utility.yul\":2234:2264   */\n  tag_69\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":2223:2264   */\n  swap2\n  pop\n    /* \"#utility.yul\":2413:2414   */\n  dup3\n    /* \"#utility.yul\":2404:2411   */\n  dup3\n    /* \"#utility.yul\":2400:2415   */\n  div\n    /* \"#utility.yul\":2397:2398   */\n  dup5\n    /* \"#utility.yul\":2394:2416   */\n  eq\n    /* \"#utility.yul\":2374:2375   */\n  dup4\n    /* \"#utility.yul\":2367:2376   */\n  iszero\n    /* \"#utility.yul\":2347:2430   */\n  or\n    /* \"#utility.yul\":2324:2463   */\n  tag_133\n  jumpi\n    /* \"#utility.yul\":2443:2461   */\n  tag_134\n  tag_76\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":2324:2463   */\ntag_133:\n    /* \"#utility.yul\":2108:2470   */\n  pop\n    /* \"#utility.yul\":2060:2470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2476:2575   */\ntag_77:\n    /* \"#utility.yul\":2528:2534   */\n  0x00\n    /* \"#utility.yul\":2562:2567   */\n  dup2\n    /* \"#utility.yul\":2556:2568   */\n  mload\n    /* \"#utility.yul\":2546:2568   */\n  swap1\n  pop\n    /* \"#utility.yul\":2476:2575   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2581:2761   */\ntag_78:\n    /* \"#utility.yul\":2629:2706   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2626:2627   */\n  0x00\n    /* \"#utility.yul\":2619:2707   */\n  mstore\n    /* \"#utility.yul\":2726:2730   */\n  0x41\n    /* \"#utility.yul\":2723:2724   */\n  0x04\n    /* \"#utility.yul\":2716:2731   */\n  mstore\n    /* \"#utility.yul\":2750:2754   */\n  0x24\n    /* \"#utility.yul\":2747:2748   */\n  0x00\n    /* \"#utility.yul\":2740:2755   */\n  revert\n    /* \"#utility.yul\":2767:2947   */\ntag_79:\n    /* \"#utility.yul\":2815:2892   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2812:2813   */\n  0x00\n    /* \"#utility.yul\":2805:2893   */\n  mstore\n    /* \"#utility.yul\":2912:2916   */\n  0x22\n    /* \"#utility.yul\":2909:2910   */\n  0x04\n    /* \"#utility.yul\":2902:2917   */\n  mstore\n    /* \"#utility.yul\":2936:2940   */\n  0x24\n    /* \"#utility.yul\":2933:2934   */\n  0x00\n    /* \"#utility.yul\":2926:2941   */\n  revert\n    /* \"#utility.yul\":2953:3273   */\ntag_80:\n    /* \"#utility.yul\":2997:3003   */\n  0x00\n    /* \"#utility.yul\":3034:3035   */\n  0x02\n    /* \"#utility.yul\":3028:3032   */\n  dup3\n    /* \"#utility.yul\":3024:3036   */\n  div\n    /* \"#utility.yul\":3014:3036   */\n  swap1\n  pop\n    /* \"#utility.yul\":3081:3082   */\n  0x01\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3071:3083   */\n  and\n    /* \"#utility.yul\":3102:3120   */\n  dup1\n    /* \"#utility.yul\":3092:3173   */\n  tag_139\n  jumpi\n    /* \"#utility.yul\":3158:3162   */\n  0x7f\n    /* \"#utility.yul\":3150:3156   */\n  dup3\n    /* \"#utility.yul\":3146:3163   */\n  and\n    /* \"#utility.yul\":3136:3163   */\n  swap2\n  pop\n    /* \"#utility.yul\":3092:3173   */\ntag_139:\n    /* \"#utility.yul\":3220:3222   */\n  0x20\n    /* \"#utility.yul\":3212:3218   */\n  dup3\n    /* \"#utility.yul\":3209:3223   */\n  lt\n    /* \"#utility.yul\":3189:3207   */\n  dup2\n    /* \"#utility.yul\":3186:3224   */\n  sub\n    /* \"#utility.yul\":3183:3267   */\n  tag_140\n  jumpi\n    /* \"#utility.yul\":3239:3257   */\n  tag_141\n  tag_79\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3183:3267   */\ntag_140:\n    /* \"#utility.yul\":3004:3273   */\n  pop\n    /* \"#utility.yul\":2953:3273   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3420   */\ntag_81:\n    /* \"#utility.yul\":3328:3332   */\n  0x00\n    /* \"#utility.yul\":3351:3354   */\n  dup2\n    /* \"#utility.yul\":3343:3354   */\n  swap1\n  pop\n    /* \"#utility.yul\":3374:3377   */\n  dup2\n    /* \"#utility.yul\":3371:3372   */\n  0x00\n    /* \"#utility.yul\":3364:3378   */\n  mstore\n    /* \"#utility.yul\":3408:3412   */\n  0x20\n    /* \"#utility.yul\":3405:3406   */\n  0x00\n    /* \"#utility.yul\":3395:3413   */\n  keccak256\n    /* \"#utility.yul\":3387:3413   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3420   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3426:3519   */\ntag_82:\n    /* \"#utility.yul\":3463:3469   */\n  0x00\n    /* \"#utility.yul\":3510:3512   */\n  0x20\n    /* \"#utility.yul\":3505:3507   */\n  0x1f\n    /* \"#utility.yul\":3498:3503   */\n  dup4\n    /* \"#utility.yul\":3494:3508   */\n  add\n    /* \"#utility.yul\":3490:3513   */\n  div\n    /* \"#utility.yul\":3480:3513   */\n  swap1\n  pop\n    /* \"#utility.yul\":3426:3519   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3525:3632   */\ntag_83:\n    /* \"#utility.yul\":3569:3577   */\n  0x00\n    /* \"#utility.yul\":3619:3624   */\n  dup3\n    /* \"#utility.yul\":3613:3617   */\n  dup3\n    /* \"#utility.yul\":3609:3625   */\n  shl\n    /* \"#utility.yul\":3588:3625   */\n  swap1\n  pop\n    /* \"#utility.yul\":3525:3632   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3638:4031   */\ntag_84:\n    /* \"#utility.yul\":3707:3713   */\n  0x00\n    /* \"#utility.yul\":3757:3758   */\n  0x08\n    /* \"#utility.yul\":3745:3755   */\n  dup4\n    /* \"#utility.yul\":3741:3759   */\n  mul\n    /* \"#utility.yul\":3780:3877   */\n  tag_146\n    /* \"#utility.yul\":3810:3876   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3799:3808   */\n  dup3\n    /* \"#utility.yul\":3780:3877   */\n  tag_83\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":3898:3937   */\n  tag_147\n    /* \"#utility.yul\":3928:3936   */\n  dup7\n    /* \"#utility.yul\":3917:3926   */\n  dup4\n    /* \"#utility.yul\":3898:3937   */\n  tag_83\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3886:3937   */\n  swap6\n  pop\n    /* \"#utility.yul\":3970:3974   */\n  dup1\n    /* \"#utility.yul\":3966:3975   */\n  not\n    /* \"#utility.yul\":3959:3964   */\n  dup5\n    /* \"#utility.yul\":3955:3976   */\n  and\n    /* \"#utility.yul\":3946:3976   */\n  swap4\n  pop\n    /* \"#utility.yul\":4019:4023   */\n  dup1\n    /* \"#utility.yul\":4009:4017   */\n  dup7\n    /* \"#utility.yul\":4005:4024   */\n  and\n    /* \"#utility.yul\":3998:4003   */\n  dup5\n    /* \"#utility.yul\":3995:4025   */\n  or\n    /* \"#utility.yul\":3985:4025   */\n  swap3\n  pop\n    /* \"#utility.yul\":3714:4031   */\n  pop\n  pop\n    /* \"#utility.yul\":3638:4031   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4037:4097   */\ntag_85:\n    /* \"#utility.yul\":4065:4068   */\n  0x00\n    /* \"#utility.yul\":4086:4091   */\n  dup2\n    /* \"#utility.yul\":4079:4091   */\n  swap1\n  pop\n    /* \"#utility.yul\":4037:4097   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4103:4245   */\ntag_86:\n    /* \"#utility.yul\":4153:4162   */\n  0x00\n    /* \"#utility.yul\":4186:4239   */\n  tag_150\n    /* \"#utility.yul\":4204:4238   */\n  tag_151\n    /* \"#utility.yul\":4213:4237   */\n  tag_152\n    /* \"#utility.yul\":4231:4236   */\n  dup5\n    /* \"#utility.yul\":4213:4237   */\n  tag_69\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4204:4238   */\n  tag_85\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":4186:4239   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":4173:4239   */\n  swap1\n  pop\n    /* \"#utility.yul\":4103:4245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4251:4326   */\ntag_87:\n    /* \"#utility.yul\":4294:4297   */\n  0x00\n    /* \"#utility.yul\":4315:4320   */\n  dup2\n    /* \"#utility.yul\":4308:4320   */\n  swap1\n  pop\n    /* \"#utility.yul\":4251:4326   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4332:4601   */\ntag_88:\n    /* \"#utility.yul\":4442:4481   */\n  tag_155\n    /* \"#utility.yul\":4473:4480   */\n  dup4\n    /* \"#utility.yul\":4442:4481   */\n  tag_86\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4503:4594   */\n  tag_156\n    /* \"#utility.yul\":4552:4593   */\n  tag_157\n    /* \"#utility.yul\":4576:4592   */\n  dup3\n    /* \"#utility.yul\":4552:4593   */\n  tag_87\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":4544:4550   */\n  dup5\n    /* \"#utility.yul\":4537:4541   */\n  dup5\n    /* \"#utility.yul\":4531:4542   */\n  sload\n    /* \"#utility.yul\":4503:4594   */\n  tag_84\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":4497:4501   */\n  dup3\n    /* \"#utility.yul\":4490:4595   */\n  sstore\n    /* \"#utility.yul\":4408:4601   */\n  pop\n    /* \"#utility.yul\":4332:4601   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4607:4680   */\ntag_89:\n    /* \"#utility.yul\":4652:4655   */\n  0x00\n    /* \"#utility.yul\":4673:4674   */\n  0x00\n    /* \"#utility.yul\":4666:4674   */\n  swap1\n  pop\n    /* \"#utility.yul\":4607:4680   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4686:4875   */\ntag_90:\n    /* \"#utility.yul\":4763:4795   */\n  tag_160\n  tag_89\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":4804:4869   */\n  tag_161\n    /* \"#utility.yul\":4862:4868   */\n  dup2\n    /* \"#utility.yul\":4854:4860   */\n  dup5\n    /* \"#utility.yul\":4848:4852   */\n  dup5\n    /* \"#utility.yul\":4804:4869   */\n  tag_88\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":4739:4875   */\n  pop\n    /* \"#utility.yul\":4686:4875   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4881:5067   */\ntag_91:\n    /* \"#utility.yul\":4941:5061   */\ntag_163:\n    /* \"#utility.yul\":4958:4961   */\n  dup2\n    /* \"#utility.yul\":4951:4956   */\n  dup2\n    /* \"#utility.yul\":4948:4962   */\n  lt\n    /* \"#utility.yul\":4941:5061   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":5012:5051   */\n  tag_166\n    /* \"#utility.yul\":5049:5050   */\n  0x00\n    /* \"#utility.yul\":5042:5047   */\n  dup3\n    /* \"#utility.yul\":5012:5051   */\n  tag_90\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":4985:4986   */\n  0x01\n    /* \"#utility.yul\":4978:4983   */\n  dup2\n    /* \"#utility.yul\":4974:4987   */\n  add\n    /* \"#utility.yul\":4965:4987   */\n  swap1\n  pop\n    /* \"#utility.yul\":4941:5061   */\n  jump(tag_163)\ntag_165:\n    /* \"#utility.yul\":4881:5067   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5073:5616   */\ntag_92:\n    /* \"#utility.yul\":5174:5176   */\n  0x1f\n    /* \"#utility.yul\":5169:5172   */\n  dup3\n    /* \"#utility.yul\":5166:5177   */\n  gt\n    /* \"#utility.yul\":5163:5609   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":5208:5246   */\n  tag_169\n    /* \"#utility.yul\":5240:5245   */\n  dup2\n    /* \"#utility.yul\":5208:5246   */\n  tag_81\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":5292:5321   */\n  tag_170\n    /* \"#utility.yul\":5310:5320   */\n  dup5\n    /* \"#utility.yul\":5292:5321   */\n  tag_82\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":5282:5290   */\n  dup2\n    /* \"#utility.yul\":5278:5322   */\n  add\n    /* \"#utility.yul\":5475:5477   */\n  0x20\n    /* \"#utility.yul\":5463:5473   */\n  dup6\n    /* \"#utility.yul\":5460:5478   */\n  lt\n    /* \"#utility.yul\":5457:5506   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":5496:5504   */\n  dup2\n    /* \"#utility.yul\":5481:5504   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5506   */\ntag_171:\n    /* \"#utility.yul\":5519:5599   */\n  tag_172\n    /* \"#utility.yul\":5575:5597   */\n  tag_173\n    /* \"#utility.yul\":5593:5596   */\n  dup6\n    /* \"#utility.yul\":5575:5597   */\n  tag_82\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":5565:5573   */\n  dup4\n    /* \"#utility.yul\":5561:5598   */\n  add\n    /* \"#utility.yul\":5548:5559   */\n  dup3\n    /* \"#utility.yul\":5519:5599   */\n  tag_91\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":5178:5609   */\n  pop\n  pop\n    /* \"#utility.yul\":5163:5609   */\ntag_168:\n    /* \"#utility.yul\":5073:5616   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5622:5739   */\ntag_93:\n    /* \"#utility.yul\":5676:5684   */\n  0x00\n    /* \"#utility.yul\":5726:5731   */\n  dup3\n    /* \"#utility.yul\":5720:5724   */\n  dup3\n    /* \"#utility.yul\":5716:5732   */\n  shr\n    /* \"#utility.yul\":5695:5732   */\n  swap1\n  pop\n    /* \"#utility.yul\":5622:5739   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5745:5914   */\ntag_94:\n    /* \"#utility.yul\":5789:5795   */\n  0x00\n    /* \"#utility.yul\":5822:5873   */\n  tag_176\n    /* \"#utility.yul\":5870:5871   */\n  0x00\n    /* \"#utility.yul\":5866:5872   */\n  not\n    /* \"#utility.yul\":5858:5863   */\n  dup5\n    /* \"#utility.yul\":5855:5856   */\n  0x08\n    /* \"#utility.yul\":5851:5864   */\n  mul\n    /* \"#utility.yul\":5822:5873   */\n  tag_93\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":5818:5874   */\n  not\n    /* \"#utility.yul\":5903:5907   */\n  dup1\n    /* \"#utility.yul\":5897:5901   */\n  dup4\n    /* \"#utility.yul\":5893:5908   */\n  and\n    /* \"#utility.yul\":5883:5908   */\n  swap2\n  pop\n    /* \"#utility.yul\":5796:5914   */\n  pop\n    /* \"#utility.yul\":5745:5914   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5919:6214   */\ntag_95:\n    /* \"#utility.yul\":5995:5999   */\n  0x00\n    /* \"#utility.yul\":6141:6170   */\n  tag_178\n    /* \"#utility.yul\":6166:6169   */\n  dup4\n    /* \"#utility.yul\":6160:6164   */\n  dup4\n    /* \"#utility.yul\":6141:6170   */\n  tag_94\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6133:6170   */\n  swap2\n  pop\n    /* \"#utility.yul\":6203:6206   */\n  dup3\n    /* \"#utility.yul\":6200:6201   */\n  0x02\n    /* \"#utility.yul\":6196:6207   */\n  mul\n    /* \"#utility.yul\":6190:6194   */\n  dup3\n    /* \"#utility.yul\":6187:6208   */\n  or\n    /* \"#utility.yul\":6179:6208   */\n  swap1\n  pop\n    /* \"#utility.yul\":5919:6214   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6219:7614   */\ntag_12:\n    /* \"#utility.yul\":6336:6373   */\n  tag_180\n    /* \"#utility.yul\":6369:6372   */\n  dup3\n    /* \"#utility.yul\":6336:6373   */\n  tag_77\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6438:6456   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6430:6436   */\n  dup2\n    /* \"#utility.yul\":6427:6457   */\n  gt\n    /* \"#utility.yul\":6424:6480   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":6460:6478   */\n  tag_182\n  tag_78\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":6424:6480   */\ntag_181:\n    /* \"#utility.yul\":6504:6542   */\n  tag_183\n    /* \"#utility.yul\":6536:6540   */\n  dup3\n    /* \"#utility.yul\":6530:6541   */\n  sload\n    /* \"#utility.yul\":6504:6542   */\n  tag_80\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":6589:6656   */\n  tag_184\n    /* \"#utility.yul\":6649:6655   */\n  dup3\n    /* \"#utility.yul\":6641:6647   */\n  dup3\n    /* \"#utility.yul\":6635:6639   */\n  dup6\n    /* \"#utility.yul\":6589:6656   */\n  tag_92\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":6683:6684   */\n  0x00\n    /* \"#utility.yul\":6707:6711   */\n  0x20\n    /* \"#utility.yul\":6694:6711   */\n  swap1\n  pop\n    /* \"#utility.yul\":6739:6741   */\n  0x1f\n    /* \"#utility.yul\":6731:6737   */\n  dup4\n    /* \"#utility.yul\":6728:6742   */\n  gt\n    /* \"#utility.yul\":6756:6757   */\n  0x01\n    /* \"#utility.yul\":6751:7369   */\n  dup2\n  eq\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7413:7414   */\n  0x00\n    /* \"#utility.yul\":7430:7436   */\n  dup5\n    /* \"#utility.yul\":7427:7504   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":7479:7488   */\n  dup3\n    /* \"#utility.yul\":7474:7477   */\n  dup8\n    /* \"#utility.yul\":7470:7489   */\n  add\n    /* \"#utility.yul\":7464:7490   */\n  mload\n    /* \"#utility.yul\":7455:7490   */\n  swap1\n  pop\n    /* \"#utility.yul\":7427:7504   */\ntag_187:\n    /* \"#utility.yul\":7530:7597   */\n  tag_188\n    /* \"#utility.yul\":7590:7596   */\n  dup6\n    /* \"#utility.yul\":7583:7588   */\n  dup3\n    /* \"#utility.yul\":7530:7597   */\n  tag_95\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7524:7528   */\n  dup7\n    /* \"#utility.yul\":7517:7598   */\n  sstore\n    /* \"#utility.yul\":7386:7608   */\n  pop\n    /* \"#utility.yul\":6721:7608   */\n  jump(tag_185)\n    /* \"#utility.yul\":6751:7369   */\ntag_186:\n    /* \"#utility.yul\":6803:6807   */\n  0x1f\n    /* \"#utility.yul\":6799:6808   */\n  not\n    /* \"#utility.yul\":6791:6797   */\n  dup5\n    /* \"#utility.yul\":6787:6809   */\n  and\n    /* \"#utility.yul\":6837:6874   */\n  tag_189\n    /* \"#utility.yul\":6869:6873   */\n  dup7\n    /* \"#utility.yul\":6837:6874   */\n  tag_81\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":6896:6897   */\n  0x00\n    /* \"#utility.yul\":6910:7118   */\ntag_190:\n    /* \"#utility.yul\":6924:6931   */\n  dup3\n    /* \"#utility.yul\":6921:6922   */\n  dup2\n    /* \"#utility.yul\":6918:6932   */\n  lt\n    /* \"#utility.yul\":6910:7118   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":7003:7012   */\n  dup5\n    /* \"#utility.yul\":6998:7001   */\n  dup10\n    /* \"#utility.yul\":6994:7013   */\n  add\n    /* \"#utility.yul\":6988:7014   */\n  mload\n    /* \"#utility.yul\":6980:6986   */\n  dup3\n    /* \"#utility.yul\":6973:7015   */\n  sstore\n    /* \"#utility.yul\":7054:7055   */\n  0x01\n    /* \"#utility.yul\":7046:7052   */\n  dup3\n    /* \"#utility.yul\":7042:7056   */\n  add\n    /* \"#utility.yul\":7032:7056   */\n  swap2\n  pop\n    /* \"#utility.yul\":7101:7103   */\n  0x20\n    /* \"#utility.yul\":7090:7099   */\n  dup6\n    /* \"#utility.yul\":7086:7104   */\n  add\n    /* \"#utility.yul\":7073:7104   */\n  swap5\n  pop\n    /* \"#utility.yul\":6947:6951   */\n  0x20\n    /* \"#utility.yul\":6944:6945   */\n  dup2\n    /* \"#utility.yul\":6940:6952   */\n  add\n    /* \"#utility.yul\":6935:6952   */\n  swap1\n  pop\n    /* \"#utility.yul\":6910:7118   */\n  jump(tag_190)\ntag_192:\n    /* \"#utility.yul\":7146:7152   */\n  dup7\n    /* \"#utility.yul\":7137:7144   */\n  dup4\n    /* \"#utility.yul\":7134:7153   */\n  lt\n    /* \"#utility.yul\":7131:7310   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":7204:7213   */\n  dup5\n    /* \"#utility.yul\":7199:7202   */\n  dup10\n    /* \"#utility.yul\":7195:7214   */\n  add\n    /* \"#utility.yul\":7189:7215   */\n  mload\n    /* \"#utility.yul\":7247:7295   */\n  tag_194\n    /* \"#utility.yul\":7289:7293   */\n  0x1f\n    /* \"#utility.yul\":7281:7287   */\n  dup10\n    /* \"#utility.yul\":7277:7294   */\n  and\n    /* \"#utility.yul\":7266:7275   */\n  dup3\n    /* \"#utility.yul\":7247:7295   */\n  tag_94\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":7239:7245   */\n  dup4\n    /* \"#utility.yul\":7232:7296   */\n  sstore\n    /* \"#utility.yul\":7154:7310   */\n  pop\n    /* \"#utility.yul\":7131:7310   */\ntag_193:\n    /* \"#utility.yul\":7356:7357   */\n  0x01\n    /* \"#utility.yul\":7352:7353   */\n  0x02\n    /* \"#utility.yul\":7344:7350   */\n  dup9\n    /* \"#utility.yul\":7340:7354   */\n  mul\n    /* \"#utility.yul\":7336:7358   */\n  add\n    /* \"#utility.yul\":7330:7334   */\n  dup9\n    /* \"#utility.yul\":7323:7359   */\n  sstore\n    /* \"#utility.yul\":6758:7369   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6721:7608   */\ntag_185:\n  pop\n    /* \"#utility.yul\":6311:7614   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6219:7614   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7620:7705   */\ntag_96:\n    /* \"#utility.yul\":7665:7672   */\n  0x00\n    /* \"#utility.yul\":7694:7699   */\n  dup2\n    /* \"#utility.yul\":7683:7699   */\n  swap1\n  pop\n    /* \"#utility.yul\":7620:7705   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7711:7869   */\ntag_97:\n    /* \"#utility.yul\":7769:7778   */\n  0x00\n    /* \"#utility.yul\":7802:7863   */\n  tag_197\n    /* \"#utility.yul\":7820:7862   */\n  tag_198\n    /* \"#utility.yul\":7829:7861   */\n  tag_199\n    /* \"#utility.yul\":7855:7860   */\n  dup5\n    /* \"#utility.yul\":7829:7861   */\n  tag_96\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":7820:7862   */\n  tag_85\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":7802:7863   */\n  tag_69\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":7789:7863   */\n  swap1\n  pop\n    /* \"#utility.yul\":7711:7869   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7875:8022   */\ntag_98:\n    /* \"#utility.yul\":7970:8015   */\n  tag_201\n    /* \"#utility.yul\":8009:8014   */\n  dup2\n    /* \"#utility.yul\":7970:8015   */\n  tag_97\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":7965:7968   */\n  dup3\n    /* \"#utility.yul\":7958:8016   */\n  mstore\n    /* \"#utility.yul\":7875:8022   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8028:8266   */\ntag_17:\n    /* \"#utility.yul\":8129:8133   */\n  0x00\n    /* \"#utility.yul\":8167:8169   */\n  0x20\n    /* \"#utility.yul\":8156:8165   */\n  dup3\n    /* \"#utility.yul\":8152:8170   */\n  add\n    /* \"#utility.yul\":8144:8170   */\n  swap1\n  pop\n    /* \"#utility.yul\":8180:8259   */\n  tag_203\n    /* \"#utility.yul\":8256:8257   */\n  0x00\n    /* \"#utility.yul\":8245:8254   */\n  dup4\n    /* \"#utility.yul\":8241:8258   */\n  add\n    /* \"#utility.yul\":8232:8238   */\n  dup5\n    /* \"#utility.yul\":8180:8259   */\n  tag_98\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8028:8266   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8272:8390   */\ntag_99:\n    /* \"#utility.yul\":8359:8383   */\n  tag_205\n    /* \"#utility.yul\":8377:8382   */\n  dup2\n    /* \"#utility.yul\":8359:8383   */\n  tag_73\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":8354:8357   */\n  dup3\n    /* \"#utility.yul\":8347:8384   */\n  mstore\n    /* \"#utility.yul\":8272:8390   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8396:8618   */\ntag_21:\n    /* \"#utility.yul\":8489:8493   */\n  0x00\n    /* \"#utility.yul\":8527:8529   */\n  0x20\n    /* \"#utility.yul\":8516:8525   */\n  dup3\n    /* \"#utility.yul\":8512:8530   */\n  add\n    /* \"#utility.yul\":8504:8530   */\n  swap1\n  pop\n    /* \"#utility.yul\":8540:8611   */\n  tag_207\n    /* \"#utility.yul\":8608:8609   */\n  0x00\n    /* \"#utility.yul\":8597:8606   */\n  dup4\n    /* \"#utility.yul\":8593:8610   */\n  add\n    /* \"#utility.yul\":8584:8590   */\n  dup5\n    /* \"#utility.yul\":8540:8611   */\n  tag_99\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":8396:8618   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8624:8793   */\ntag_100:\n    /* \"#utility.yul\":8708:8719   */\n  0x00\n    /* \"#utility.yul\":8742:8748   */\n  dup3\n    /* \"#utility.yul\":8737:8740   */\n  dup3\n    /* \"#utility.yul\":8730:8749   */\n  mstore\n    /* \"#utility.yul\":8782:8786   */\n  0x20\n    /* \"#utility.yul\":8777:8780   */\n  dup3\n    /* \"#utility.yul\":8773:8787   */\n  add\n    /* \"#utility.yul\":8758:8787   */\n  swap1\n  pop\n    /* \"#utility.yul\":8624:8793   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8799:9024   */\ntag_101:\n    /* \"#utility.yul\":8939:8973   */\n  0x436170206d757374206265206174206c65617374203730206d696c6c696f6e20\n    /* \"#utility.yul\":8935:8936   */\n  0x00\n    /* \"#utility.yul\":8927:8933   */\n  dup3\n    /* \"#utility.yul\":8923:8937   */\n  add\n    /* \"#utility.yul\":8916:8974   */\n  mstore\n    /* \"#utility.yul\":9008:9016   */\n  0x746f6b656e730000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9003:9005   */\n  0x20\n    /* \"#utility.yul\":8995:9001   */\n  dup3\n    /* \"#utility.yul\":8991:9006   */\n  add\n    /* \"#utility.yul\":8984:9017   */\n  mstore\n    /* \"#utility.yul\":8799:9024   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9030:9396   */\ntag_102:\n    /* \"#utility.yul\":9172:9175   */\n  0x00\n    /* \"#utility.yul\":9193:9260   */\n  tag_211\n    /* \"#utility.yul\":9257:9259   */\n  0x26\n    /* \"#utility.yul\":9252:9255   */\n  dup4\n    /* \"#utility.yul\":9193:9260   */\n  tag_100\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":9186:9260   */\n  swap2\n  pop\n    /* \"#utility.yul\":9269:9362   */\n  tag_212\n    /* \"#utility.yul\":9358:9361   */\n  dup3\n    /* \"#utility.yul\":9269:9362   */\n  tag_101\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":9387:9389   */\n  0x40\n    /* \"#utility.yul\":9382:9385   */\n  dup3\n    /* \"#utility.yul\":9378:9390   */\n  add\n    /* \"#utility.yul\":9371:9390   */\n  swap1\n  pop\n    /* \"#utility.yul\":9030:9396   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9402:9821   */\ntag_27:\n    /* \"#utility.yul\":9568:9572   */\n  0x00\n    /* \"#utility.yul\":9606:9608   */\n  0x20\n    /* \"#utility.yul\":9595:9604   */\n  dup3\n    /* \"#utility.yul\":9591:9609   */\n  add\n    /* \"#utility.yul\":9583:9609   */\n  swap1\n  pop\n    /* \"#utility.yul\":9655:9664   */\n  dup2\n    /* \"#utility.yul\":9649:9653   */\n  dup2\n    /* \"#utility.yul\":9645:9665   */\n  sub\n    /* \"#utility.yul\":9641:9642   */\n  0x00\n    /* \"#utility.yul\":9630:9639   */\n  dup4\n    /* \"#utility.yul\":9626:9643   */\n  add\n    /* \"#utility.yul\":9619:9666   */\n  mstore\n    /* \"#utility.yul\":9683:9814   */\n  tag_214\n    /* \"#utility.yul\":9809:9813   */\n  dup2\n    /* \"#utility.yul\":9683:9814   */\n  tag_102\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9675:9814   */\n  swap1\n  pop\n    /* \"#utility.yul\":9402:9821   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9827:9945   */\ntag_103:\n    /* \"#utility.yul\":9914:9938   */\n  tag_216\n    /* \"#utility.yul\":9932:9937   */\n  dup2\n    /* \"#utility.yul\":9914:9938   */\n  tag_69\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":9909:9912   */\n  dup3\n    /* \"#utility.yul\":9902:9939   */\n  mstore\n    /* \"#utility.yul\":9827:9945   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9951:10283   */\ntag_51:\n    /* \"#utility.yul\":10072:10076   */\n  0x00\n    /* \"#utility.yul\":10110:10112   */\n  0x40\n    /* \"#utility.yul\":10099:10108   */\n  dup3\n    /* \"#utility.yul\":10095:10113   */\n  add\n    /* \"#utility.yul\":10087:10113   */\n  swap1\n  pop\n    /* \"#utility.yul\":10123:10194   */\n  tag_218\n    /* \"#utility.yul\":10191:10192   */\n  0x00\n    /* \"#utility.yul\":10180:10189   */\n  dup4\n    /* \"#utility.yul\":10176:10193   */\n  add\n    /* \"#utility.yul\":10167:10173   */\n  dup6\n    /* \"#utility.yul\":10123:10194   */\n  tag_103\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":10204:10276   */\n  tag_219\n    /* \"#utility.yul\":10272:10274   */\n  0x20\n    /* \"#utility.yul\":10261:10270   */\n  dup4\n    /* \"#utility.yul\":10257:10275   */\n  add\n    /* \"#utility.yul\":10248:10254   */\n  dup5\n    /* \"#utility.yul\":10204:10276   */\n  tag_103\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":9951:10283   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10289:10480   */\ntag_55:\n    /* \"#utility.yul\":10329:10332   */\n  0x00\n    /* \"#utility.yul\":10348:10368   */\n  tag_221\n    /* \"#utility.yul\":10366:10367   */\n  dup3\n    /* \"#utility.yul\":10348:10368   */\n  tag_69\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":10343:10368   */\n  swap2\n  pop\n    /* \"#utility.yul\":10382:10402   */\n  tag_222\n    /* \"#utility.yul\":10400:10401   */\n  dup4\n    /* \"#utility.yul\":10382:10402   */\n  tag_69\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10377:10402   */\n  swap3\n  pop\n    /* \"#utility.yul\":10425:10426   */\n  dup3\n    /* \"#utility.yul\":10422:10423   */\n  dup3\n    /* \"#utility.yul\":10418:10427   */\n  add\n    /* \"#utility.yul\":10411:10427   */\n  swap1\n  pop\n    /* \"#utility.yul\":10446:10449   */\n  dup1\n    /* \"#utility.yul\":10443:10444   */\n  dup3\n    /* \"#utility.yul\":10440:10450   */\n  gt\n    /* \"#utility.yul\":10437:10473   */\n  iszero\n  tag_223\n  jumpi\n    /* \"#utility.yul\":10453:10471   */\n  tag_224\n  tag_76\n  jump\t// in\ntag_224:\n    /* \"#utility.yul\":10437:10473   */\ntag_223:\n    /* \"#utility.yul\":10289:10480   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10486:10928   */\ntag_59:\n    /* \"#utility.yul\":10635:10639   */\n  0x00\n    /* \"#utility.yul\":10673:10675   */\n  0x60\n    /* \"#utility.yul\":10662:10671   */\n  dup3\n    /* \"#utility.yul\":10658:10676   */\n  add\n    /* \"#utility.yul\":10650:10676   */\n  swap1\n  pop\n    /* \"#utility.yul\":10686:10757   */\n  tag_226\n    /* \"#utility.yul\":10754:10755   */\n  0x00\n    /* \"#utility.yul\":10743:10752   */\n  dup4\n    /* \"#utility.yul\":10739:10756   */\n  add\n    /* \"#utility.yul\":10730:10736   */\n  dup7\n    /* \"#utility.yul\":10686:10757   */\n  tag_99\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":10767:10839   */\n  tag_227\n    /* \"#utility.yul\":10835:10837   */\n  0x20\n    /* \"#utility.yul\":10824:10833   */\n  dup4\n    /* \"#utility.yul\":10820:10838   */\n  add\n    /* \"#utility.yul\":10811:10817   */\n  dup6\n    /* \"#utility.yul\":10767:10839   */\n  tag_103\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":10849:10921   */\n  tag_228\n    /* \"#utility.yul\":10917:10919   */\n  0x40\n    /* \"#utility.yul\":10906:10915   */\n  dup4\n    /* \"#utility.yul\":10902:10920   */\n  add\n    /* \"#utility.yul\":10893:10899   */\n  dup5\n    /* \"#utility.yul\":10849:10921   */\n  tag_103\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":10486:10928   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10934:11156   */\ntag_63:\n    /* \"#utility.yul\":11027:11031   */\n  0x00\n    /* \"#utility.yul\":11065:11067   */\n  0x20\n    /* \"#utility.yul\":11054:11063   */\n  dup3\n    /* \"#utility.yul\":11050:11068   */\n  add\n    /* \"#utility.yul\":11042:11068   */\n  swap1\n  pop\n    /* \"#utility.yul\":11078:11149   */\n  tag_230\n    /* \"#utility.yul\":11146:11147   */\n  0x00\n    /* \"#utility.yul\":11135:11144   */\n  dup4\n    /* \"#utility.yul\":11131:11148   */\n  add\n    /* \"#utility.yul\":11122:11128   */\n  dup5\n    /* \"#utility.yul\":11078:11149   */\n  tag_103\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":10934:11156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/ERC-20.sol\":324:1618  contract MyToken is ERC20Capped, ERC20Burnable, Ownable {... */\ntag_31:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x69de3b38836c938ac93bb31643655e6e0a011af0f354a009a432084d0f963864\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC-20.sol\":324:1618  contract MyToken is ERC20Capped, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42966c68\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x1a18e707\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x1a18e707\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ac168a1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-20.sol\":387:413  uint256 public blockReward */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ERC-20.sol\":1238:1345  function setBlockReward(uint256 reward) external onlyOwner {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-20.sol\":387:413  uint256 public blockReward */\n    tag_34:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ERC-20.sol\":1238:1345  function setBlockReward(uint256 reward) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/ERC-20.sol\":1331:1337  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/ERC-20.sol\":1322:1328  reward */\n      dup2\n        /* \"contracts/ERC-20.sol\":1322:1337  reward * 10**18 */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/ERC-20.sol\":1308:1319  blockReward */\n      0x06\n        /* \"contracts/ERC-20.sol\":1308:1337  blockReward = reward * 10**18 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/ERC-20.sol\":1238:1345  function setBlockReward(uint256 reward) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":967:974  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":993:997  _cap */\n      immutable(\"0x69de3b38836c938ac93bb31643655e6e0a011af0f354a009a432084d0f963864\")\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":986:997  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":923:1004  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_90\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_90\n      jump\t// in\n    tag_132:\n      dup1\n      iszero\n      tag_133\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_134\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_133)\n    tag_134:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_135:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_135\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_70\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC-20.sol\":1414:1615  function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Capped) {... */\n    tag_169:\n        /* \"contracts/ERC-20.sol\":1529:1565  ERC20Capped._update(from, to, value) */\n      tag_183\n        /* \"contracts/ERC-20.sol\":1549:1553  from */\n      dup4\n        /* \"contracts/ERC-20.sol\":1555:1557  to */\n      dup4\n        /* \"contracts/ERC-20.sol\":1559:1564  value */\n      dup4\n        /* \"contracts/ERC-20.sol\":1529:1548  ERC20Capped._update */\n      tag_184\n        /* \"contracts/ERC-20.sol\":1529:1565  ERC20Capped._update(from, to, value) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/ERC-20.sol\":1414:1615  function _update(address from, address to, uint256 value) internal virtual override(ERC20, ERC20Capped) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1167:1171  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1173:1175  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1177:1182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1166  super._update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1153:1183  super._update(from, to, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1214:1215  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1202  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1198:1216  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1249  uint256 maxSupply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1255  cap */\n      tag_54\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1252:1257  cap() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1232:1257  uint256 maxSupply = cap() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1285  uint256 supply */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1299  totalSupply */\n      tag_38\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1288:1301  totalSupply() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1271:1301  uint256 supply = totalSupply() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1328:1337  maxSupply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1325  supply */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1319:1337  supply > maxSupply */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1381:1387  supply */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1389:1398  maxSupply */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1364:1399  ERC20ExceededCap(supply, maxSupply) */\n      mload(0x40)\n      0x9e79f85400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1315:1414  if (supply > maxSupply) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1218:1424  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1194:1424  if (from == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":1059:1430  function _update(address from, address to, uint256 value) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_198)\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_202)\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_204:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_205:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_206:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_207:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_208:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_233\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_204\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":711:782   */\n      tag_234\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_205\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_235\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_206\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":881:910   */\n      tag_236\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_207\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_238\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_208\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_210:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_212:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_213:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_244\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_212\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_214:\n        /* \"#utility.yul\":1876:1900   */\n      tag_246\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_213\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_247:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_215:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_249\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_214\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_216:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_217:\n        /* \"#utility.yul\":2232:2256   */\n      tag_252\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_216\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_253:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_218:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_255\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_217\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_258\n      tag_210\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2525:2644   */\n    tag_257:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_259\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_215\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_260\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_218\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_219:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_220:\n        /* \"#utility.yul\":3089:3110   */\n      tag_263\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_219\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_265\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_220\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_221:\n        /* \"#utility.yul\":3426:3450   */\n      tag_267\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_216\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_269\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_221\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_42:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_272\n      tag_210\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3767:3886   */\n    tag_271:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_273\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_218\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_46:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_276\n      tag_210\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4136:4255   */\n    tag_275:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_277\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_215\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_278\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_215\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_279\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_218\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_222:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_223:\n        /* \"#utility.yul\":4826:4848   */\n      tag_282\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_222\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_52:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_284\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_223\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_61:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_287\n      tag_210\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5157:5276   */\n    tag_286:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_288\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_215\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_224:\n        /* \"#utility.yul\":5503:5527   */\n      tag_290\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_213\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_72:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_292\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_224\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_82:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_295\n      tag_210\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5861:5980   */\n    tag_294:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_296\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_215\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_297\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_215\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_225:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_90:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_300:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_302\n      tag_225\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6664:6748   */\n    tag_301:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6940   */\n    tag_226:\n        /* \"#utility.yul\":6808:6885   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6798:6886   */\n      mstore\n        /* \"#utility.yul\":6905:6909   */\n      0x11\n        /* \"#utility.yul\":6902:6903   */\n      0x04\n        /* \"#utility.yul\":6895:6910   */\n      mstore\n        /* \"#utility.yul\":6929:6933   */\n      0x24\n        /* \"#utility.yul\":6926:6927   */\n      0x00\n        /* \"#utility.yul\":6919:6934   */\n      revert\n        /* \"#utility.yul\":6946:7356   */\n    tag_106:\n        /* \"#utility.yul\":6986:6993   */\n      0x00\n        /* \"#utility.yul\":7009:7029   */\n      tag_305\n        /* \"#utility.yul\":7027:7028   */\n      dup3\n        /* \"#utility.yul\":7009:7029   */\n      tag_216\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7004:7029   */\n      swap2\n      pop\n        /* \"#utility.yul\":7043:7063   */\n      tag_306\n        /* \"#utility.yul\":7061:7062   */\n      dup4\n        /* \"#utility.yul\":7043:7063   */\n      tag_216\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7038:7063   */\n      swap3\n      pop\n        /* \"#utility.yul\":7098:7099   */\n      dup3\n        /* \"#utility.yul\":7095:7096   */\n      dup3\n        /* \"#utility.yul\":7091:7100   */\n      mul\n        /* \"#utility.yul\":7120:7150   */\n      tag_307\n        /* \"#utility.yul\":7138:7149   */\n      dup2\n        /* \"#utility.yul\":7120:7150   */\n      tag_216\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7109:7150   */\n      swap2\n      pop\n        /* \"#utility.yul\":7299:7300   */\n      dup3\n        /* \"#utility.yul\":7290:7297   */\n      dup3\n        /* \"#utility.yul\":7286:7301   */\n      div\n        /* \"#utility.yul\":7283:7284   */\n      dup5\n        /* \"#utility.yul\":7280:7302   */\n      eq\n        /* \"#utility.yul\":7260:7261   */\n      dup4\n        /* \"#utility.yul\":7253:7262   */\n      iszero\n        /* \"#utility.yul\":7233:7316   */\n      or\n        /* \"#utility.yul\":7210:7349   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":7329:7347   */\n      tag_309\n      tag_226\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7210:7349   */\n    tag_308:\n        /* \"#utility.yul\":6994:7356   */\n      pop\n        /* \"#utility.yul\":6946:7356   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7362:7804   */\n    tag_161:\n        /* \"#utility.yul\":7511:7515   */\n      0x00\n        /* \"#utility.yul\":7549:7551   */\n      0x60\n        /* \"#utility.yul\":7538:7547   */\n      dup3\n        /* \"#utility.yul\":7534:7552   */\n      add\n        /* \"#utility.yul\":7526:7552   */\n      swap1\n      pop\n        /* \"#utility.yul\":7562:7633   */\n      tag_311\n        /* \"#utility.yul\":7630:7631   */\n      0x00\n        /* \"#utility.yul\":7619:7628   */\n      dup4\n        /* \"#utility.yul\":7615:7632   */\n      add\n        /* \"#utility.yul\":7606:7612   */\n      dup7\n        /* \"#utility.yul\":7562:7633   */\n      tag_224\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7643:7715   */\n      tag_312\n        /* \"#utility.yul\":7711:7713   */\n      0x20\n        /* \"#utility.yul\":7700:7709   */\n      dup4\n        /* \"#utility.yul\":7696:7714   */\n      add\n        /* \"#utility.yul\":7687:7693   */\n      dup6\n        /* \"#utility.yul\":7643:7715   */\n      tag_221\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7725:7797   */\n      tag_313\n        /* \"#utility.yul\":7793:7795   */\n      0x40\n        /* \"#utility.yul\":7782:7791   */\n      dup4\n        /* \"#utility.yul\":7778:7796   */\n      add\n        /* \"#utility.yul\":7769:7775   */\n      dup5\n        /* \"#utility.yul\":7725:7797   */\n      tag_221\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7362:7804   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7810:8142   */\n    tag_193:\n        /* \"#utility.yul\":7931:7935   */\n      0x00\n        /* \"#utility.yul\":7969:7971   */\n      0x40\n        /* \"#utility.yul\":7958:7967   */\n      dup3\n        /* \"#utility.yul\":7954:7972   */\n      add\n        /* \"#utility.yul\":7946:7972   */\n      swap1\n      pop\n        /* \"#utility.yul\":7982:8053   */\n      tag_315\n        /* \"#utility.yul\":8050:8051   */\n      0x00\n        /* \"#utility.yul\":8039:8048   */\n      dup4\n        /* \"#utility.yul\":8035:8052   */\n      add\n        /* \"#utility.yul\":8026:8032   */\n      dup6\n        /* \"#utility.yul\":7982:8053   */\n      tag_221\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8063:8135   */\n      tag_316\n        /* \"#utility.yul\":8131:8133   */\n      0x20\n        /* \"#utility.yul\":8120:8129   */\n      dup4\n        /* \"#utility.yul\":8116:8134   */\n      add\n        /* \"#utility.yul\":8107:8113   */\n      dup5\n        /* \"#utility.yul\":8063:8135   */\n      tag_221\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7810:8142   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8148:8339   */\n    tag_197:\n        /* \"#utility.yul\":8188:8191   */\n      0x00\n        /* \"#utility.yul\":8207:8227   */\n      tag_318\n        /* \"#utility.yul\":8225:8226   */\n      dup3\n        /* \"#utility.yul\":8207:8227   */\n      tag_216\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8202:8227   */\n      swap2\n      pop\n        /* \"#utility.yul\":8241:8261   */\n      tag_319\n        /* \"#utility.yul\":8259:8260   */\n      dup4\n        /* \"#utility.yul\":8241:8261   */\n      tag_216\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8236:8261   */\n      swap3\n      pop\n        /* \"#utility.yul\":8284:8285   */\n      dup3\n        /* \"#utility.yul\":8281:8282   */\n      dup3\n        /* \"#utility.yul\":8277:8286   */\n      add\n        /* \"#utility.yul\":8270:8286   */\n      swap1\n      pop\n        /* \"#utility.yul\":8305:8308   */\n      dup1\n        /* \"#utility.yul\":8302:8303   */\n      dup3\n        /* \"#utility.yul\":8299:8309   */\n      gt\n        /* \"#utility.yul\":8296:8332   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":8312:8330   */\n      tag_321\n      tag_226\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8296:8332   */\n    tag_320:\n        /* \"#utility.yul\":8148:8339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212201290132b36b3545838b8a60977f0605efd61fb23a63a194e0ab3e14ea81fccdc64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1140": {
									"entryPoint": null,
									"id": 1140,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_964": {
									"entryPoint": null,
									"id": 964,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 744,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 549,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1021": {
									"entryPoint": 899,
									"id": 1021,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1236": {
									"entryPoint": 877,
									"id": 1236,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 1080,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cap_973": {
									"entryPoint": 1617,
									"id": 973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1626,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3126,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3036,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 2741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2295,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11159:9",
										"nodeType": "YulBlock",
										"src": "0:11159:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:32:9",
													"nodeType": "YulBlock",
													"src": "379:32:9",
													"statements": [
														{
															"nativeSrc": "389:16:9",
															"nodeType": "YulAssignment",
															"src": "389:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:9",
																"nodeType": "YulIdentifier",
																"src": "400:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:77:9"
											},
											{
												"body": {
													"nativeSrc": "460:79:9",
													"nodeType": "YulBlock",
													"src": "460:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:9",
																"nodeType": "YulBlock",
																"src": "517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:9",
																					"nodeType": "YulLiteral",
																					"src": "526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:9",
																					"nodeType": "YulLiteral",
																					"src": "529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:9"
																			},
																			"nativeSrc": "519:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:9"
																		},
																		"nativeSrc": "519:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:9"
																				},
																				"nativeSrc": "490:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:9"
																		},
																		"nativeSrc": "480:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:9"
																},
																"nativeSrc": "473:43:9",
																"nodeType": "YulFunctionCall",
																"src": "473:43:9"
															},
															"nativeSrc": "470:63:9",
															"nodeType": "YulIf",
															"src": "470:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:9",
														"nodeType": "YulTypedName",
														"src": "453:5:9",
														"type": ""
													}
												],
												"src": "417:122:9"
											},
											{
												"body": {
													"nativeSrc": "608:80:9",
													"nodeType": "YulBlock",
													"src": "608:80:9",
													"statements": [
														{
															"nativeSrc": "618:22:9",
															"nodeType": "YulAssignment",
															"src": "618:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:9"
																},
																"nativeSrc": "627:13:9",
																"nodeType": "YulFunctionCall",
																"src": "627:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:9"
																},
																"nativeSrc": "649:33:9",
																"nodeType": "YulFunctionCall",
																"src": "649:33:9"
															},
															"nativeSrc": "649:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:9",
														"nodeType": "YulTypedName",
														"src": "586:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:9",
														"nodeType": "YulTypedName",
														"src": "594:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:9",
														"nodeType": "YulTypedName",
														"src": "602:5:9",
														"type": ""
													}
												],
												"src": "545:143:9"
											},
											{
												"body": {
													"nativeSrc": "739:81:9",
													"nodeType": "YulBlock",
													"src": "739:81:9",
													"statements": [
														{
															"nativeSrc": "749:65:9",
															"nodeType": "YulAssignment",
															"src": "749:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:9",
																		"nodeType": "YulLiteral",
																		"src": "771:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:9"
																},
																"nativeSrc": "760:54:9",
																"nodeType": "YulFunctionCall",
																"src": "760:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:9",
														"nodeType": "YulTypedName",
														"src": "721:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:9",
														"nodeType": "YulTypedName",
														"src": "731:7:9",
														"type": ""
													}
												],
												"src": "694:126:9"
											},
											{
												"body": {
													"nativeSrc": "871:51:9",
													"nodeType": "YulBlock",
													"src": "871:51:9",
													"statements": [
														{
															"nativeSrc": "881:35:9",
															"nodeType": "YulAssignment",
															"src": "881:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:9"
																},
																"nativeSrc": "892:24:9",
																"nodeType": "YulFunctionCall",
																"src": "892:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:9",
														"nodeType": "YulTypedName",
														"src": "853:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:9",
														"nodeType": "YulTypedName",
														"src": "863:7:9",
														"type": ""
													}
												],
												"src": "826:96:9"
											},
											{
												"body": {
													"nativeSrc": "971:79:9",
													"nodeType": "YulBlock",
													"src": "971:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:9",
																"nodeType": "YulBlock",
																"src": "1028:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:9"
																			},
																			"nativeSrc": "1030:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:9"
																		},
																		"nativeSrc": "1030:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:9"
																				},
																				"nativeSrc": "1001:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:9"
																		},
																		"nativeSrc": "991:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:9"
																},
																"nativeSrc": "984:43:9",
																"nodeType": "YulFunctionCall",
																"src": "984:43:9"
															},
															"nativeSrc": "981:63:9",
															"nodeType": "YulIf",
															"src": "981:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:9",
														"nodeType": "YulTypedName",
														"src": "964:5:9",
														"type": ""
													}
												],
												"src": "928:122:9"
											},
											{
												"body": {
													"nativeSrc": "1119:80:9",
													"nodeType": "YulBlock",
													"src": "1119:80:9",
													"statements": [
														{
															"nativeSrc": "1129:22:9",
															"nodeType": "YulAssignment",
															"src": "1129:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:9"
																},
																"nativeSrc": "1138:13:9",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:9"
																},
																"nativeSrc": "1160:33:9",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:9"
															},
															"nativeSrc": "1160:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:9",
														"nodeType": "YulTypedName",
														"src": "1097:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:9",
														"nodeType": "YulTypedName",
														"src": "1105:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:9",
														"nodeType": "YulTypedName",
														"src": "1113:5:9",
														"type": ""
													}
												],
												"src": "1056:143:9"
											},
											{
												"body": {
													"nativeSrc": "1316:552:9",
													"nodeType": "YulBlock",
													"src": "1316:552:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1362:83:9",
																"nodeType": "YulBlock",
																"src": "1362:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1364:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:9"
																			},
																			"nativeSrc": "1364:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:9"
																		},
																		"nativeSrc": "1364:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1337:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1346:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1333:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:9"
																		},
																		"nativeSrc": "1333:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1358:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1329:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:9"
																},
																"nativeSrc": "1329:32:9",
																"nodeType": "YulFunctionCall",
																"src": "1329:32:9"
															},
															"nativeSrc": "1326:119:9",
															"nodeType": "YulIf",
															"src": "1326:119:9"
														},
														{
															"nativeSrc": "1455:128:9",
															"nodeType": "YulBlock",
															"src": "1455:128:9",
															"statements": [
																{
																	"nativeSrc": "1470:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1484:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1474:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1499:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1499:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1545:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1556:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1541:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:9"
																				},
																				"nativeSrc": "1541:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1565:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1509:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:9"
																		},
																		"nativeSrc": "1509:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1499:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1593:129:9",
															"nodeType": "YulBlock",
															"src": "1593:129:9",
															"statements": [
																{
																	"nativeSrc": "1608:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1622:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1612:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1638:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1638:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1684:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1695:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1680:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:9"
																				},
																				"nativeSrc": "1680:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1704:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1648:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:9"
																		},
																		"nativeSrc": "1648:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1638:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1732:129:9",
															"nodeType": "YulBlock",
															"src": "1732:129:9",
															"statements": [
																{
																	"nativeSrc": "1747:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1761:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1751:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1777:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1823:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1834:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1819:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:9"
																				},
																				"nativeSrc": "1819:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1843:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1787:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:9"
																		},
																		"nativeSrc": "1787:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1777:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1205:663:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1270:9:9",
														"nodeType": "YulTypedName",
														"src": "1270:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1281:7:9",
														"nodeType": "YulTypedName",
														"src": "1281:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1293:6:9",
														"nodeType": "YulTypedName",
														"src": "1293:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1301:6:9",
														"nodeType": "YulTypedName",
														"src": "1301:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1309:6:9",
														"nodeType": "YulTypedName",
														"src": "1309:6:9",
														"type": ""
													}
												],
												"src": "1205:663:9"
											},
											{
												"body": {
													"nativeSrc": "1902:152:9",
													"nodeType": "YulBlock",
													"src": "1902:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1919:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1919:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1922:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1922:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1912:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1912:6:9"
																},
																"nativeSrc": "1912:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1912:88:9"
															},
															"nativeSrc": "1912:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1912:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2016:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2019:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2019:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2009:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:9"
																},
																"nativeSrc": "2009:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2009:15:9"
															},
															"nativeSrc": "2009:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2009:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2040:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2040:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2043:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2043:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2033:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2033:6:9"
																},
																"nativeSrc": "2033:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2033:15:9"
															},
															"nativeSrc": "2033:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2033:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "1874:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1874:180:9"
											},
											{
												"body": {
													"nativeSrc": "2108:362:9",
													"nodeType": "YulBlock",
													"src": "2108:362:9",
													"statements": [
														{
															"nativeSrc": "2118:25:9",
															"nodeType": "YulAssignment",
															"src": "2118:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2141:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2141:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2123:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2123:17:9"
																},
																"nativeSrc": "2123:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2123:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "2118:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2118:1:9"
																}
															]
														},
														{
															"nativeSrc": "2152:25:9",
															"nodeType": "YulAssignment",
															"src": "2152:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2175:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2175:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2157:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2157:17:9"
																},
																"nativeSrc": "2157:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2157:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "2152:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "2152:1:9"
																}
															]
														},
														{
															"nativeSrc": "2186:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2186:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2209:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2209:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2212:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "2212:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2205:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2205:3:9"
																},
																"nativeSrc": "2205:9:9",
																"nodeType": "YulFunctionCall",
																"src": "2205:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "2190:11:9",
																	"nodeType": "YulTypedName",
																	"src": "2190:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2223:41:9",
															"nodeType": "YulAssignment",
															"src": "2223:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "2252:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "2252:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2234:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2234:17:9"
																},
																"nativeSrc": "2234:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2234:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2223:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2223:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2441:22:9",
																"nodeType": "YulBlock",
																"src": "2441:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2443:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "2443:16:9"
																			},
																			"nativeSrc": "2443:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2443:18:9"
																		},
																		"nativeSrc": "2443:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2443:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2374:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "2374:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2367:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2367:6:9"
																				},
																				"nativeSrc": "2367:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2367:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2397:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "2397:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2404:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "2404:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2413:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "2413:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2400:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2400:3:9"
																						},
																						"nativeSrc": "2400:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2400:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2394:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2394:2:9"
																				},
																				"nativeSrc": "2394:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2394:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2347:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:9"
																		},
																		"nativeSrc": "2347:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2347:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2327:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2327:6:9"
																},
																"nativeSrc": "2327:113:9",
																"nodeType": "YulFunctionCall",
																"src": "2327:113:9"
															},
															"nativeSrc": "2324:139:9",
															"nodeType": "YulIf",
															"src": "2324:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2060:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2091:1:9",
														"nodeType": "YulTypedName",
														"src": "2091:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2094:1:9",
														"nodeType": "YulTypedName",
														"src": "2094:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2100:7:9",
														"nodeType": "YulTypedName",
														"src": "2100:7:9",
														"type": ""
													}
												],
												"src": "2060:410:9"
											},
											{
												"body": {
													"nativeSrc": "2535:40:9",
													"nodeType": "YulBlock",
													"src": "2535:40:9",
													"statements": [
														{
															"nativeSrc": "2546:22:9",
															"nodeType": "YulAssignment",
															"src": "2546:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2562:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2562:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2556:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2556:5:9"
																},
																"nativeSrc": "2556:12:9",
																"nodeType": "YulFunctionCall",
																"src": "2556:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2546:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2546:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2476:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2518:5:9",
														"nodeType": "YulTypedName",
														"src": "2518:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2528:6:9",
														"nodeType": "YulTypedName",
														"src": "2528:6:9",
														"type": ""
													}
												],
												"src": "2476:99:9"
											},
											{
												"body": {
													"nativeSrc": "2609:152:9",
													"nodeType": "YulBlock",
													"src": "2609:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2626:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2626:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2629:77:9",
																		"nodeType": "YulLiteral",
																		"src": "2629:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2619:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2619:6:9"
																},
																"nativeSrc": "2619:88:9",
																"nodeType": "YulFunctionCall",
																"src": "2619:88:9"
															},
															"nativeSrc": "2619:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "2619:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2723:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2723:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2726:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2716:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:9"
																},
																"nativeSrc": "2716:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2716:15:9"
															},
															"nativeSrc": "2716:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2716:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2747:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2747:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2750:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2750:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2740:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2740:6:9"
																},
																"nativeSrc": "2740:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2740:15:9"
															},
															"nativeSrc": "2740:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2740:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2581:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2581:180:9"
											},
											{
												"body": {
													"nativeSrc": "2795:152:9",
													"nodeType": "YulBlock",
													"src": "2795:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2812:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2812:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2815:77:9",
																		"nodeType": "YulLiteral",
																		"src": "2815:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2805:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2805:6:9"
																},
																"nativeSrc": "2805:88:9",
																"nodeType": "YulFunctionCall",
																"src": "2805:88:9"
															},
															"nativeSrc": "2805:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "2805:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2909:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2909:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2912:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2912:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2902:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:9"
																},
																"nativeSrc": "2902:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2902:15:9"
															},
															"nativeSrc": "2902:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2902:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2933:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2933:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2936:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2936:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2926:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2926:6:9"
																},
																"nativeSrc": "2926:15:9",
																"nodeType": "YulFunctionCall",
																"src": "2926:15:9"
															},
															"nativeSrc": "2926:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "2926:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2767:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "2767:180:9"
											},
											{
												"body": {
													"nativeSrc": "3004:269:9",
													"nodeType": "YulBlock",
													"src": "3004:269:9",
													"statements": [
														{
															"nativeSrc": "3014:22:9",
															"nodeType": "YulAssignment",
															"src": "3014:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3028:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3028:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3034:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3034:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3024:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3024:3:9"
																},
																"nativeSrc": "3024:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3024:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3014:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:9"
																}
															]
														},
														{
															"nativeSrc": "3045:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3045:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3075:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3075:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3081:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3081:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3071:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3071:3:9"
																},
																"nativeSrc": "3071:12:9",
																"nodeType": "YulFunctionCall",
																"src": "3071:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3049:18:9",
																	"nodeType": "YulTypedName",
																	"src": "3049:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3122:51:9",
																"nodeType": "YulBlock",
																"src": "3122:51:9",
																"statements": [
																	{
																		"nativeSrc": "3136:27:9",
																		"nodeType": "YulAssignment",
																		"src": "3136:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3150:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "3150:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3158:4:9",
																					"nodeType": "YulLiteral",
																					"src": "3158:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3146:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3146:3:9"
																			},
																			"nativeSrc": "3146:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3146:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3136:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3136:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3102:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3102:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3095:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:9"
																},
																"nativeSrc": "3095:26:9",
																"nodeType": "YulFunctionCall",
																"src": "3095:26:9"
															},
															"nativeSrc": "3092:81:9",
															"nodeType": "YulIf",
															"src": "3092:81:9"
														},
														{
															"body": {
																"nativeSrc": "3225:42:9",
																"nodeType": "YulBlock",
																"src": "3225:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3239:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "3239:16:9"
																			},
																			"nativeSrc": "3239:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3239:18:9"
																		},
																		"nativeSrc": "3239:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3239:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3189:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "3189:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3212:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3220:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3220:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3209:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "3209:2:9"
																		},
																		"nativeSrc": "3209:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3209:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3186:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3186:2:9"
																},
																"nativeSrc": "3186:38:9",
																"nodeType": "YulFunctionCall",
																"src": "3186:38:9"
															},
															"nativeSrc": "3183:84:9",
															"nodeType": "YulIf",
															"src": "3183:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2953:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2988:4:9",
														"nodeType": "YulTypedName",
														"src": "2988:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2997:6:9",
														"nodeType": "YulTypedName",
														"src": "2997:6:9",
														"type": ""
													}
												],
												"src": "2953:320:9"
											},
											{
												"body": {
													"nativeSrc": "3333:87:9",
													"nodeType": "YulBlock",
													"src": "3333:87:9",
													"statements": [
														{
															"nativeSrc": "3343:11:9",
															"nodeType": "YulAssignment",
															"src": "3343:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "3351:3:9",
																"nodeType": "YulIdentifier",
																"src": "3351:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3343:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3343:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3371:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3371:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3374:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3374:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3364:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3364:6:9"
																},
																"nativeSrc": "3364:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3364:14:9"
															},
															"nativeSrc": "3364:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "3364:14:9"
														},
														{
															"nativeSrc": "3387:26:9",
															"nodeType": "YulAssignment",
															"src": "3387:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3405:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3408:4:9",
																		"nodeType": "YulLiteral",
																		"src": "3408:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3395:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "3395:9:9"
																},
																"nativeSrc": "3395:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3395:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3387:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3387:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3279:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3320:3:9",
														"nodeType": "YulTypedName",
														"src": "3320:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3328:4:9",
														"nodeType": "YulTypedName",
														"src": "3328:4:9",
														"type": ""
													}
												],
												"src": "3279:141:9"
											},
											{
												"body": {
													"nativeSrc": "3470:49:9",
													"nodeType": "YulBlock",
													"src": "3470:49:9",
													"statements": [
														{
															"nativeSrc": "3480:33:9",
															"nodeType": "YulAssignment",
															"src": "3480:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3498:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3498:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3505:2:9",
																				"nodeType": "YulLiteral",
																				"src": "3505:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3494:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3494:3:9"
																		},
																		"nativeSrc": "3494:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3494:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3510:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3510:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3490:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3490:3:9"
																},
																"nativeSrc": "3490:23:9",
																"nodeType": "YulFunctionCall",
																"src": "3490:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3480:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3480:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3426:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3453:5:9",
														"nodeType": "YulTypedName",
														"src": "3453:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3463:6:9",
														"nodeType": "YulTypedName",
														"src": "3463:6:9",
														"type": ""
													}
												],
												"src": "3426:93:9"
											},
											{
												"body": {
													"nativeSrc": "3578:54:9",
													"nodeType": "YulBlock",
													"src": "3578:54:9",
													"statements": [
														{
															"nativeSrc": "3588:37:9",
															"nodeType": "YulAssignment",
															"src": "3588:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3613:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3613:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3619:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3619:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3609:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3609:3:9"
																},
																"nativeSrc": "3609:16:9",
																"nodeType": "YulFunctionCall",
																"src": "3609:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3588:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3588:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3525:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3553:4:9",
														"nodeType": "YulTypedName",
														"src": "3553:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3559:5:9",
														"nodeType": "YulTypedName",
														"src": "3559:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3569:8:9",
														"nodeType": "YulTypedName",
														"src": "3569:8:9",
														"type": ""
													}
												],
												"src": "3525:107:9"
											},
											{
												"body": {
													"nativeSrc": "3714:317:9",
													"nodeType": "YulBlock",
													"src": "3714:317:9",
													"statements": [
														{
															"nativeSrc": "3724:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3724:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3745:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "3745:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3757:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3757:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3741:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3741:3:9"
																},
																"nativeSrc": "3741:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3741:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3728:9:9",
																	"nodeType": "YulTypedName",
																	"src": "3728:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3768:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3768:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3799:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3799:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:66:9",
																		"nodeType": "YulLiteral",
																		"src": "3810:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3780:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3780:18:9"
																},
																"nativeSrc": "3780:97:9",
																"nodeType": "YulFunctionCall",
																"src": "3780:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3772:4:9",
																	"nodeType": "YulTypedName",
																	"src": "3772:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3886:51:9",
															"nodeType": "YulAssignment",
															"src": "3886:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3917:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3917:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3928:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "3928:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3898:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "3898:18:9"
																},
																"nativeSrc": "3898:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3898:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3886:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "3886:8:9"
																}
															]
														},
														{
															"nativeSrc": "3946:30:9",
															"nodeType": "YulAssignment",
															"src": "3946:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3959:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3959:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3970:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "3970:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3966:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3966:3:9"
																		},
																		"nativeSrc": "3966:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3966:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3955:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3955:3:9"
																},
																"nativeSrc": "3955:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3955:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3946:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "3946:5:9"
																}
															]
														},
														{
															"nativeSrc": "3985:40:9",
															"nodeType": "YulAssignment",
															"src": "3985:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3998:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3998:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4009:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "4009:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4019:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "4019:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4005:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:9"
																		},
																		"nativeSrc": "4005:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3995:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3995:2:9"
																},
																"nativeSrc": "3995:30:9",
																"nodeType": "YulFunctionCall",
																"src": "3995:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3985:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3985:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3638:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3675:5:9",
														"nodeType": "YulTypedName",
														"src": "3675:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3682:10:9",
														"nodeType": "YulTypedName",
														"src": "3682:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3694:8:9",
														"nodeType": "YulTypedName",
														"src": "3694:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3707:6:9",
														"nodeType": "YulTypedName",
														"src": "3707:6:9",
														"type": ""
													}
												],
												"src": "3638:393:9"
											},
											{
												"body": {
													"nativeSrc": "4069:28:9",
													"nodeType": "YulBlock",
													"src": "4069:28:9",
													"statements": [
														{
															"nativeSrc": "4079:12:9",
															"nodeType": "YulAssignment",
															"src": "4079:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4086:5:9",
																"nodeType": "YulIdentifier",
																"src": "4086:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4079:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4079:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4037:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4055:5:9",
														"nodeType": "YulTypedName",
														"src": "4055:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4065:3:9",
														"nodeType": "YulTypedName",
														"src": "4065:3:9",
														"type": ""
													}
												],
												"src": "4037:60:9"
											},
											{
												"body": {
													"nativeSrc": "4163:82:9",
													"nodeType": "YulBlock",
													"src": "4163:82:9",
													"statements": [
														{
															"nativeSrc": "4173:66:9",
															"nodeType": "YulAssignment",
															"src": "4173:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4231:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4231:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4213:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "4213:17:9"
																				},
																				"nativeSrc": "4213:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4213:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4204:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "4204:8:9"
																		},
																		"nativeSrc": "4204:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4186:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "4186:17:9"
																},
																"nativeSrc": "4186:53:9",
																"nodeType": "YulFunctionCall",
																"src": "4186:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4173:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "4173:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4103:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4143:5:9",
														"nodeType": "YulTypedName",
														"src": "4143:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4153:9:9",
														"nodeType": "YulTypedName",
														"src": "4153:9:9",
														"type": ""
													}
												],
												"src": "4103:142:9"
											},
											{
												"body": {
													"nativeSrc": "4298:28:9",
													"nodeType": "YulBlock",
													"src": "4298:28:9",
													"statements": [
														{
															"nativeSrc": "4308:12:9",
															"nodeType": "YulAssignment",
															"src": "4308:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "4315:5:9",
																"nodeType": "YulIdentifier",
																"src": "4315:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4308:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4251:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4284:5:9",
														"nodeType": "YulTypedName",
														"src": "4284:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4294:3:9",
														"nodeType": "YulTypedName",
														"src": "4294:3:9",
														"type": ""
													}
												],
												"src": "4251:75:9"
											},
											{
												"body": {
													"nativeSrc": "4408:193:9",
													"nodeType": "YulBlock",
													"src": "4408:193:9",
													"statements": [
														{
															"nativeSrc": "4418:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4418:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4473:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "4473:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4442:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "4442:30:9"
																},
																"nativeSrc": "4442:39:9",
																"nodeType": "YulFunctionCall",
																"src": "4442:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4422:16:9",
																	"nodeType": "YulTypedName",
																	"src": "4422:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4497:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4497:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4537:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "4537:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4531:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4531:5:9"
																				},
																				"nativeSrc": "4531:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4531:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4544:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "4544:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4576:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "4576:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4552:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "4552:23:9"
																				},
																				"nativeSrc": "4552:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4552:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4503:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "4503:27:9"
																		},
																		"nativeSrc": "4503:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4490:6:9"
																},
																"nativeSrc": "4490:105:9",
																"nodeType": "YulFunctionCall",
																"src": "4490:105:9"
															},
															"nativeSrc": "4490:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "4490:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4332:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4385:4:9",
														"nodeType": "YulTypedName",
														"src": "4385:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4391:6:9",
														"nodeType": "YulTypedName",
														"src": "4391:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4399:7:9",
														"nodeType": "YulTypedName",
														"src": "4399:7:9",
														"type": ""
													}
												],
												"src": "4332:269:9"
											},
											{
												"body": {
													"nativeSrc": "4656:24:9",
													"nodeType": "YulBlock",
													"src": "4656:24:9",
													"statements": [
														{
															"nativeSrc": "4666:8:9",
															"nodeType": "YulAssignment",
															"src": "4666:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "4673:1:9",
																"nodeType": "YulLiteral",
																"src": "4673:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4666:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4666:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4607:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4652:3:9",
														"nodeType": "YulTypedName",
														"src": "4652:3:9",
														"type": ""
													}
												],
												"src": "4607:73:9"
											},
											{
												"body": {
													"nativeSrc": "4739:136:9",
													"nodeType": "YulBlock",
													"src": "4739:136:9",
													"statements": [
														{
															"nativeSrc": "4749:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4749:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4763:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "4763:30:9"
																},
																"nativeSrc": "4763:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4763:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4753:6:9",
																	"nodeType": "YulTypedName",
																	"src": "4753:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4848:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4848:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4854:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4854:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4862:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4862:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4804:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "4804:43:9"
																},
																"nativeSrc": "4804:65:9",
																"nodeType": "YulFunctionCall",
																"src": "4804:65:9"
															},
															"nativeSrc": "4804:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "4804:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4686:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4725:4:9",
														"nodeType": "YulTypedName",
														"src": "4725:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4731:6:9",
														"nodeType": "YulTypedName",
														"src": "4731:6:9",
														"type": ""
													}
												],
												"src": "4686:189:9"
											},
											{
												"body": {
													"nativeSrc": "4931:136:9",
													"nodeType": "YulBlock",
													"src": "4931:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4998:63:9",
																"nodeType": "YulBlock",
																"src": "4998:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5042:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5042:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5049:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5049:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5012:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "5012:29:9"
																			},
																			"nativeSrc": "5012:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5012:39:9"
																		},
																		"nativeSrc": "5012:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5012:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4951:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4951:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4958:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4958:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4948:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4948:2:9"
																},
																"nativeSrc": "4948:14:9",
																"nodeType": "YulFunctionCall",
																"src": "4948:14:9"
															},
															"nativeSrc": "4941:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4963:26:9",
																"nodeType": "YulBlock",
																"src": "4963:26:9",
																"statements": [
																	{
																		"nativeSrc": "4965:22:9",
																		"nodeType": "YulAssignment",
																		"src": "4965:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4978:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4978:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4985:1:9",
																					"nodeType": "YulLiteral",
																					"src": "4985:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4974:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4974:3:9"
																			},
																			"nativeSrc": "4974:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4974:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4965:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4965:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4945:2:9",
																"nodeType": "YulBlock",
																"src": "4945:2:9",
																"statements": []
															},
															"src": "4941:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4881:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4919:5:9",
														"nodeType": "YulTypedName",
														"src": "4919:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4926:3:9",
														"nodeType": "YulTypedName",
														"src": "4926:3:9",
														"type": ""
													}
												],
												"src": "4881:186:9"
											},
											{
												"body": {
													"nativeSrc": "5152:464:9",
													"nodeType": "YulBlock",
													"src": "5152:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5178:431:9",
																"nodeType": "YulBlock",
																"src": "5178:431:9",
																"statements": [
																	{
																		"nativeSrc": "5192:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5192:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5240:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "5240:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5208:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "5208:31:9"
																			},
																			"nativeSrc": "5208:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5208:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5196:8:9",
																				"nodeType": "YulTypedName",
																				"src": "5196:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5259:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5259:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5282:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "5282:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5310:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5310:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5292:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "5292:17:9"
																					},
																					"nativeSrc": "5292:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5292:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5278:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5278:3:9"
																			},
																			"nativeSrc": "5278:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5278:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5263:11:9",
																				"nodeType": "YulTypedName",
																				"src": "5263:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5479:27:9",
																			"nodeType": "YulBlock",
																			"src": "5479:27:9",
																			"statements": [
																				{
																					"nativeSrc": "5481:23:9",
																					"nodeType": "YulAssignment",
																					"src": "5481:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5496:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "5496:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5481:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "5481:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5463:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5463:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5475:2:9",
																					"nodeType": "YulLiteral",
																					"src": "5475:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5460:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "5460:2:9"
																			},
																			"nativeSrc": "5460:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5460:18:9"
																		},
																		"nativeSrc": "5457:49:9",
																		"nodeType": "YulIf",
																		"src": "5457:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5548:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "5548:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5565:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "5565:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5593:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5593:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5575:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "5575:17:9"
																							},
																							"nativeSrc": "5575:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5575:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5561:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5561:3:9"
																					},
																					"nativeSrc": "5561:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5561:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5519:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "5519:28:9"
																			},
																			"nativeSrc": "5519:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5519:80:9"
																		},
																		"nativeSrc": "5519:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5519:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5169:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5169:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5174:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5174:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5166:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5166:2:9"
																},
																"nativeSrc": "5166:11:9",
																"nodeType": "YulFunctionCall",
																"src": "5166:11:9"
															},
															"nativeSrc": "5163:446:9",
															"nodeType": "YulIf",
															"src": "5163:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5073:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5128:5:9",
														"nodeType": "YulTypedName",
														"src": "5128:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5135:3:9",
														"nodeType": "YulTypedName",
														"src": "5135:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5140:10:9",
														"nodeType": "YulTypedName",
														"src": "5140:10:9",
														"type": ""
													}
												],
												"src": "5073:543:9"
											},
											{
												"body": {
													"nativeSrc": "5685:54:9",
													"nodeType": "YulBlock",
													"src": "5685:54:9",
													"statements": [
														{
															"nativeSrc": "5695:37:9",
															"nodeType": "YulAssignment",
															"src": "5695:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5720:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5720:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5726:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5726:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5716:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:9"
																},
																"nativeSrc": "5716:16:9",
																"nodeType": "YulFunctionCall",
																"src": "5716:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5695:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "5695:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5622:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5660:4:9",
														"nodeType": "YulTypedName",
														"src": "5660:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5666:5:9",
														"nodeType": "YulTypedName",
														"src": "5666:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5676:8:9",
														"nodeType": "YulTypedName",
														"src": "5676:8:9",
														"type": ""
													}
												],
												"src": "5622:117:9"
											},
											{
												"body": {
													"nativeSrc": "5796:118:9",
													"nodeType": "YulBlock",
													"src": "5796:118:9",
													"statements": [
														{
															"nativeSrc": "5806:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5806:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5855:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5855:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5858:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5858:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5851:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5851:3:9"
																				},
																				"nativeSrc": "5851:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5851:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5870:1:9",
																						"nodeType": "YulLiteral",
																						"src": "5870:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5866:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5866:3:9"
																				},
																				"nativeSrc": "5866:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5866:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5822:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "5822:28:9"
																		},
																		"nativeSrc": "5822:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5822:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5818:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:9"
																},
																"nativeSrc": "5818:56:9",
																"nodeType": "YulFunctionCall",
																"src": "5818:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5810:4:9",
																	"nodeType": "YulTypedName",
																	"src": "5810:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5883:25:9",
															"nodeType": "YulAssignment",
															"src": "5883:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5897:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5897:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5903:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5903:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5893:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5893:3:9"
																},
																"nativeSrc": "5893:15:9",
																"nodeType": "YulFunctionCall",
																"src": "5893:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5883:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5883:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5745:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5773:4:9",
														"nodeType": "YulTypedName",
														"src": "5773:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5779:5:9",
														"nodeType": "YulTypedName",
														"src": "5779:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5789:6:9",
														"nodeType": "YulTypedName",
														"src": "5789:6:9",
														"type": ""
													}
												],
												"src": "5745:169:9"
											},
											{
												"body": {
													"nativeSrc": "6000:214:9",
													"nodeType": "YulBlock",
													"src": "6000:214:9",
													"statements": [
														{
															"nativeSrc": "6133:37:9",
															"nodeType": "YulAssignment",
															"src": "6133:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6160:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6160:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6166:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6166:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6141:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "6141:18:9"
																},
																"nativeSrc": "6141:29:9",
																"nodeType": "YulFunctionCall",
																"src": "6141:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6133:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6133:4:9"
																}
															]
														},
														{
															"nativeSrc": "6179:29:9",
															"nodeType": "YulAssignment",
															"src": "6179:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6190:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6190:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6200:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6200:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6203:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6203:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6196:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6196:3:9"
																		},
																		"nativeSrc": "6196:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6196:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6187:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6187:2:9"
																},
																"nativeSrc": "6187:21:9",
																"nodeType": "YulFunctionCall",
																"src": "6187:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6179:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6179:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5919:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5981:4:9",
														"nodeType": "YulTypedName",
														"src": "5981:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5987:3:9",
														"nodeType": "YulTypedName",
														"src": "5987:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5995:4:9",
														"nodeType": "YulTypedName",
														"src": "5995:4:9",
														"type": ""
													}
												],
												"src": "5919:295:9"
											},
											{
												"body": {
													"nativeSrc": "6311:1303:9",
													"nodeType": "YulBlock",
													"src": "6311:1303:9",
													"statements": [
														{
															"nativeSrc": "6322:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6322:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6369:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6369:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6336:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "6336:32:9"
																},
																"nativeSrc": "6336:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6336:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6326:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6326:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6458:22:9",
																"nodeType": "YulBlock",
																"src": "6458:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6460:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6460:16:9"
																			},
																			"nativeSrc": "6460:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6460:18:9"
																		},
																		"nativeSrc": "6460:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6460:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6430:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6430:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6438:18:9",
																		"nodeType": "YulLiteral",
																		"src": "6438:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6427:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6427:2:9"
																},
																"nativeSrc": "6427:30:9",
																"nodeType": "YulFunctionCall",
																"src": "6427:30:9"
															},
															"nativeSrc": "6424:56:9",
															"nodeType": "YulIf",
															"src": "6424:56:9"
														},
														{
															"nativeSrc": "6490:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6490:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6536:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6536:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6530:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6530:5:9"
																		},
																		"nativeSrc": "6530:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6530:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6504:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "6504:25:9"
																},
																"nativeSrc": "6504:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6504:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6494:6:9",
																	"nodeType": "YulTypedName",
																	"src": "6494:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6635:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6635:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6641:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6641:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6649:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6649:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6589:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "6589:45:9"
																},
																"nativeSrc": "6589:67:9",
																"nodeType": "YulFunctionCall",
																"src": "6589:67:9"
															},
															"nativeSrc": "6589:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "6589:67:9"
														},
														{
															"nativeSrc": "6666:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6666:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6683:1:9",
																"nodeType": "YulLiteral",
																"src": "6683:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6670:9:9",
																	"nodeType": "YulTypedName",
																	"src": "6670:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6694:17:9",
															"nodeType": "YulAssignment",
															"src": "6694:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "6707:4:9",
																"nodeType": "YulLiteral",
																"src": "6707:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6694:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "6694:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6758:611:9",
																		"nodeType": "YulBlock",
																		"src": "6758:611:9",
																		"statements": [
																			{
																				"nativeSrc": "6772:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6772:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6791:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "6791:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6803:4:9",
																									"nodeType": "YulLiteral",
																									"src": "6803:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6799:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6799:3:9"
																							},
																							"nativeSrc": "6799:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6799:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6787:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "6787:3:9"
																					},
																					"nativeSrc": "6787:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6787:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6776:7:9",
																						"nodeType": "YulTypedName",
																						"src": "6776:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6823:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6823:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6869:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6869:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6837:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "6837:31:9"
																					},
																					"nativeSrc": "6837:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6837:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6827:6:9",
																						"nodeType": "YulTypedName",
																						"src": "6827:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6887:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6887:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6896:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6896:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6891:1:9",
																						"nodeType": "YulTypedName",
																						"src": "6891:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6955:163:9",
																					"nodeType": "YulBlock",
																					"src": "6955:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6980:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6980:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6998:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "6998:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7003:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "7003:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6994:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6994:3:9"
																												},
																												"nativeSrc": "6994:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6994:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6988:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "6988:5:9"
																										},
																										"nativeSrc": "6988:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6988:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6973:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6973:6:9"
																								},
																								"nativeSrc": "6973:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6973:42:9"
																							},
																							"nativeSrc": "6973:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6973:42:9"
																						},
																						{
																							"nativeSrc": "7032:24:9",
																							"nodeType": "YulAssignment",
																							"src": "7032:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7046:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7046:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7054:1:9",
																										"nodeType": "YulLiteral",
																										"src": "7054:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7042:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7042:3:9"
																								},
																								"nativeSrc": "7042:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7042:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7032:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7032:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7073:31:9",
																							"nodeType": "YulAssignment",
																							"src": "7073:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7090:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "7090:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7101:2:9",
																										"nodeType": "YulLiteral",
																										"src": "7101:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7086:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "7086:3:9"
																								},
																								"nativeSrc": "7086:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7086:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7073:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "7073:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6921:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "6921:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6924:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "6924:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6918:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "6918:2:9"
																					},
																					"nativeSrc": "6918:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6918:14:9"
																				},
																				"nativeSrc": "6910:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6933:21:9",
																					"nodeType": "YulBlock",
																					"src": "6933:21:9",
																					"statements": [
																						{
																							"nativeSrc": "6935:17:9",
																							"nodeType": "YulAssignment",
																							"src": "6935:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6944:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "6944:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6947:4:9",
																										"nodeType": "YulLiteral",
																										"src": "6947:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6940:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "6940:3:9"
																								},
																								"nativeSrc": "6940:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6940:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6935:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "6935:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6914:3:9",
																					"nodeType": "YulBlock",
																					"src": "6914:3:9",
																					"statements": []
																				},
																				"src": "6910:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "7154:156:9",
																					"nodeType": "YulBlock",
																					"src": "7154:156:9",
																					"statements": [
																						{
																							"nativeSrc": "7172:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7172:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7199:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "7199:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7204:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "7204:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7195:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "7195:3:9"
																										},
																										"nativeSrc": "7195:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7195:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7189:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7189:5:9"
																								},
																								"nativeSrc": "7189:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7189:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7176:9:9",
																									"nodeType": "YulTypedName",
																									"src": "7176:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7239:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "7239:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7266:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "7266:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7281:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "7281:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7289:4:9",
																														"nodeType": "YulLiteral",
																														"src": "7289:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7277:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "7277:3:9"
																												},
																												"nativeSrc": "7277:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "7277:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7247:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "7247:18:9"
																										},
																										"nativeSrc": "7247:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7247:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7232:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7232:6:9"
																								},
																								"nativeSrc": "7232:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7232:64:9"
																							},
																							"nativeSrc": "7232:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "7232:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7137:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "7137:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7146:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "7146:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7134:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "7134:2:9"
																					},
																					"nativeSrc": "7134:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7134:19:9"
																				},
																				"nativeSrc": "7131:179:9",
																				"nodeType": "YulIf",
																				"src": "7131:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7330:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7330:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7344:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "7344:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7352:1:9",
																											"nodeType": "YulLiteral",
																											"src": "7352:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7340:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "7340:3:9"
																									},
																									"nativeSrc": "7340:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "7340:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7356:1:9",
																									"nodeType": "YulLiteral",
																									"src": "7356:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7336:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "7336:3:9"
																							},
																							"nativeSrc": "7336:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7336:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7323:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7323:6:9"
																					},
																					"nativeSrc": "7323:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7323:36:9"
																				},
																				"nativeSrc": "7323:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7323:36:9"
																			}
																		]
																	},
																	"nativeSrc": "6751:618:9",
																	"nodeType": "YulCase",
																	"src": "6751:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6756:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6756:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7386:222:9",
																		"nodeType": "YulBlock",
																		"src": "7386:222:9",
																		"statements": [
																			{
																				"nativeSrc": "7400:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7400:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7413:1:9",
																					"nodeType": "YulLiteral",
																					"src": "7413:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7404:5:9",
																						"nodeType": "YulTypedName",
																						"src": "7404:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7437:67:9",
																					"nodeType": "YulBlock",
																					"src": "7437:67:9",
																					"statements": [
																						{
																							"nativeSrc": "7455:35:9",
																							"nodeType": "YulAssignment",
																							"src": "7455:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7474:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "7474:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7479:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "7479:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7470:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "7470:3:9"
																										},
																										"nativeSrc": "7470:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "7470:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7464:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7464:5:9"
																								},
																								"nativeSrc": "7464:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "7464:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7455:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7455:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7430:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7430:6:9"
																				},
																				"nativeSrc": "7427:77:9",
																				"nodeType": "YulIf",
																				"src": "7427:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7524:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "7524:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7583:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "7583:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7590:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "7590:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7530:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "7530:52:9"
																							},
																							"nativeSrc": "7530:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "7530:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7517:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7517:6:9"
																					},
																					"nativeSrc": "7517:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "7517:81:9"
																				},
																				"nativeSrc": "7517:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "7517:81:9"
																			}
																		]
																	},
																	"nativeSrc": "7378:230:9",
																	"nodeType": "YulCase",
																	"src": "7378:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6731:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6731:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6739:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6739:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6728:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6728:2:9"
																},
																"nativeSrc": "6728:14:9",
																"nodeType": "YulFunctionCall",
																"src": "6728:14:9"
															},
															"nativeSrc": "6721:887:9",
															"nodeType": "YulSwitch",
															"src": "6721:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6219:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6300:4:9",
														"nodeType": "YulTypedName",
														"src": "6300:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6306:3:9",
														"nodeType": "YulTypedName",
														"src": "6306:3:9",
														"type": ""
													}
												],
												"src": "6219:1395:9"
											},
											{
												"body": {
													"nativeSrc": "7673:32:9",
													"nodeType": "YulBlock",
													"src": "7673:32:9",
													"statements": [
														{
															"nativeSrc": "7683:16:9",
															"nodeType": "YulAssignment",
															"src": "7683:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "7694:5:9",
																"nodeType": "YulIdentifier",
																"src": "7694:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7683:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "7683:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "7620:85:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7655:5:9",
														"nodeType": "YulTypedName",
														"src": "7655:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7665:7:9",
														"nodeType": "YulTypedName",
														"src": "7665:7:9",
														"type": ""
													}
												],
												"src": "7620:85:9"
											},
											{
												"body": {
													"nativeSrc": "7779:90:9",
													"nodeType": "YulBlock",
													"src": "7779:90:9",
													"statements": [
														{
															"nativeSrc": "7789:74:9",
															"nodeType": "YulAssignment",
															"src": "7789:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7855:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "7855:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "7829:25:9",
																					"nodeType": "YulIdentifier",
																					"src": "7829:25:9"
																				},
																				"nativeSrc": "7829:32:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7829:32:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7820:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "7820:8:9"
																		},
																		"nativeSrc": "7820:42:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7820:42:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7802:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7802:17:9"
																},
																"nativeSrc": "7802:61:9",
																"nodeType": "YulFunctionCall",
																"src": "7802:61:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7789:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "7789:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "7711:158:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7759:5:9",
														"nodeType": "YulTypedName",
														"src": "7759:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7769:9:9",
														"nodeType": "YulTypedName",
														"src": "7769:9:9",
														"type": ""
													}
												],
												"src": "7711:158:9"
											},
											{
												"body": {
													"nativeSrc": "7948:74:9",
													"nodeType": "YulBlock",
													"src": "7948:74:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7965:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7965:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8009:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8009:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "7970:38:9",
																			"nodeType": "YulIdentifier",
																			"src": "7970:38:9"
																		},
																		"nativeSrc": "7970:45:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7970:45:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7958:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7958:6:9"
																},
																"nativeSrc": "7958:58:9",
																"nodeType": "YulFunctionCall",
																"src": "7958:58:9"
															},
															"nativeSrc": "7958:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "7958:58:9"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "7875:147:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7936:5:9",
														"nodeType": "YulTypedName",
														"src": "7936:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7943:3:9",
														"nodeType": "YulTypedName",
														"src": "7943:3:9",
														"type": ""
													}
												],
												"src": "7875:147:9"
											},
											{
												"body": {
													"nativeSrc": "8134:132:9",
													"nodeType": "YulBlock",
													"src": "8134:132:9",
													"statements": [
														{
															"nativeSrc": "8144:26:9",
															"nodeType": "YulAssignment",
															"src": "8144:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8156:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8156:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8167:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8167:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8152:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8152:3:9"
																},
																"nativeSrc": "8152:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8152:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8144:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8232:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8232:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8245:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8245:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8256:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8256:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8241:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:9"
																		},
																		"nativeSrc": "8241:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8241:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "8180:51:9",
																	"nodeType": "YulIdentifier",
																	"src": "8180:51:9"
																},
																"nativeSrc": "8180:79:9",
																"nodeType": "YulFunctionCall",
																"src": "8180:79:9"
															},
															"nativeSrc": "8180:79:9",
															"nodeType": "YulExpressionStatement",
															"src": "8180:79:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8028:238:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8106:9:9",
														"nodeType": "YulTypedName",
														"src": "8106:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8118:6:9",
														"nodeType": "YulTypedName",
														"src": "8118:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8129:4:9",
														"nodeType": "YulTypedName",
														"src": "8129:4:9",
														"type": ""
													}
												],
												"src": "8028:238:9"
											},
											{
												"body": {
													"nativeSrc": "8337:53:9",
													"nodeType": "YulBlock",
													"src": "8337:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8354:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8354:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8377:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8377:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8359:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "8359:17:9"
																		},
																		"nativeSrc": "8359:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8359:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8347:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8347:6:9"
																},
																"nativeSrc": "8347:37:9",
																"nodeType": "YulFunctionCall",
																"src": "8347:37:9"
															},
															"nativeSrc": "8347:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "8347:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8272:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8325:5:9",
														"nodeType": "YulTypedName",
														"src": "8325:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8332:3:9",
														"nodeType": "YulTypedName",
														"src": "8332:3:9",
														"type": ""
													}
												],
												"src": "8272:118:9"
											},
											{
												"body": {
													"nativeSrc": "8494:124:9",
													"nodeType": "YulBlock",
													"src": "8494:124:9",
													"statements": [
														{
															"nativeSrc": "8504:26:9",
															"nodeType": "YulAssignment",
															"src": "8504:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8516:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8516:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8527:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8527:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8512:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8512:3:9"
																},
																"nativeSrc": "8512:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8512:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8504:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8504:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8584:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8584:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8597:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8597:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8608:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8608:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8593:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8593:3:9"
																		},
																		"nativeSrc": "8593:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8593:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8540:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8540:43:9"
																},
																"nativeSrc": "8540:71:9",
																"nodeType": "YulFunctionCall",
																"src": "8540:71:9"
															},
															"nativeSrc": "8540:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "8540:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8396:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8466:9:9",
														"nodeType": "YulTypedName",
														"src": "8466:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8478:6:9",
														"nodeType": "YulTypedName",
														"src": "8478:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8489:4:9",
														"nodeType": "YulTypedName",
														"src": "8489:4:9",
														"type": ""
													}
												],
												"src": "8396:222:9"
											},
											{
												"body": {
													"nativeSrc": "8720:73:9",
													"nodeType": "YulBlock",
													"src": "8720:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8737:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8737:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8742:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8742:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8730:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8730:6:9"
																},
																"nativeSrc": "8730:19:9",
																"nodeType": "YulFunctionCall",
																"src": "8730:19:9"
															},
															"nativeSrc": "8730:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "8730:19:9"
														},
														{
															"nativeSrc": "8758:29:9",
															"nodeType": "YulAssignment",
															"src": "8758:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8777:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8777:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8782:4:9",
																		"nodeType": "YulLiteral",
																		"src": "8782:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8773:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:9"
																},
																"nativeSrc": "8773:14:9",
																"nodeType": "YulFunctionCall",
																"src": "8773:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8758:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8758:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8624:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8692:3:9",
														"nodeType": "YulTypedName",
														"src": "8692:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8697:6:9",
														"nodeType": "YulTypedName",
														"src": "8697:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8708:11:9",
														"nodeType": "YulTypedName",
														"src": "8708:11:9",
														"type": ""
													}
												],
												"src": "8624:169:9"
											},
											{
												"body": {
													"nativeSrc": "8905:119:9",
													"nodeType": "YulBlock",
													"src": "8905:119:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8927:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8927:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8935:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8935:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8923:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8923:3:9"
																		},
																		"nativeSrc": "8923:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:14:9"
																	},
																	{
																		"hexValue": "436170206d757374206265206174206c65617374203730206d696c6c696f6e20",
																		"kind": "string",
																		"nativeSrc": "8939:34:9",
																		"nodeType": "YulLiteral",
																		"src": "8939:34:9",
																		"type": "",
																		"value": "Cap must be at least 70 million "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8916:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:9"
																},
																"nativeSrc": "8916:58:9",
																"nodeType": "YulFunctionCall",
																"src": "8916:58:9"
															},
															"nativeSrc": "8916:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "8916:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8995:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8995:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9003:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8991:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8991:3:9"
																		},
																		"nativeSrc": "8991:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8991:15:9"
																	},
																	{
																		"hexValue": "746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "9008:8:9",
																		"nodeType": "YulLiteral",
																		"src": "9008:8:9",
																		"type": "",
																		"value": "tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8984:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8984:6:9"
																},
																"nativeSrc": "8984:33:9",
																"nodeType": "YulFunctionCall",
																"src": "8984:33:9"
															},
															"nativeSrc": "8984:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "8984:33:9"
														}
													]
												},
												"name": "store_literal_in_memory_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a",
												"nativeSrc": "8799:225:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8897:6:9",
														"nodeType": "YulTypedName",
														"src": "8897:6:9",
														"type": ""
													}
												],
												"src": "8799:225:9"
											},
											{
												"body": {
													"nativeSrc": "9176:220:9",
													"nodeType": "YulBlock",
													"src": "9176:220:9",
													"statements": [
														{
															"nativeSrc": "9186:74:9",
															"nodeType": "YulAssignment",
															"src": "9186:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9252:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9252:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9257:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9257:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9193:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9193:58:9"
																},
																"nativeSrc": "9193:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9193:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9186:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9186:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9358:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9358:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a",
																	"nativeSrc": "9269:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9269:88:9"
																},
																"nativeSrc": "9269:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9269:93:9"
															},
															"nativeSrc": "9269:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9269:93:9"
														},
														{
															"nativeSrc": "9371:19:9",
															"nodeType": "YulAssignment",
															"src": "9371:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9382:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9382:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9387:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9387:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9378:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9378:3:9"
																},
																"nativeSrc": "9378:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9378:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9371:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9371:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9030:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9164:3:9",
														"nodeType": "YulTypedName",
														"src": "9164:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9172:3:9",
														"nodeType": "YulTypedName",
														"src": "9172:3:9",
														"type": ""
													}
												],
												"src": "9030:366:9"
											},
											{
												"body": {
													"nativeSrc": "9573:248:9",
													"nodeType": "YulBlock",
													"src": "9573:248:9",
													"statements": [
														{
															"nativeSrc": "9583:26:9",
															"nodeType": "YulAssignment",
															"src": "9583:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9595:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "9595:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9606:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9606:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9591:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9591:3:9"
																},
																"nativeSrc": "9591:18:9",
																"nodeType": "YulFunctionCall",
																"src": "9591:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9583:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9583:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9630:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9630:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9641:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9641:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9626:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:9"
																		},
																		"nativeSrc": "9626:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9626:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9649:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9649:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9655:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "9655:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9645:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9645:3:9"
																		},
																		"nativeSrc": "9645:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9645:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9619:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:9"
																},
																"nativeSrc": "9619:47:9",
																"nodeType": "YulFunctionCall",
																"src": "9619:47:9"
															},
															"nativeSrc": "9619:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "9619:47:9"
														},
														{
															"nativeSrc": "9675:139:9",
															"nodeType": "YulAssignment",
															"src": "9675:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9809:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "9809:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9683:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "9683:124:9"
																},
																"nativeSrc": "9683:131:9",
																"nodeType": "YulFunctionCall",
																"src": "9683:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9675:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9675:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9402:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9553:9:9",
														"nodeType": "YulTypedName",
														"src": "9553:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9568:4:9",
														"nodeType": "YulTypedName",
														"src": "9568:4:9",
														"type": ""
													}
												],
												"src": "9402:419:9"
											},
											{
												"body": {
													"nativeSrc": "9892:53:9",
													"nodeType": "YulBlock",
													"src": "9892:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9909:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9909:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9932:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "9932:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9914:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "9914:17:9"
																		},
																		"nativeSrc": "9914:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9914:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9902:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9902:6:9"
																},
																"nativeSrc": "9902:37:9",
																"nodeType": "YulFunctionCall",
																"src": "9902:37:9"
															},
															"nativeSrc": "9902:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "9902:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9827:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9880:5:9",
														"nodeType": "YulTypedName",
														"src": "9880:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9887:3:9",
														"nodeType": "YulTypedName",
														"src": "9887:3:9",
														"type": ""
													}
												],
												"src": "9827:118:9"
											},
											{
												"body": {
													"nativeSrc": "10077:206:9",
													"nodeType": "YulBlock",
													"src": "10077:206:9",
													"statements": [
														{
															"nativeSrc": "10087:26:9",
															"nodeType": "YulAssignment",
															"src": "10087:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10099:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10099:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10110:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10110:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10095:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10095:3:9"
																},
																"nativeSrc": "10095:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10095:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10087:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10087:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10167:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10167:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10180:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10180:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10191:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10191:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10176:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10176:3:9"
																		},
																		"nativeSrc": "10176:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10176:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10123:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10123:43:9"
																},
																"nativeSrc": "10123:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10123:71:9"
															},
															"nativeSrc": "10123:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10123:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10248:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10248:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10261:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10261:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10272:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10272:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10257:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10257:3:9"
																		},
																		"nativeSrc": "10257:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10257:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10204:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10204:43:9"
																},
																"nativeSrc": "10204:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10204:72:9"
															},
															"nativeSrc": "10204:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10204:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9951:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10041:9:9",
														"nodeType": "YulTypedName",
														"src": "10041:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10053:6:9",
														"nodeType": "YulTypedName",
														"src": "10053:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10061:6:9",
														"nodeType": "YulTypedName",
														"src": "10061:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10072:4:9",
														"nodeType": "YulTypedName",
														"src": "10072:4:9",
														"type": ""
													}
												],
												"src": "9951:332:9"
											},
											{
												"body": {
													"nativeSrc": "10333:147:9",
													"nodeType": "YulBlock",
													"src": "10333:147:9",
													"statements": [
														{
															"nativeSrc": "10343:25:9",
															"nodeType": "YulAssignment",
															"src": "10343:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10366:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10366:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10348:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10348:17:9"
																},
																"nativeSrc": "10348:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10348:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10343:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10343:1:9"
																}
															]
														},
														{
															"nativeSrc": "10377:25:9",
															"nodeType": "YulAssignment",
															"src": "10377:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10400:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10400:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10382:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "10382:17:9"
																},
																"nativeSrc": "10382:20:9",
																"nodeType": "YulFunctionCall",
																"src": "10382:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10377:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "10377:1:9"
																}
															]
														},
														{
															"nativeSrc": "10411:16:9",
															"nodeType": "YulAssignment",
															"src": "10411:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10422:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10422:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10425:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10425:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10418:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:9"
																},
																"nativeSrc": "10418:9:9",
																"nodeType": "YulFunctionCall",
																"src": "10418:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10411:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10451:22:9",
																"nodeType": "YulBlock",
																"src": "10451:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10453:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "10453:16:9"
																			},
																			"nativeSrc": "10453:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "10453:18:9"
																		},
																		"nativeSrc": "10453:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "10453:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10443:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "10443:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10446:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10446:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10440:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "10440:2:9"
																},
																"nativeSrc": "10440:10:9",
																"nodeType": "YulFunctionCall",
																"src": "10440:10:9"
															},
															"nativeSrc": "10437:36:9",
															"nodeType": "YulIf",
															"src": "10437:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10289:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10320:1:9",
														"nodeType": "YulTypedName",
														"src": "10320:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10323:1:9",
														"nodeType": "YulTypedName",
														"src": "10323:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10329:3:9",
														"nodeType": "YulTypedName",
														"src": "10329:3:9",
														"type": ""
													}
												],
												"src": "10289:191:9"
											},
											{
												"body": {
													"nativeSrc": "10640:288:9",
													"nodeType": "YulBlock",
													"src": "10640:288:9",
													"statements": [
														{
															"nativeSrc": "10650:26:9",
															"nodeType": "YulAssignment",
															"src": "10650:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10662:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10662:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10673:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10673:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10658:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10658:3:9"
																},
																"nativeSrc": "10658:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10658:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10650:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10650:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10730:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10730:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10743:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10743:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10754:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10754:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10739:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10739:3:9"
																		},
																		"nativeSrc": "10739:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10739:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10686:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10686:43:9"
																},
																"nativeSrc": "10686:71:9",
																"nodeType": "YulFunctionCall",
																"src": "10686:71:9"
															},
															"nativeSrc": "10686:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "10686:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10811:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10811:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10824:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10824:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10835:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10835:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10820:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10820:3:9"
																		},
																		"nativeSrc": "10820:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10820:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10767:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10767:43:9"
																},
																"nativeSrc": "10767:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10767:72:9"
															},
															"nativeSrc": "10767:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10767:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10893:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "10893:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10906:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10906:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10917:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10917:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10902:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10902:3:9"
																		},
																		"nativeSrc": "10902:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10902:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10849:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "10849:43:9"
																},
																"nativeSrc": "10849:72:9",
																"nodeType": "YulFunctionCall",
																"src": "10849:72:9"
															},
															"nativeSrc": "10849:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "10849:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10486:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10596:9:9",
														"nodeType": "YulTypedName",
														"src": "10596:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10608:6:9",
														"nodeType": "YulTypedName",
														"src": "10608:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10616:6:9",
														"nodeType": "YulTypedName",
														"src": "10616:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10624:6:9",
														"nodeType": "YulTypedName",
														"src": "10624:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10635:4:9",
														"nodeType": "YulTypedName",
														"src": "10635:4:9",
														"type": ""
													}
												],
												"src": "10486:442:9"
											},
											{
												"body": {
													"nativeSrc": "11032:124:9",
													"nodeType": "YulBlock",
													"src": "11032:124:9",
													"statements": [
														{
															"nativeSrc": "11042:26:9",
															"nodeType": "YulAssignment",
															"src": "11042:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11054:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11054:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11050:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:9"
																},
																"nativeSrc": "11050:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11050:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11042:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11042:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11122:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11146:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:9"
																		},
																		"nativeSrc": "11131:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11078:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11078:43:9"
																},
																"nativeSrc": "11078:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11078:71:9"
															},
															"nativeSrc": "11078:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11078:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10934:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11004:9:9",
														"nodeType": "YulTypedName",
														"src": "11004:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11016:6:9",
														"nodeType": "YulTypedName",
														"src": "11016:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11027:4:9",
														"nodeType": "YulTypedName",
														"src": "11027:4:9",
														"type": ""
													}
												],
												"src": "10934:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cap must be at least 70 million \")\n\n        mstore(add(memPtr, 32), \"tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b5060405161201d38038061201d833981810160405281019061003191906106f4565b80670de0b6b3a7640000846100469190610771565b6040518060400160405280600781526020017f4d79546f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4d544b000000000000000000000000000000000000000000000000000000000081525081600390816100c191906109e6565b5080600490816100d191906109e6565b5050505f8103610118575f6040517f392e1e2700000000000000000000000000000000000000000000000000000000815260040161010f9190610aee565b60405180910390fd5b8060808181525050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610191575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101889190610b16565b60405180910390fd5b6101a08161022560201b60201c565b5063042c1d808310156101e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101df90610baf565b60405180910390fd5b610203816a39e7139a8c08fa060000006102e860201b60201c565b670de0b6b3a7640000826102179190610771565b600681905550505050610c84565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610358575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161034f9190610b16565b60405180910390fd5b6103695f838361036d60201b60201c565b5050565b61037e83838361038360201b60201c565b505050565b61039483838361043860201b60201c565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610433575f6103d661065160201b60201c565b90505f6103e761065a60201b60201c565b9050818111156104305780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610427929190610bdc565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610488578060025f82825461047c9190610c03565b92505081905550610556565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610511578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161050893929190610c36565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361059d578060025f82825403925050819055506105e7565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516106449190610c6b565b60405180910390a3505050565b5f608051905090565b5f600254905090565b5f5ffd5b5f819050919050565b61067981610667565b8114610683575f5ffd5b50565b5f8151905061069481610670565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106c38261069a565b9050919050565b6106d3816106b9565b81146106dd575f5ffd5b50565b5f815190506106ee816106ca565b92915050565b5f5f5f6060848603121561070b5761070a610663565b5b5f61071886828701610686565b935050602061072986828701610686565b925050604061073a868287016106e0565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61077b82610667565b915061078683610667565b925082820261079481610667565b915082820484148315176107ab576107aa610744565b5b5092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061082d57607f821691505b6020821081036108405761083f6107e9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610867565b6108ac8683610867565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6108e76108e26108dd84610667565b6108c4565b610667565b9050919050565b5f819050919050565b610900836108cd565b61091461090c826108ee565b848454610873565b825550505050565b5f5f905090565b61092b61091c565b6109368184846108f7565b505050565b5b818110156109595761094e5f82610923565b60018101905061093c565b5050565b601f82111561099e5761096f81610846565b61097884610858565b81016020851015610987578190505b61099b61099385610858565b83018261093b565b50505b505050565b5f82821c905092915050565b5f6109be5f19846008026109a3565b1980831691505092915050565b5f6109d683836109af565b9150826002028217905092915050565b6109ef826107b2565b67ffffffffffffffff811115610a0857610a076107bc565b5b610a128254610816565b610a1d82828561095d565b5f60209050601f831160018114610a4e575f8415610a3c578287015190505b610a4685826109cb565b865550610aad565b601f198416610a5c86610846565b5f5b82811015610a8357848901518255600182019150602085019450602081019050610a5e565b86831015610aa05784890151610a9c601f8916826109af565b8355505b6001600288020188555050505b505050505050565b5f819050919050565b5f610ad8610ad3610ace84610ab5565b6108c4565b610667565b9050919050565b610ae881610abe565b82525050565b5f602082019050610b015f830184610adf565b92915050565b610b10816106b9565b82525050565b5f602082019050610b295f830184610b07565b92915050565b5f82825260208201905092915050565b7f436170206d757374206265206174206c65617374203730206d696c6c696f6e205f8201527f746f6b656e730000000000000000000000000000000000000000000000000000602082015250565b5f610b99602683610b2f565b9150610ba482610b3f565b604082019050919050565b5f6020820190508181035f830152610bc681610b8d565b9050919050565b610bd681610667565b82525050565b5f604082019050610bef5f830185610bcd565b610bfc6020830184610bcd565b9392505050565b5f610c0d82610667565b9150610c1883610667565b9250828201905080821115610c3057610c2f610744565b5b92915050565b5f606082019050610c495f830186610b07565b610c566020830185610bcd565b610c636040830184610bcd565b949350505050565b5f602082019050610c7e5f830184610bcd565b92915050565b608051611381610c9c5f395f61046801526113815ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806342966c68116100a05780638da5cb5b1161006f5780638da5cb5b1461029157806395d89b41146102af578063a9059cbb146102cd578063dd62ed3e146102fd578063f2fde38b1461032d57610109565b806342966c681461021f57806370a082311461023b578063715018a61461026b57806379cc67901461027557610109565b80631a18e707116100dc5780631a18e7071461019757806323b872dd146101b3578063313ce567146101e3578063355274ea1461020157610109565b806306fdde031461010d578063095ea7b31461012b5780630ac168a11461015b57806318160ddd14610179575b5f5ffd5b610115610349565b6040516101229190610f67565b60405180910390f35b61014560048036038101906101409190611018565b6103d9565b6040516101529190611070565b60405180910390f35b6101636103fb565b6040516101709190611098565b60405180910390f35b610181610401565b60405161018e9190611098565b60405180910390f35b6101b160048036038101906101ac91906110b1565b61040a565b005b6101cd60048036038101906101c891906110dc565b61042f565b6040516101da9190611070565b60405180910390f35b6101eb61045d565b6040516101f89190611147565b60405180910390f35b610209610465565b6040516102169190611098565b60405180910390f35b610239600480360381019061023491906110b1565b61048c565b005b61025560048036038101906102509190611160565b6104a0565b6040516102629190611098565b60405180910390f35b6102736104e5565b005b61028f600480360381019061028a9190611018565b6104f8565b005b610299610518565b6040516102a6919061119a565b60405180910390f35b6102b7610540565b6040516102c49190610f67565b60405180910390f35b6102e760048036038101906102e29190611018565b6105d0565b6040516102f49190611070565b60405180910390f35b610317600480360381019061031291906111b3565b6105f2565b6040516103249190611098565b60405180910390f35b61034760048036038101906103429190611160565b610674565b005b6060600380546103589061121e565b80601f01602080910402602001604051908101604052809291908181526020018280546103849061121e565b80156103cf5780601f106103a6576101008083540402835291602001916103cf565b820191905f5260205f20905b8154815290600101906020018083116103b257829003601f168201915b5050505050905090565b5f5f6103e36106f8565b90506103f08185856106ff565b600191505092915050565b60065481565b5f600254905090565b610412610711565b670de0b6b3a764000081610426919061127b565b60068190555050565b5f5f6104396106f8565b9050610446858285610798565b61045185858561082a565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b61049d6104976106f8565b8261091a565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104ed610711565b6104f65f610999565b565b61050a826105046106f8565b83610798565b610514828261091a565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461054f9061121e565b80601f016020809104026020016040519081016040528092919081815260200182805461057b9061121e565b80156105c65780601f1061059d576101008083540402835291602001916105c6565b820191905f5260205f20905b8154815290600101906020018083116105a957829003601f168201915b5050505050905090565b5f5f6105da6106f8565b90506105e781858561082a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61067c610711565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ec575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106e3919061119a565b60405180910390fd5b6106f581610999565b50565b5f33905090565b61070c8383836001610a5c565b505050565b6107196106f8565b73ffffffffffffffffffffffffffffffffffffffff16610737610518565b73ffffffffffffffffffffffffffffffffffffffff16146107965761075a6106f8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078d919061119a565b60405180910390fd5b565b5f6107a384846105f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108245781811015610815578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161080c939291906112bc565b60405180910390fd5b61082384848484035f610a5c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610891919061119a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610901919061119a565b60405180910390fd5b610915838383610c2b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361098a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610981919061119a565b60405180910390fd5b610995825f83610c2b565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610acc575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ac3919061119a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b3c575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b33919061119a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c25578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c1c9190611098565b60405180910390a35b50505050565b610c36838383610c3b565b505050565b610c46838383610cde565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cd9575f610c82610465565b90505f610c8d610401565b905081811115610cd65780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610ccd9291906112f1565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d2e578060025f828254610d229190611318565b92505081905550610dfc565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610db7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dae939291906112bc565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e43578060025f8282540392505081905550610e8d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eea9190611098565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f3982610ef7565b610f438185610f01565b9350610f53818560208601610f11565b610f5c81610f1f565b840191505092915050565b5f6020820190508181035f830152610f7f8184610f2f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fb482610f8b565b9050919050565b610fc481610faa565b8114610fce575f5ffd5b50565b5f81359050610fdf81610fbb565b92915050565b5f819050919050565b610ff781610fe5565b8114611001575f5ffd5b50565b5f8135905061101281610fee565b92915050565b5f5f6040838503121561102e5761102d610f87565b5b5f61103b85828601610fd1565b925050602061104c85828601611004565b9150509250929050565b5f8115159050919050565b61106a81611056565b82525050565b5f6020820190506110835f830184611061565b92915050565b61109281610fe5565b82525050565b5f6020820190506110ab5f830184611089565b92915050565b5f602082840312156110c6576110c5610f87565b5b5f6110d384828501611004565b91505092915050565b5f5f5f606084860312156110f3576110f2610f87565b5b5f61110086828701610fd1565b935050602061111186828701610fd1565b925050604061112286828701611004565b9150509250925092565b5f60ff82169050919050565b6111418161112c565b82525050565b5f60208201905061115a5f830184611138565b92915050565b5f6020828403121561117557611174610f87565b5b5f61118284828501610fd1565b91505092915050565b61119481610faa565b82525050565b5f6020820190506111ad5f83018461118b565b92915050565b5f5f604083850312156111c9576111c8610f87565b5b5f6111d685828601610fd1565b92505060206111e785828601610fd1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061123557607f821691505b602082108103611248576112476111f1565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61128582610fe5565b915061129083610fe5565b925082820261129e81610fe5565b915082820484148315176112b5576112b461124e565b5b5092915050565b5f6060820190506112cf5f83018661118b565b6112dc6020830185611089565b6112e96040830184611089565b949350505050565b5f6040820190506113045f830185611089565b6113116020830184611089565b9392505050565b5f61132282610fe5565b915061132d83610fe5565b92508282019050808211156113455761134461124e565b5b9291505056fea26469706673582212201290132b36b3545838b8a60977f0605efd61fb23a63a194e0ab3e14ea81fccdc64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x201D CODESIZE SUB DUP1 PUSH2 0x201D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST DUP1 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x46 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79546F6B656E00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST POP POP POP PUSH0 DUP2 SUB PUSH2 0x118 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x392E1E2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x191 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A0 DUP2 PUSH2 0x225 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH4 0x42C1D80 DUP4 LT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF SWAP1 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x203 DUP2 PUSH11 0x39E7139A8C08FA06000000 PUSH2 0x2E8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0xC84 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x358 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34F SWAP2 SWAP1 PUSH2 0xB16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x369 PUSH0 DUP4 DUP4 PUSH2 0x36D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x37E DUP4 DUP4 DUP4 PUSH2 0x383 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x394 DUP4 DUP4 DUP4 PUSH2 0x438 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x433 JUMPI PUSH0 PUSH2 0x3D6 PUSH2 0x651 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x3E7 PUSH2 0x65A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x430 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x427 SWAP3 SWAP2 SWAP1 PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x488 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x556 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x511 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x508 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x5E7 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x679 DUP2 PUSH2 0x667 JUMP JUMPDEST DUP2 EQ PUSH2 0x683 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x694 DUP2 PUSH2 0x670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6C3 DUP3 PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D3 DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x6DD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6EE DUP2 PUSH2 0x6CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x70B JUMPI PUSH2 0x70A PUSH2 0x663 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x718 DUP7 DUP3 DUP8 ADD PUSH2 0x686 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x729 DUP7 DUP3 DUP8 ADD PUSH2 0x686 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x73A DUP7 DUP3 DUP8 ADD PUSH2 0x6E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x77B DUP3 PUSH2 0x667 JUMP JUMPDEST SWAP2 POP PUSH2 0x786 DUP4 PUSH2 0x667 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x794 DUP2 PUSH2 0x667 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x7AB JUMPI PUSH2 0x7AA PUSH2 0x744 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x82D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x840 JUMPI PUSH2 0x83F PUSH2 0x7E9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x8A2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x8AC DUP7 DUP4 PUSH2 0x867 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8E7 PUSH2 0x8E2 PUSH2 0x8DD DUP5 PUSH2 0x667 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x900 DUP4 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x914 PUSH2 0x90C DUP3 PUSH2 0x8EE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x873 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x92B PUSH2 0x91C JUMP JUMPDEST PUSH2 0x936 DUP2 DUP5 DUP5 PUSH2 0x8F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x959 JUMPI PUSH2 0x94E PUSH0 DUP3 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x93C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x99E JUMPI PUSH2 0x96F DUP2 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x978 DUP5 PUSH2 0x858 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x987 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x99B PUSH2 0x993 DUP6 PUSH2 0x858 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x93B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9BE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x9A3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9D6 DUP4 DUP4 PUSH2 0x9AF JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9EF DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA08 JUMPI PUSH2 0xA07 PUSH2 0x7BC JUMP JUMPDEST JUMPDEST PUSH2 0xA12 DUP3 SLOAD PUSH2 0x816 JUMP JUMPDEST PUSH2 0xA1D DUP3 DUP3 DUP6 PUSH2 0x95D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xA4E JUMPI PUSH0 DUP5 ISZERO PUSH2 0xA3C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xA46 DUP6 DUP3 PUSH2 0x9CB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xA5C DUP7 PUSH2 0x846 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA83 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA5E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xAA0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA9C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x9AF JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD8 PUSH2 0xAD3 PUSH2 0xACE DUP5 PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x667 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAE8 DUP2 PUSH2 0xABE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB01 PUSH0 DUP4 ADD DUP5 PUSH2 0xADF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB10 DUP2 PUSH2 0x6B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB29 PUSH0 DUP4 ADD DUP5 PUSH2 0xB07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x436170206D757374206265206174206C65617374203730206D696C6C696F6E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x746F6B656E730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB99 PUSH1 0x26 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xBA4 DUP3 PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBC6 DUP2 PUSH2 0xB8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD6 DUP2 PUSH2 0x667 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xBEF PUSH0 DUP4 ADD DUP6 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xBFC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC0D DUP3 PUSH2 0x667 JUMP JUMPDEST SWAP2 POP PUSH2 0xC18 DUP4 PUSH2 0x667 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xC30 JUMPI PUSH2 0xC2F PUSH2 0x744 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC49 PUSH0 DUP4 ADD DUP7 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0xC56 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBCD JUMP JUMPDEST PUSH2 0xC63 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC7E PUSH0 DUP4 ADD DUP5 PUSH2 0xBCD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1381 PUSH2 0xC9C PUSH0 CODECOPY PUSH0 PUSH2 0x468 ADD MSTORE PUSH2 0x1381 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x275 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1A18E707 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1A18E707 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xAC168A1 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E3 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP2 DUP6 DUP6 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x711 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x439 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x446 DUP6 DUP3 DUP6 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x451 DUP6 DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0x497 PUSH2 0x6F8 JUMP JUMPDEST DUP3 PUSH2 0x91A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x711 JUMP JUMPDEST PUSH2 0x4F6 PUSH0 PUSH2 0x999 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x50A DUP3 PUSH2 0x504 PUSH2 0x6F8 JUMP JUMPDEST DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x514 DUP3 DUP3 PUSH2 0x91A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x54F SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57B SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5DA PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E7 DUP2 DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x711 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F5 DUP2 PUSH2 0x999 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x719 PUSH2 0x6F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x737 PUSH2 0x518 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x796 JUMPI PUSH2 0x75A PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x7A3 DUP5 DUP5 PUSH2 0x5F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x824 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x815 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x823 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA5C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x915 DUP4 DUP4 DUP4 PUSH2 0xC2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x98A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x995 DUP3 PUSH0 DUP4 PUSH2 0xC2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC25 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC36 DUP4 DUP4 DUP4 PUSH2 0xC3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC46 DUP4 DUP4 DUP4 PUSH2 0xCDE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD9 JUMPI PUSH0 PUSH2 0xC82 PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8D PUSH2 0x401 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCD6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP3 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDFC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDB7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE43 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF39 DUP3 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xF43 DUP2 DUP6 PUSH2 0xF01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF11 JUMP JUMPDEST PUSH2 0xF5C DUP2 PUSH2 0xF1F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7F DUP2 DUP5 PUSH2 0xF2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB4 DUP3 PUSH2 0xF8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC4 DUP2 PUSH2 0xFAA JUMP JUMPDEST DUP2 EQ PUSH2 0xFCE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0xFBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF7 DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1001 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1012 DUP2 PUSH2 0xFEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102D PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x103B DUP6 DUP3 DUP7 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x104C DUP6 DUP3 DUP7 ADD PUSH2 0x1004 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106A DUP2 PUSH2 0x1056 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1083 PUSH0 DUP4 ADD DUP5 PUSH2 0x1061 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1092 DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AB PUSH0 DUP4 ADD DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1004 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1100 DUP7 DUP3 DUP8 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1111 DUP7 DUP3 DUP8 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1122 DUP7 DUP3 DUP8 ADD PUSH2 0x1004 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1141 DUP2 PUSH2 0x112C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115A PUSH0 DUP4 ADD DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1182 DUP5 DUP3 DUP6 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1194 DUP2 PUSH2 0xFAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11AD PUSH0 DUP4 ADD DUP5 PUSH2 0x118B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C8 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D6 DUP6 DUP3 DUP7 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11E7 DUP6 DUP3 DUP7 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1248 JUMPI PUSH2 0x1247 PUSH2 0x11F1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1285 DUP3 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1290 DUP4 PUSH2 0xFE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x129E DUP2 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x124E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12CF PUSH0 DUP4 ADD DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x12DC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x12E9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1304 PUSH0 DUP4 ADD DUP6 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x1311 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1322 DUP3 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x132D DUP4 PUSH2 0xFE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x124E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP1 SGT 0x2B CALLDATASIZE 0xB3 SLOAD PC CODESIZE 0xB8 0xA6 MULMOD PUSH24 0xF0605EFD61FB23A63A194E0AB3E14EA81FCCDC64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "324:1294:8:-:0;;;422:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;573:12;547:6;541:3;:12;;;;:::i;:::-;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;764:1:5;756:4;:9;752:65;;804:1;788:18;;;;;;;;;;;:::i;:::-;;;;;;;;752:65;833:4;826:11;;;;;;716:128;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;618:8:8::3;611:3;:15;;603:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;680:38;686:12;700:17;680:5;;;:38;;:::i;:::-;752:6;743;:15;;;;:::i;:::-;729:11;:29;;;;422:344:::0;;;324:1294;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;1414:201:8:-;1529:36;1549:4;1555:2;1559:5;1529:19;;;:36;;:::i;:::-;1414:201;;;:::o;1059:371:5:-;1153:30;1167:4;1173:2;1177:5;1153:13;;;:30;;:::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;;;:5;;:::i;:::-;1232:25;;1271:14;1288:13;:11;;;:13;;:::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6008:1107:2:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;923:81:5:-;967:7;993:4;;986:11;;923:81;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:180::-;1922:77;1919:1;1912:88;2019:4;2016:1;2009:15;2043:4;2040:1;2033:15;2060:410;2100:7;2123:20;2141:1;2123:20;:::i;:::-;2118:25;;2157:20;2175:1;2157:20;:::i;:::-;2152:25;;2212:1;2209;2205:9;2234:30;2252:11;2234:30;:::i;:::-;2223:41;;2413:1;2404:7;2400:15;2397:1;2394:22;2374:1;2367:9;2347:83;2324:139;;2443:18;;:::i;:::-;2324:139;2108:362;2060:410;;;;:::o;2476:99::-;2528:6;2562:5;2556:12;2546:22;;2476:99;;;:::o;2581:180::-;2629:77;2626:1;2619:88;2726:4;2723:1;2716:15;2750:4;2747:1;2740:15;2767:180;2815:77;2812:1;2805:88;2912:4;2909:1;2902:15;2936:4;2933:1;2926:15;2953:320;2997:6;3034:1;3028:4;3024:12;3014:22;;3081:1;3075:4;3071:12;3102:18;3092:81;;3158:4;3150:6;3146:17;3136:27;;3092:81;3220:2;3212:6;3209:14;3189:18;3186:38;3183:84;;3239:18;;:::i;:::-;3183:84;3004:269;2953:320;;;:::o;3279:141::-;3328:4;3351:3;3343:11;;3374:3;3371:1;3364:14;3408:4;3405:1;3395:18;3387:26;;3279:141;;;:::o;3426:93::-;3463:6;3510:2;3505;3498:5;3494:14;3490:23;3480:33;;3426:93;;;:::o;3525:107::-;3569:8;3619:5;3613:4;3609:16;3588:37;;3525:107;;;;:::o;3638:393::-;3707:6;3757:1;3745:10;3741:18;3780:97;3810:66;3799:9;3780:97;:::i;:::-;3898:39;3928:8;3917:9;3898:39;:::i;:::-;3886:51;;3970:4;3966:9;3959:5;3955:21;3946:30;;4019:4;4009:8;4005:19;3998:5;3995:30;3985:40;;3714:317;;3638:393;;;;;:::o;4037:60::-;4065:3;4086:5;4079:12;;4037:60;;;:::o;4103:142::-;4153:9;4186:53;4204:34;4213:24;4231:5;4213:24;:::i;:::-;4204:34;:::i;:::-;4186:53;:::i;:::-;4173:66;;4103:142;;;:::o;4251:75::-;4294:3;4315:5;4308:12;;4251:75;;;:::o;4332:269::-;4442:39;4473:7;4442:39;:::i;:::-;4503:91;4552:41;4576:16;4552:41;:::i;:::-;4544:6;4537:4;4531:11;4503:91;:::i;:::-;4497:4;4490:105;4408:193;4332:269;;;:::o;4607:73::-;4652:3;4673:1;4666:8;;4607:73;:::o;4686:189::-;4763:32;;:::i;:::-;4804:65;4862:6;4854;4848:4;4804:65;:::i;:::-;4739:136;4686:189;;:::o;4881:186::-;4941:120;4958:3;4951:5;4948:14;4941:120;;;5012:39;5049:1;5042:5;5012:39;:::i;:::-;4985:1;4978:5;4974:13;4965:22;;4941:120;;;4881:186;;:::o;5073:543::-;5174:2;5169:3;5166:11;5163:446;;;5208:38;5240:5;5208:38;:::i;:::-;5292:29;5310:10;5292:29;:::i;:::-;5282:8;5278:44;5475:2;5463:10;5460:18;5457:49;;;5496:8;5481:23;;5457:49;5519:80;5575:22;5593:3;5575:22;:::i;:::-;5565:8;5561:37;5548:11;5519:80;:::i;:::-;5178:431;;5163:446;5073:543;;;:::o;5622:117::-;5676:8;5726:5;5720:4;5716:16;5695:37;;5622:117;;;;:::o;5745:169::-;5789:6;5822:51;5870:1;5866:6;5858:5;5855:1;5851:13;5822:51;:::i;:::-;5818:56;5903:4;5897;5893:15;5883:25;;5796:118;5745:169;;;;:::o;5919:295::-;5995:4;6141:29;6166:3;6160:4;6141:29;:::i;:::-;6133:37;;6203:3;6200:1;6196:11;6190:4;6187:21;6179:29;;5919:295;;;;:::o;6219:1395::-;6336:37;6369:3;6336:37;:::i;:::-;6438:18;6430:6;6427:30;6424:56;;;6460:18;;:::i;:::-;6424:56;6504:38;6536:4;6530:11;6504:38;:::i;:::-;6589:67;6649:6;6641;6635:4;6589:67;:::i;:::-;6683:1;6707:4;6694:17;;6739:2;6731:6;6728:14;6756:1;6751:618;;;;7413:1;7430:6;7427:77;;;7479:9;7474:3;7470:19;7464:26;7455:35;;7427:77;7530:67;7590:6;7583:5;7530:67;:::i;:::-;7524:4;7517:81;7386:222;6721:887;;6751:618;6803:4;6799:9;6791:6;6787:22;6837:37;6869:4;6837:37;:::i;:::-;6896:1;6910:208;6924:7;6921:1;6918:14;6910:208;;;7003:9;6998:3;6994:19;6988:26;6980:6;6973:42;7054:1;7046:6;7042:14;7032:24;;7101:2;7090:9;7086:18;7073:31;;6947:4;6944:1;6940:12;6935:17;;6910:208;;;7146:6;7137:7;7134:19;7131:179;;;7204:9;7199:3;7195:19;7189:26;7247:48;7289:4;7281:6;7277:17;7266:9;7247:48;:::i;:::-;7239:6;7232:64;7154:156;7131:179;7356:1;7352;7344:6;7340:14;7336:22;7330:4;7323:36;6758:611;;;6721:887;;6311:1303;;;6219:1395;;:::o;7620:85::-;7665:7;7694:5;7683:16;;7620:85;;;:::o;7711:158::-;7769:9;7802:61;7820:42;7829:32;7855:5;7829:32;:::i;:::-;7820:42;:::i;:::-;7802:61;:::i;:::-;7789:74;;7711:158;;;:::o;7875:147::-;7970:45;8009:5;7970:45;:::i;:::-;7965:3;7958:58;7875:147;;:::o;8028:238::-;8129:4;8167:2;8156:9;8152:18;8144:26;;8180:79;8256:1;8245:9;8241:17;8232:6;8180:79;:::i;:::-;8028:238;;;;:::o;8272:118::-;8359:24;8377:5;8359:24;:::i;:::-;8354:3;8347:37;8272:118;;:::o;8396:222::-;8489:4;8527:2;8516:9;8512:18;8504:26;;8540:71;8608:1;8597:9;8593:17;8584:6;8540:71;:::i;:::-;8396:222;;;;:::o;8624:169::-;8708:11;8742:6;8737:3;8730:19;8782:4;8777:3;8773:14;8758:29;;8624:169;;;;:::o;8799:225::-;8939:34;8935:1;8927:6;8923:14;8916:58;9008:8;9003:2;8995:6;8991:15;8984:33;8799:225;:::o;9030:366::-;9172:3;9193:67;9257:2;9252:3;9193:67;:::i;:::-;9186:74;;9269:93;9358:3;9269:93;:::i;:::-;9387:2;9382:3;9378:12;9371:19;;9030:366;;;:::o;9402:419::-;9568:4;9606:2;9595:9;9591:18;9583:26;;9655:9;9649:4;9645:20;9641:1;9630:9;9626:17;9619:47;9683:131;9809:4;9683:131;:::i;:::-;9675:139;;9402:419;;;:::o;9827:118::-;9914:24;9932:5;9914:24;:::i;:::-;9909:3;9902:37;9827:118;;:::o;9951:332::-;10072:4;10110:2;10099:9;10095:18;10087:26;;10123:71;10191:1;10180:9;10176:17;10167:6;10123:71;:::i;:::-;10204:72;10272:2;10261:9;10257:18;10248:6;10204:72;:::i;:::-;9951:332;;;;;:::o;10289:191::-;10329:3;10348:20;10366:1;10348:20;:::i;:::-;10343:25;;10382:20;10400:1;10382:20;:::i;:::-;10377:25;;10425:1;10422;10418:9;10411:16;;10446:3;10443:1;10440:10;10437:36;;;10453:18;;:::i;:::-;10437:36;10289:191;;;;:::o;10486:442::-;10635:4;10673:2;10662:9;10658:18;10650:26;;10686:71;10754:1;10743:9;10739:17;10730:6;10686:71;:::i;:::-;10767:72;10835:2;10824:9;10820:18;10811:6;10767:72;:::i;:::-;10849;10917:2;10906:9;10902:18;10893:6;10849:72;:::i;:::-;10486:442;;;;;;:::o;10934:222::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:71;11146:1;11135:9;11131:17;11122:6;11078:71;:::i;:::-;10934:222;;;;:::o;324:1294:8:-;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1791,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2652,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2330,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1809,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1060": {
									"entryPoint": 1784,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1944,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2457,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2090,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1021": {
									"entryPoint": 3131,
									"id": 1021,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1236": {
									"entryPoint": 3115,
									"id": 1236,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3294,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1522,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 985,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1184,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@blockReward_1092": {
									"entryPoint": 1019,
									"id": 1092,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_922": {
									"entryPoint": 1272,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1164,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cap_973": {
									"entryPoint": 1125,
									"id": 973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1117,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 841,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1304,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1253,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBlockReward_1215": {
									"entryPoint": 1034,
									"id": 1215,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1344,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1025,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1071,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1652,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1488,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4849,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4593,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8342:9",
										"nodeType": "YulBlock",
										"src": "0:8342:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:77:9",
													"nodeType": "YulBlock",
													"src": "349:77:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:9"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:9"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:9"
																},
																"nativeSrc": "360:23:9",
																"nodeType": "YulFunctionCall",
																"src": "360:23:9"
															},
															"nativeSrc": "360:23:9",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:9"
																		},
																		"nativeSrc": "399:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:9",
																		"nodeType": "YulLiteral",
																		"src": "417:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:9"
																},
																"nativeSrc": "392:27:9",
																"nodeType": "YulFunctionCall",
																"src": "392:27:9"
															},
															"nativeSrc": "392:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:139:9"
											},
											{
												"body": {
													"nativeSrc": "480:54:9",
													"nodeType": "YulBlock",
													"src": "480:54:9",
													"statements": [
														{
															"nativeSrc": "490:38:9",
															"nodeType": "YulAssignment",
															"src": "490:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:9",
																				"nodeType": "YulLiteral",
																				"src": "515:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:9"
																		},
																		"nativeSrc": "504:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:9",
																				"nodeType": "YulLiteral",
																				"src": "524:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:9"
																		},
																		"nativeSrc": "520:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:9"
																},
																"nativeSrc": "500:28:9",
																"nodeType": "YulFunctionCall",
																"src": "500:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:9",
														"nodeType": "YulTypedName",
														"src": "463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:9",
														"nodeType": "YulTypedName",
														"src": "473:6:9",
														"type": ""
													}
												],
												"src": "432:102:9"
											},
											{
												"body": {
													"nativeSrc": "632:285:9",
													"nodeType": "YulBlock",
													"src": "632:285:9",
													"statements": [
														{
															"nativeSrc": "642:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:9"
																},
																"nativeSrc": "656:39:9",
																"nodeType": "YulFunctionCall",
																"src": "656:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:9",
																	"nodeType": "YulTypedName",
																	"src": "646:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:9",
															"nodeType": "YulAssignment",
															"src": "704:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:9"
																},
																"nativeSrc": "711:71:9",
																"nodeType": "YulFunctionCall",
																"src": "711:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:9",
																				"nodeType": "YulLiteral",
																				"src": "837:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:9"
																		},
																		"nativeSrc": "826:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:9"
																},
																"nativeSrc": "791:65:9",
																"nodeType": "YulFunctionCall",
																"src": "791:65:9"
															},
															"nativeSrc": "791:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:9"
														},
														{
															"nativeSrc": "865:46:9",
															"nodeType": "YulAssignment",
															"src": "865:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:9"
																		},
																		"nativeSrc": "881:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:9"
																},
																"nativeSrc": "872:39:9",
																"nodeType": "YulFunctionCall",
																"src": "872:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:9",
														"nodeType": "YulTypedName",
														"src": "613:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:9",
														"nodeType": "YulTypedName",
														"src": "620:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:9",
														"nodeType": "YulTypedName",
														"src": "628:3:9",
														"type": ""
													}
												],
												"src": "540:377:9"
											},
											{
												"body": {
													"nativeSrc": "1041:195:9",
													"nodeType": "YulBlock",
													"src": "1041:195:9",
													"statements": [
														{
															"nativeSrc": "1051:26:9",
															"nodeType": "YulAssignment",
															"src": "1051:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:9"
																},
																"nativeSrc": "1059:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:9"
																		},
																		"nativeSrc": "1094:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:9"
																		},
																		"nativeSrc": "1113:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:9"
																},
																"nativeSrc": "1087:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:9"
															},
															"nativeSrc": "1087:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:9"
														},
														{
															"nativeSrc": "1143:86:9",
															"nodeType": "YulAssignment",
															"src": "1143:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:9"
																},
																"nativeSrc": "1151:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:9",
														"nodeType": "YulTypedName",
														"src": "1013:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:9",
														"nodeType": "YulTypedName",
														"src": "1025:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:9",
														"nodeType": "YulTypedName",
														"src": "1036:4:9",
														"type": ""
													}
												],
												"src": "923:313:9"
											},
											{
												"body": {
													"nativeSrc": "1282:35:9",
													"nodeType": "YulBlock",
													"src": "1282:35:9",
													"statements": [
														{
															"nativeSrc": "1292:19:9",
															"nodeType": "YulAssignment",
															"src": "1292:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:9"
																},
																"nativeSrc": "1302:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:9",
														"nodeType": "YulTypedName",
														"src": "1275:6:9",
														"type": ""
													}
												],
												"src": "1242:75:9"
											},
											{
												"body": {
													"nativeSrc": "1412:28:9",
													"nodeType": "YulBlock",
													"src": "1412:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:9"
																},
																"nativeSrc": "1422:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:9"
															},
															"nativeSrc": "1422:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:9"
											},
											{
												"body": {
													"nativeSrc": "1535:28:9",
													"nodeType": "YulBlock",
													"src": "1535:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:9"
																},
																"nativeSrc": "1545:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:9"
															},
															"nativeSrc": "1545:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:9"
											},
											{
												"body": {
													"nativeSrc": "1614:81:9",
													"nodeType": "YulBlock",
													"src": "1614:81:9",
													"statements": [
														{
															"nativeSrc": "1624:65:9",
															"nodeType": "YulAssignment",
															"src": "1624:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nativeSrc": "1635:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:9",
														"nodeType": "YulTypedName",
														"src": "1596:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:9",
														"nodeType": "YulTypedName",
														"src": "1606:7:9",
														"type": ""
													}
												],
												"src": "1569:126:9"
											},
											{
												"body": {
													"nativeSrc": "1746:51:9",
													"nodeType": "YulBlock",
													"src": "1746:51:9",
													"statements": [
														{
															"nativeSrc": "1756:35:9",
															"nodeType": "YulAssignment",
															"src": "1756:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:9"
																},
																"nativeSrc": "1767:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:9",
														"nodeType": "YulTypedName",
														"src": "1728:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:9",
														"nodeType": "YulTypedName",
														"src": "1738:7:9",
														"type": ""
													}
												],
												"src": "1701:96:9"
											},
											{
												"body": {
													"nativeSrc": "1846:79:9",
													"nodeType": "YulBlock",
													"src": "1846:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:9",
																"nodeType": "YulBlock",
																"src": "1903:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:9",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:9"
																			},
																			"nativeSrc": "1905:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:9"
																		},
																		"nativeSrc": "1905:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:9"
																				},
																				"nativeSrc": "1876:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:9"
																		},
																		"nativeSrc": "1866:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:9"
																},
																"nativeSrc": "1859:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:9"
															},
															"nativeSrc": "1856:63:9",
															"nodeType": "YulIf",
															"src": "1856:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:9",
														"nodeType": "YulTypedName",
														"src": "1839:5:9",
														"type": ""
													}
												],
												"src": "1803:122:9"
											},
											{
												"body": {
													"nativeSrc": "1983:87:9",
													"nodeType": "YulBlock",
													"src": "1983:87:9",
													"statements": [
														{
															"nativeSrc": "1993:29:9",
															"nodeType": "YulAssignment",
															"src": "1993:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:9"
																},
																"nativeSrc": "2002:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:9"
																},
																"nativeSrc": "2031:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:9"
															},
															"nativeSrc": "2031:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:9",
														"nodeType": "YulTypedName",
														"src": "1961:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:9",
														"nodeType": "YulTypedName",
														"src": "1969:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:9",
														"nodeType": "YulTypedName",
														"src": "1977:5:9",
														"type": ""
													}
												],
												"src": "1931:139:9"
											},
											{
												"body": {
													"nativeSrc": "2121:32:9",
													"nodeType": "YulBlock",
													"src": "2121:32:9",
													"statements": [
														{
															"nativeSrc": "2131:16:9",
															"nodeType": "YulAssignment",
															"src": "2131:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:9",
																"nodeType": "YulIdentifier",
																"src": "2142:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:9",
														"nodeType": "YulTypedName",
														"src": "2103:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:9",
														"nodeType": "YulTypedName",
														"src": "2113:7:9",
														"type": ""
													}
												],
												"src": "2076:77:9"
											},
											{
												"body": {
													"nativeSrc": "2202:79:9",
													"nodeType": "YulBlock",
													"src": "2202:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:9",
																"nodeType": "YulBlock",
																"src": "2259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:9"
																			},
																			"nativeSrc": "2261:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:9"
																		},
																		"nativeSrc": "2261:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:9"
																				},
																				"nativeSrc": "2232:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:9"
																		},
																		"nativeSrc": "2222:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:9"
																},
																"nativeSrc": "2215:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:9"
															},
															"nativeSrc": "2212:63:9",
															"nodeType": "YulIf",
															"src": "2212:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:9",
														"nodeType": "YulTypedName",
														"src": "2195:5:9",
														"type": ""
													}
												],
												"src": "2159:122:9"
											},
											{
												"body": {
													"nativeSrc": "2339:87:9",
													"nodeType": "YulBlock",
													"src": "2339:87:9",
													"statements": [
														{
															"nativeSrc": "2349:29:9",
															"nodeType": "YulAssignment",
															"src": "2349:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:9"
																},
																"nativeSrc": "2358:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:9"
																},
																"nativeSrc": "2387:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:9"
															},
															"nativeSrc": "2387:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:9",
														"nodeType": "YulTypedName",
														"src": "2317:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:9",
														"nodeType": "YulTypedName",
														"src": "2325:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:9",
														"nodeType": "YulTypedName",
														"src": "2333:5:9",
														"type": ""
													}
												],
												"src": "2287:139:9"
											},
											{
												"body": {
													"nativeSrc": "2515:391:9",
													"nodeType": "YulBlock",
													"src": "2515:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:9",
																"nodeType": "YulBlock",
																"src": "2561:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:9"
																			},
																			"nativeSrc": "2563:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:9"
																		},
																		"nativeSrc": "2563:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:9"
																		},
																		"nativeSrc": "2532:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:9"
																},
																"nativeSrc": "2528:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:9"
															},
															"nativeSrc": "2525:119:9",
															"nodeType": "YulIf",
															"src": "2525:119:9"
														},
														{
															"nativeSrc": "2654:117:9",
															"nodeType": "YulBlock",
															"src": "2654:117:9",
															"statements": [
																{
																	"nativeSrc": "2669:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:9"
																				},
																				"nativeSrc": "2729:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:9"
																		},
																		"nativeSrc": "2708:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:9",
															"nodeType": "YulBlock",
															"src": "2781:118:9",
															"statements": [
																{
																	"nativeSrc": "2796:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:9"
																				},
																				"nativeSrc": "2857:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:9"
																		},
																		"nativeSrc": "2836:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:9",
														"nodeType": "YulTypedName",
														"src": "2477:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:9",
														"nodeType": "YulTypedName",
														"src": "2488:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:9",
														"nodeType": "YulTypedName",
														"src": "2500:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:9",
														"nodeType": "YulTypedName",
														"src": "2508:6:9",
														"type": ""
													}
												],
												"src": "2432:474:9"
											},
											{
												"body": {
													"nativeSrc": "2954:48:9",
													"nodeType": "YulBlock",
													"src": "2954:48:9",
													"statements": [
														{
															"nativeSrc": "2964:32:9",
															"nodeType": "YulAssignment",
															"src": "2964:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:9"
																		},
																		"nativeSrc": "2982:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:9"
																},
																"nativeSrc": "2975:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:9",
														"nodeType": "YulTypedName",
														"src": "2936:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:9",
														"nodeType": "YulTypedName",
														"src": "2946:7:9",
														"type": ""
													}
												],
												"src": "2912:90:9"
											},
											{
												"body": {
													"nativeSrc": "3067:50:9",
													"nodeType": "YulBlock",
													"src": "3067:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:9"
																		},
																		"nativeSrc": "3089:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:9"
																},
																"nativeSrc": "3077:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:9"
															},
															"nativeSrc": "3077:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:9",
														"nodeType": "YulTypedName",
														"src": "3055:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:9",
														"nodeType": "YulTypedName",
														"src": "3062:3:9",
														"type": ""
													}
												],
												"src": "3008:109:9"
											},
											{
												"body": {
													"nativeSrc": "3215:118:9",
													"nodeType": "YulBlock",
													"src": "3215:118:9",
													"statements": [
														{
															"nativeSrc": "3225:26:9",
															"nodeType": "YulAssignment",
															"src": "3225:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:9"
																},
																"nativeSrc": "3233:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:9"
																		},
																		"nativeSrc": "3308:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:9"
																},
																"nativeSrc": "3261:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:9"
															},
															"nativeSrc": "3261:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:9",
														"nodeType": "YulTypedName",
														"src": "3187:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:9",
														"nodeType": "YulTypedName",
														"src": "3199:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:9",
														"nodeType": "YulTypedName",
														"src": "3210:4:9",
														"type": ""
													}
												],
												"src": "3123:210:9"
											},
											{
												"body": {
													"nativeSrc": "3404:53:9",
													"nodeType": "YulBlock",
													"src": "3404:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:9"
																		},
																		"nativeSrc": "3426:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:9"
																},
																"nativeSrc": "3414:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:9"
															},
															"nativeSrc": "3414:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:9",
														"nodeType": "YulTypedName",
														"src": "3392:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:9",
														"nodeType": "YulTypedName",
														"src": "3399:3:9",
														"type": ""
													}
												],
												"src": "3339:118:9"
											},
											{
												"body": {
													"nativeSrc": "3561:124:9",
													"nodeType": "YulBlock",
													"src": "3561:124:9",
													"statements": [
														{
															"nativeSrc": "3571:26:9",
															"nodeType": "YulAssignment",
															"src": "3571:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:9"
																},
																"nativeSrc": "3579:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:9"
																		},
																		"nativeSrc": "3660:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:9"
																},
																"nativeSrc": "3607:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:9"
															},
															"nativeSrc": "3607:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:9",
														"nodeType": "YulTypedName",
														"src": "3533:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:9",
														"nodeType": "YulTypedName",
														"src": "3545:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:9",
														"nodeType": "YulTypedName",
														"src": "3556:4:9",
														"type": ""
													}
												],
												"src": "3463:222:9"
											},
											{
												"body": {
													"nativeSrc": "3757:263:9",
													"nodeType": "YulBlock",
													"src": "3757:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:9",
																"nodeType": "YulBlock",
																"src": "3803:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:9"
																			},
																			"nativeSrc": "3805:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:9"
																		},
																		"nativeSrc": "3805:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:9"
																		},
																		"nativeSrc": "3774:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:9"
																},
																"nativeSrc": "3770:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:9"
															},
															"nativeSrc": "3767:119:9",
															"nodeType": "YulIf",
															"src": "3767:119:9"
														},
														{
															"nativeSrc": "3896:117:9",
															"nodeType": "YulBlock",
															"src": "3896:117:9",
															"statements": [
																{
																	"nativeSrc": "3911:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:9",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:9",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:9",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:9"
																				},
																				"nativeSrc": "3971:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:9"
																		},
																		"nativeSrc": "3950:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:9",
														"nodeType": "YulTypedName",
														"src": "3727:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:9",
														"nodeType": "YulTypedName",
														"src": "3738:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:9",
														"nodeType": "YulTypedName",
														"src": "3750:6:9",
														"type": ""
													}
												],
												"src": "3691:329:9"
											},
											{
												"body": {
													"nativeSrc": "4126:519:9",
													"nodeType": "YulBlock",
													"src": "4126:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:9",
																"nodeType": "YulBlock",
																"src": "4172:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:9"
																			},
																			"nativeSrc": "4174:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:9"
																		},
																		"nativeSrc": "4174:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:9"
																		},
																		"nativeSrc": "4143:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:9"
																},
																"nativeSrc": "4139:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:9"
															},
															"nativeSrc": "4136:119:9",
															"nodeType": "YulIf",
															"src": "4136:119:9"
														},
														{
															"nativeSrc": "4265:117:9",
															"nodeType": "YulBlock",
															"src": "4265:117:9",
															"statements": [
																{
																	"nativeSrc": "4280:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:9"
																				},
																				"nativeSrc": "4340:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:9"
																		},
																		"nativeSrc": "4319:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:9",
															"nodeType": "YulBlock",
															"src": "4392:118:9",
															"statements": [
																{
																	"nativeSrc": "4407:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:9"
																				},
																				"nativeSrc": "4468:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:9"
																		},
																		"nativeSrc": "4447:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:9",
															"nodeType": "YulBlock",
															"src": "4520:118:9",
															"statements": [
																{
																	"nativeSrc": "4535:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:9"
																				},
																				"nativeSrc": "4596:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:9"
																		},
																		"nativeSrc": "4575:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:9",
														"nodeType": "YulTypedName",
														"src": "4080:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:9",
														"nodeType": "YulTypedName",
														"src": "4091:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:9",
														"nodeType": "YulTypedName",
														"src": "4103:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:9",
														"nodeType": "YulTypedName",
														"src": "4111:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:9",
														"nodeType": "YulTypedName",
														"src": "4119:6:9",
														"type": ""
													}
												],
												"src": "4026:619:9"
											},
											{
												"body": {
													"nativeSrc": "4694:43:9",
													"nodeType": "YulBlock",
													"src": "4694:43:9",
													"statements": [
														{
															"nativeSrc": "4704:27:9",
															"nodeType": "YulAssignment",
															"src": "4704:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:9"
																},
																"nativeSrc": "4715:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:9",
														"nodeType": "YulTypedName",
														"src": "4676:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:9",
														"nodeType": "YulTypedName",
														"src": "4686:7:9",
														"type": ""
													}
												],
												"src": "4651:86:9"
											},
											{
												"body": {
													"nativeSrc": "4804:51:9",
													"nodeType": "YulBlock",
													"src": "4804:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:9"
																		},
																		"nativeSrc": "4826:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:9"
																},
																"nativeSrc": "4814:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:9"
															},
															"nativeSrc": "4814:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:9",
														"nodeType": "YulTypedName",
														"src": "4792:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:9",
														"nodeType": "YulTypedName",
														"src": "4799:3:9",
														"type": ""
													}
												],
												"src": "4743:112:9"
											},
											{
												"body": {
													"nativeSrc": "4955:120:9",
													"nodeType": "YulBlock",
													"src": "4955:120:9",
													"statements": [
														{
															"nativeSrc": "4965:26:9",
															"nodeType": "YulAssignment",
															"src": "4965:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:9"
																},
																"nativeSrc": "4973:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:9"
																		},
																		"nativeSrc": "5050:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:9"
																},
																"nativeSrc": "5001:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:9"
															},
															"nativeSrc": "5001:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:9",
														"nodeType": "YulTypedName",
														"src": "4927:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:9",
														"nodeType": "YulTypedName",
														"src": "4939:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:9",
														"nodeType": "YulTypedName",
														"src": "4950:4:9",
														"type": ""
													}
												],
												"src": "4861:214:9"
											},
											{
												"body": {
													"nativeSrc": "5147:263:9",
													"nodeType": "YulBlock",
													"src": "5147:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:9",
																"nodeType": "YulBlock",
																"src": "5193:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:9"
																			},
																			"nativeSrc": "5195:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:9"
																		},
																		"nativeSrc": "5195:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:9"
																		},
																		"nativeSrc": "5164:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:9"
																},
																"nativeSrc": "5160:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:9"
															},
															"nativeSrc": "5157:119:9",
															"nodeType": "YulIf",
															"src": "5157:119:9"
														},
														{
															"nativeSrc": "5286:117:9",
															"nodeType": "YulBlock",
															"src": "5286:117:9",
															"statements": [
																{
																	"nativeSrc": "5301:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:9"
																				},
																				"nativeSrc": "5361:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:9"
																		},
																		"nativeSrc": "5340:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:9",
														"nodeType": "YulTypedName",
														"src": "5117:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:9",
														"nodeType": "YulTypedName",
														"src": "5128:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:9",
														"nodeType": "YulTypedName",
														"src": "5140:6:9",
														"type": ""
													}
												],
												"src": "5081:329:9"
											},
											{
												"body": {
													"nativeSrc": "5481:53:9",
													"nodeType": "YulBlock",
													"src": "5481:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:9"
																		},
																		"nativeSrc": "5503:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:9"
																},
																"nativeSrc": "5491:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:9"
															},
															"nativeSrc": "5491:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:9",
														"nodeType": "YulTypedName",
														"src": "5469:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:9",
														"nodeType": "YulTypedName",
														"src": "5476:3:9",
														"type": ""
													}
												],
												"src": "5416:118:9"
											},
											{
												"body": {
													"nativeSrc": "5638:124:9",
													"nodeType": "YulBlock",
													"src": "5638:124:9",
													"statements": [
														{
															"nativeSrc": "5648:26:9",
															"nodeType": "YulAssignment",
															"src": "5648:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:9"
																},
																"nativeSrc": "5656:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:9"
																		},
																		"nativeSrc": "5737:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:9"
																},
																"nativeSrc": "5684:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:9"
															},
															"nativeSrc": "5684:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:9",
														"nodeType": "YulTypedName",
														"src": "5610:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:9",
														"nodeType": "YulTypedName",
														"src": "5622:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:9",
														"nodeType": "YulTypedName",
														"src": "5633:4:9",
														"type": ""
													}
												],
												"src": "5540:222:9"
											},
											{
												"body": {
													"nativeSrc": "5851:391:9",
													"nodeType": "YulBlock",
													"src": "5851:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:9",
																"nodeType": "YulBlock",
																"src": "5897:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:9"
																			},
																			"nativeSrc": "5899:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:9"
																		},
																		"nativeSrc": "5899:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:9"
																		},
																		"nativeSrc": "5868:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:9"
																},
																"nativeSrc": "5864:32:9",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:9"
															},
															"nativeSrc": "5861:119:9",
															"nodeType": "YulIf",
															"src": "5861:119:9"
														},
														{
															"nativeSrc": "5990:117:9",
															"nodeType": "YulBlock",
															"src": "5990:117:9",
															"statements": [
																{
																	"nativeSrc": "6005:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:9"
																				},
																				"nativeSrc": "6065:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:9"
																		},
																		"nativeSrc": "6044:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:9",
															"nodeType": "YulBlock",
															"src": "6117:118:9",
															"statements": [
																{
																	"nativeSrc": "6132:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:9"
																				},
																				"nativeSrc": "6193:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:9"
																		},
																		"nativeSrc": "6172:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:9",
														"nodeType": "YulTypedName",
														"src": "5813:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:9",
														"nodeType": "YulTypedName",
														"src": "5824:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:9",
														"nodeType": "YulTypedName",
														"src": "5836:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:9",
														"nodeType": "YulTypedName",
														"src": "5844:6:9",
														"type": ""
													}
												],
												"src": "5768:474:9"
											},
											{
												"body": {
													"nativeSrc": "6276:152:9",
													"nodeType": "YulBlock",
													"src": "6276:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:9"
																},
																"nativeSrc": "6286:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:9"
															},
															"nativeSrc": "6286:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:9"
																},
																"nativeSrc": "6383:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:9"
															},
															"nativeSrc": "6383:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:9"
																},
																"nativeSrc": "6407:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:9"
															},
															"nativeSrc": "6407:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:9"
											},
											{
												"body": {
													"nativeSrc": "6485:269:9",
													"nodeType": "YulBlock",
													"src": "6485:269:9",
													"statements": [
														{
															"nativeSrc": "6495:22:9",
															"nodeType": "YulAssignment",
															"src": "6495:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:9"
																},
																"nativeSrc": "6505:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:9"
																}
															]
														},
														{
															"nativeSrc": "6526:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:9"
																},
																"nativeSrc": "6552:12:9",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:9",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:9",
																"nodeType": "YulBlock",
																"src": "6603:51:9",
																"statements": [
																	{
																		"nativeSrc": "6617:27:9",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:9",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:9"
																			},
																			"nativeSrc": "6627:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:9"
																},
																"nativeSrc": "6576:26:9",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:9"
															},
															"nativeSrc": "6573:81:9",
															"nodeType": "YulIf",
															"src": "6573:81:9"
														},
														{
															"body": {
																"nativeSrc": "6706:42:9",
																"nodeType": "YulBlock",
																"src": "6706:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:9"
																			},
																			"nativeSrc": "6720:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:9"
																		},
																		"nativeSrc": "6720:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:9",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:9"
																		},
																		"nativeSrc": "6690:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:9"
																},
																"nativeSrc": "6667:38:9",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:9"
															},
															"nativeSrc": "6664:84:9",
															"nodeType": "YulIf",
															"src": "6664:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:9",
														"nodeType": "YulTypedName",
														"src": "6469:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:9",
														"nodeType": "YulTypedName",
														"src": "6478:6:9",
														"type": ""
													}
												],
												"src": "6434:320:9"
											},
											{
												"body": {
													"nativeSrc": "6788:152:9",
													"nodeType": "YulBlock",
													"src": "6788:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6805:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6805:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6808:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6808:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6798:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:9"
																},
																"nativeSrc": "6798:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6798:88:9"
															},
															"nativeSrc": "6798:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6798:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6902:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6902:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6905:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6905:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6895:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:9"
																},
																"nativeSrc": "6895:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6895:15:9"
															},
															"nativeSrc": "6895:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6895:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6926:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6926:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6929:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6929:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6919:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:9"
																},
																"nativeSrc": "6919:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6919:15:9"
															},
															"nativeSrc": "6919:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6919:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6760:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6760:180:9"
											},
											{
												"body": {
													"nativeSrc": "6994:362:9",
													"nodeType": "YulBlock",
													"src": "6994:362:9",
													"statements": [
														{
															"nativeSrc": "7004:25:9",
															"nodeType": "YulAssignment",
															"src": "7004:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7027:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7027:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7009:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7009:17:9"
																},
																"nativeSrc": "7009:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7009:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7004:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7004:1:9"
																}
															]
														},
														{
															"nativeSrc": "7038:25:9",
															"nodeType": "YulAssignment",
															"src": "7038:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7061:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7061:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7043:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7043:17:9"
																},
																"nativeSrc": "7043:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7043:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7038:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7038:1:9"
																}
															]
														},
														{
															"nativeSrc": "7072:28:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7072:28:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7095:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7095:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7098:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7098:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7091:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7091:3:9"
																},
																"nativeSrc": "7091:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7091:9:9"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7076:11:9",
																	"nodeType": "YulTypedName",
																	"src": "7076:11:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7109:41:9",
															"nodeType": "YulAssignment",
															"src": "7109:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7138:11:9",
																		"nodeType": "YulIdentifier",
																		"src": "7138:11:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7120:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7120:17:9"
																},
																"nativeSrc": "7120:30:9",
																"nodeType": "YulFunctionCall",
																"src": "7120:30:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7109:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "7109:7:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7327:22:9",
																"nodeType": "YulBlock",
																"src": "7327:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7329:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7329:16:9"
																			},
																			"nativeSrc": "7329:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7329:18:9"
																		},
																		"nativeSrc": "7329:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7329:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7260:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "7260:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7253:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7253:6:9"
																				},
																				"nativeSrc": "7253:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7253:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7283:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "7283:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7290:7:9",
																								"nodeType": "YulIdentifier",
																								"src": "7290:7:9"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7299:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "7299:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7286:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "7286:3:9"
																						},
																						"nativeSrc": "7286:15:9",
																						"nodeType": "YulFunctionCall",
																						"src": "7286:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7280:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "7280:2:9"
																				},
																				"nativeSrc": "7280:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7280:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7233:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7233:2:9"
																		},
																		"nativeSrc": "7233:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7233:83:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7213:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7213:6:9"
																},
																"nativeSrc": "7213:113:9",
																"nodeType": "YulFunctionCall",
																"src": "7213:113:9"
															},
															"nativeSrc": "7210:139:9",
															"nodeType": "YulIf",
															"src": "7210:139:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6946:410:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6977:1:9",
														"nodeType": "YulTypedName",
														"src": "6977:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6980:1:9",
														"nodeType": "YulTypedName",
														"src": "6980:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6986:7:9",
														"nodeType": "YulTypedName",
														"src": "6986:7:9",
														"type": ""
													}
												],
												"src": "6946:410:9"
											},
											{
												"body": {
													"nativeSrc": "7516:288:9",
													"nodeType": "YulBlock",
													"src": "7516:288:9",
													"statements": [
														{
															"nativeSrc": "7526:26:9",
															"nodeType": "YulAssignment",
															"src": "7526:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7538:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7538:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7549:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7549:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7534:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7534:3:9"
																},
																"nativeSrc": "7534:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7534:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7526:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7526:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7606:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7619:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7619:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7630:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7630:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7615:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7615:3:9"
																		},
																		"nativeSrc": "7615:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7615:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7562:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7562:43:9"
																},
																"nativeSrc": "7562:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7562:71:9"
															},
															"nativeSrc": "7562:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7562:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7687:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7687:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7700:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7700:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7711:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7711:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7696:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7696:3:9"
																		},
																		"nativeSrc": "7696:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7696:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7643:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7643:43:9"
																},
																"nativeSrc": "7643:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7643:72:9"
															},
															"nativeSrc": "7643:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7643:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7769:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7769:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7782:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7782:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7793:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7793:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7778:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:9"
																		},
																		"nativeSrc": "7778:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7778:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7725:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7725:43:9"
																},
																"nativeSrc": "7725:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7725:72:9"
															},
															"nativeSrc": "7725:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7725:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7362:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7472:9:9",
														"nodeType": "YulTypedName",
														"src": "7472:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7484:6:9",
														"nodeType": "YulTypedName",
														"src": "7484:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7492:6:9",
														"nodeType": "YulTypedName",
														"src": "7492:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7500:6:9",
														"nodeType": "YulTypedName",
														"src": "7500:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7511:4:9",
														"nodeType": "YulTypedName",
														"src": "7511:4:9",
														"type": ""
													}
												],
												"src": "7362:442:9"
											},
											{
												"body": {
													"nativeSrc": "7936:206:9",
													"nodeType": "YulBlock",
													"src": "7936:206:9",
													"statements": [
														{
															"nativeSrc": "7946:26:9",
															"nodeType": "YulAssignment",
															"src": "7946:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7958:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7958:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7969:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7969:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7954:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7954:3:9"
																},
																"nativeSrc": "7954:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7954:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7946:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7946:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8026:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8026:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8039:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8039:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8050:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8050:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8035:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8035:3:9"
																		},
																		"nativeSrc": "8035:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8035:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7982:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7982:43:9"
																},
																"nativeSrc": "7982:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7982:71:9"
															},
															"nativeSrc": "7982:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7982:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8107:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "8107:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8120:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8120:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8131:2:9",
																				"nodeType": "YulLiteral",
																				"src": "8131:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8116:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:9"
																		},
																		"nativeSrc": "8116:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8116:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8063:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "8063:43:9"
																},
																"nativeSrc": "8063:72:9",
																"nodeType": "YulFunctionCall",
																"src": "8063:72:9"
															},
															"nativeSrc": "8063:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "8063:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7810:332:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7900:9:9",
														"nodeType": "YulTypedName",
														"src": "7900:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7912:6:9",
														"nodeType": "YulTypedName",
														"src": "7912:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7920:6:9",
														"nodeType": "YulTypedName",
														"src": "7920:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7931:4:9",
														"nodeType": "YulTypedName",
														"src": "7931:4:9",
														"type": ""
													}
												],
												"src": "7810:332:9"
											},
											{
												"body": {
													"nativeSrc": "8192:147:9",
													"nodeType": "YulBlock",
													"src": "8192:147:9",
													"statements": [
														{
															"nativeSrc": "8202:25:9",
															"nodeType": "YulAssignment",
															"src": "8202:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8225:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8225:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8207:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8207:17:9"
																},
																"nativeSrc": "8207:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8207:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8202:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8202:1:9"
																}
															]
														},
														{
															"nativeSrc": "8236:25:9",
															"nodeType": "YulAssignment",
															"src": "8236:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8259:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8259:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8241:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "8241:17:9"
																},
																"nativeSrc": "8241:20:9",
																"nodeType": "YulFunctionCall",
																"src": "8241:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8236:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "8236:1:9"
																}
															]
														},
														{
															"nativeSrc": "8270:16:9",
															"nodeType": "YulAssignment",
															"src": "8270:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8281:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8281:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8284:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8284:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8277:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:9"
																},
																"nativeSrc": "8277:9:9",
																"nodeType": "YulFunctionCall",
																"src": "8277:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8270:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8270:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8310:22:9",
																"nodeType": "YulBlock",
																"src": "8310:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8312:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "8312:16:9"
																			},
																			"nativeSrc": "8312:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8312:18:9"
																		},
																		"nativeSrc": "8312:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8312:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8302:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "8302:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8305:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8305:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8299:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "8299:2:9"
																},
																"nativeSrc": "8299:10:9",
																"nodeType": "YulFunctionCall",
																"src": "8299:10:9"
															},
															"nativeSrc": "8296:36:9",
															"nodeType": "YulIf",
															"src": "8296:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8148:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8179:1:9",
														"nodeType": "YulTypedName",
														"src": "8179:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8182:1:9",
														"nodeType": "YulTypedName",
														"src": "8182:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8188:3:9",
														"nodeType": "YulTypedName",
														"src": "8188:3:9",
														"type": ""
													}
												],
												"src": "8148:191:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"932": [
									{
										"length": 32,
										"start": 1128
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c806342966c68116100a05780638da5cb5b1161006f5780638da5cb5b1461029157806395d89b41146102af578063a9059cbb146102cd578063dd62ed3e146102fd578063f2fde38b1461032d57610109565b806342966c681461021f57806370a082311461023b578063715018a61461026b57806379cc67901461027557610109565b80631a18e707116100dc5780631a18e7071461019757806323b872dd146101b3578063313ce567146101e3578063355274ea1461020157610109565b806306fdde031461010d578063095ea7b31461012b5780630ac168a11461015b57806318160ddd14610179575b5f5ffd5b610115610349565b6040516101229190610f67565b60405180910390f35b61014560048036038101906101409190611018565b6103d9565b6040516101529190611070565b60405180910390f35b6101636103fb565b6040516101709190611098565b60405180910390f35b610181610401565b60405161018e9190611098565b60405180910390f35b6101b160048036038101906101ac91906110b1565b61040a565b005b6101cd60048036038101906101c891906110dc565b61042f565b6040516101da9190611070565b60405180910390f35b6101eb61045d565b6040516101f89190611147565b60405180910390f35b610209610465565b6040516102169190611098565b60405180910390f35b610239600480360381019061023491906110b1565b61048c565b005b61025560048036038101906102509190611160565b6104a0565b6040516102629190611098565b60405180910390f35b6102736104e5565b005b61028f600480360381019061028a9190611018565b6104f8565b005b610299610518565b6040516102a6919061119a565b60405180910390f35b6102b7610540565b6040516102c49190610f67565b60405180910390f35b6102e760048036038101906102e29190611018565b6105d0565b6040516102f49190611070565b60405180910390f35b610317600480360381019061031291906111b3565b6105f2565b6040516103249190611098565b60405180910390f35b61034760048036038101906103429190611160565b610674565b005b6060600380546103589061121e565b80601f01602080910402602001604051908101604052809291908181526020018280546103849061121e565b80156103cf5780601f106103a6576101008083540402835291602001916103cf565b820191905f5260205f20905b8154815290600101906020018083116103b257829003601f168201915b5050505050905090565b5f5f6103e36106f8565b90506103f08185856106ff565b600191505092915050565b60065481565b5f600254905090565b610412610711565b670de0b6b3a764000081610426919061127b565b60068190555050565b5f5f6104396106f8565b9050610446858285610798565b61045185858561082a565b60019150509392505050565b5f6012905090565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b61049d6104976106f8565b8261091a565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6104ed610711565b6104f65f610999565b565b61050a826105046106f8565b83610798565b610514828261091a565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461054f9061121e565b80601f016020809104026020016040519081016040528092919081815260200182805461057b9061121e565b80156105c65780601f1061059d576101008083540402835291602001916105c6565b820191905f5260205f20905b8154815290600101906020018083116105a957829003601f168201915b5050505050905090565b5f5f6105da6106f8565b90506105e781858561082a565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61067c610711565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ec575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106e3919061119a565b60405180910390fd5b6106f581610999565b50565b5f33905090565b61070c8383836001610a5c565b505050565b6107196106f8565b73ffffffffffffffffffffffffffffffffffffffff16610737610518565b73ffffffffffffffffffffffffffffffffffffffff16146107965761075a6106f8565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078d919061119a565b60405180910390fd5b565b5f6107a384846105f2565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108245781811015610815578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161080c939291906112bc565b60405180910390fd5b61082384848484035f610a5c565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361089a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610891919061119a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361090a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610901919061119a565b60405180910390fd5b610915838383610c2b565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361098a575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610981919061119a565b60405180910390fd5b610995825f83610c2b565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610acc575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ac3919061119a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b3c575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b33919061119a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c25578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c1c9190611098565b60405180910390a35b50505050565b610c36838383610c3b565b505050565b610c46838383610cde565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cd9575f610c82610465565b90505f610c8d610401565b905081811115610cd65780826040517f9e79f854000000000000000000000000000000000000000000000000000000008152600401610ccd9291906112f1565b60405180910390fd5b50505b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d2e578060025f828254610d229190611318565b92505081905550610dfc565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610db7578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610dae939291906112bc565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e43578060025f8282540392505081905550610e8d565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eea9190611098565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f3982610ef7565b610f438185610f01565b9350610f53818560208601610f11565b610f5c81610f1f565b840191505092915050565b5f6020820190508181035f830152610f7f8184610f2f565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fb482610f8b565b9050919050565b610fc481610faa565b8114610fce575f5ffd5b50565b5f81359050610fdf81610fbb565b92915050565b5f819050919050565b610ff781610fe5565b8114611001575f5ffd5b50565b5f8135905061101281610fee565b92915050565b5f5f6040838503121561102e5761102d610f87565b5b5f61103b85828601610fd1565b925050602061104c85828601611004565b9150509250929050565b5f8115159050919050565b61106a81611056565b82525050565b5f6020820190506110835f830184611061565b92915050565b61109281610fe5565b82525050565b5f6020820190506110ab5f830184611089565b92915050565b5f602082840312156110c6576110c5610f87565b5b5f6110d384828501611004565b91505092915050565b5f5f5f606084860312156110f3576110f2610f87565b5b5f61110086828701610fd1565b935050602061111186828701610fd1565b925050604061112286828701611004565b9150509250925092565b5f60ff82169050919050565b6111418161112c565b82525050565b5f60208201905061115a5f830184611138565b92915050565b5f6020828403121561117557611174610f87565b5b5f61118284828501610fd1565b91505092915050565b61119481610faa565b82525050565b5f6020820190506111ad5f83018461118b565b92915050565b5f5f604083850312156111c9576111c8610f87565b5b5f6111d685828601610fd1565b92505060206111e785828601610fd1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061123557607f821691505b602082108103611248576112476111f1565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61128582610fe5565b915061129083610fe5565b925082820261129e81610fe5565b915082820484148315176112b5576112b461124e565b5b5092915050565b5f6060820190506112cf5f83018661118b565b6112dc6020830185611089565b6112e96040830184611089565b949350505050565b5f6040820190506113045f830185611089565b6113116020830184611089565b9392505050565b5f61132282610fe5565b915061132d83610fe5565b92508282019050808211156113455761134461124e565b5b9291505056fea26469706673582212201290132b36b3545838b8a60977f0605efd61fb23a63a194e0ab3e14ea81fccdc64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32D JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x275 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1A18E707 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x1A18E707 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x201 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0xAC168A1 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x349 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x181 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x10B1 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x273 PUSH2 0x4E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x299 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B7 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1018 JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x5F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1160 JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x358 SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x384 SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3CF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3CF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E3 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP2 DUP6 DUP6 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x711 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x127B JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x439 PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x446 DUP6 DUP3 DUP6 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x451 DUP6 DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x49D PUSH2 0x497 PUSH2 0x6F8 JUMP JUMPDEST DUP3 PUSH2 0x91A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4ED PUSH2 0x711 JUMP JUMPDEST PUSH2 0x4F6 PUSH0 PUSH2 0x999 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x50A DUP3 PUSH2 0x504 PUSH2 0x6F8 JUMP JUMPDEST DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x514 DUP3 DUP3 PUSH2 0x91A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x54F SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57B SWAP1 PUSH2 0x121E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5DA PUSH2 0x6F8 JUMP JUMPDEST SWAP1 POP PUSH2 0x5E7 DUP2 DUP6 DUP6 PUSH2 0x82A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x67C PUSH2 0x711 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6EC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F5 DUP2 PUSH2 0x999 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x70C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA5C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x719 PUSH2 0x6F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x737 PUSH2 0x518 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x796 JUMPI PUSH2 0x75A PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x7A3 DUP5 DUP5 PUSH2 0x5F2 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x824 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x815 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x823 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA5C JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x89A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x901 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x915 DUP4 DUP4 DUP4 PUSH2 0xC2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x98A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x995 DUP3 PUSH0 DUP4 PUSH2 0xC2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC3 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC25 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC36 DUP4 DUP4 DUP4 PUSH2 0xC3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC46 DUP4 DUP4 DUP4 PUSH2 0xCDE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCD9 JUMPI PUSH0 PUSH2 0xC82 PUSH2 0x465 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xC8D PUSH2 0x401 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xCD6 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x9E79F85400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP3 SWAP2 SWAP1 PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD2E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD22 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDFC JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xDB7 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE43 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEEA SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF39 DUP3 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xF43 DUP2 DUP6 PUSH2 0xF01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF11 JUMP JUMPDEST PUSH2 0xF5C DUP2 PUSH2 0xF1F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7F DUP2 DUP5 PUSH2 0xF2F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB4 DUP3 PUSH2 0xF8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC4 DUP2 PUSH2 0xFAA JUMP JUMPDEST DUP2 EQ PUSH2 0xFCE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDF DUP2 PUSH2 0xFBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFF7 DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1001 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1012 DUP2 PUSH2 0xFEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x102E JUMPI PUSH2 0x102D PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x103B DUP6 DUP3 DUP7 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x104C DUP6 DUP3 DUP7 ADD PUSH2 0x1004 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106A DUP2 PUSH2 0x1056 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1083 PUSH0 DUP4 ADD DUP5 PUSH2 0x1061 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1092 DUP2 PUSH2 0xFE5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10AB PUSH0 DUP4 ADD DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C6 JUMPI PUSH2 0x10C5 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1004 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1100 DUP7 DUP3 DUP8 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1111 DUP7 DUP3 DUP8 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1122 DUP7 DUP3 DUP8 ADD PUSH2 0x1004 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1141 DUP2 PUSH2 0x112C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115A PUSH0 DUP4 ADD DUP5 PUSH2 0x1138 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1175 JUMPI PUSH2 0x1174 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1182 DUP5 DUP3 DUP6 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1194 DUP2 PUSH2 0xFAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11AD PUSH0 DUP4 ADD DUP5 PUSH2 0x118B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C9 JUMPI PUSH2 0x11C8 PUSH2 0xF87 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D6 DUP6 DUP3 DUP7 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11E7 DUP6 DUP3 DUP7 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1235 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1248 JUMPI PUSH2 0x1247 PUSH2 0x11F1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1285 DUP3 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1290 DUP4 PUSH2 0xFE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x129E DUP2 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0x124E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12CF PUSH0 DUP4 ADD DUP7 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x12DC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x12E9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1304 PUSH0 DUP4 ADD DUP6 PUSH2 0x1089 JUMP JUMPDEST PUSH2 0x1311 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1322 DUP3 PUSH2 0xFE5 JUMP JUMPDEST SWAP2 POP PUSH2 0x132D DUP4 PUSH2 0xFE5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x124E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SWAP1 SGT 0x2B CALLDATASIZE 0xB3 SLOAD PC CODESIZE 0xB8 0xA6 MULMOD PUSH24 0xF0605EFD61FB23A63A194E0AB3E14EA81FCCDC64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "324:1294:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;387:26:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1238:107:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4776:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:81:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;618:87:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;387:26:8:-;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;1238:107:8:-;1531:13:0;:11;:13::i;:::-;1331:6:8::1;1322;:15;;;;:::i;:::-;1308:11;:29;;;;1238:107:::0;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;923:81:5:-;967:7;993:4;986:11;;923:81;:::o;618:87:4:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10415:477:2:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;1414:201:8:-;1529:36;1549:4;1555:2;1559:5;1529:19;:36::i;:::-;1414:201;;;:::o;1059:371:5:-;1153:30;1167:4;1173:2;1177:5;1153:13;:30::i;:::-;1214:1;1198:18;;:4;:18;;;1194:230;;1232:17;1252:5;:3;:5::i;:::-;1232:25;;1271:14;1288:13;:11;:13::i;:::-;1271:30;;1328:9;1319:6;:18;1315:99;;;1381:6;1389:9;1364:35;;;;;;;;;;;;:::i;:::-;;;;;;;;1315:99;1218:206;;1194:230;1059:371;;;:::o;6008:1107:2:-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:329::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:180::-;6808:77;6805:1;6798:88;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6946:410;6986:7;7009:20;7027:1;7009:20;:::i;:::-;7004:25;;7043:20;7061:1;7043:20;:::i;:::-;7038:25;;7098:1;7095;7091:9;7120:30;7138:11;7120:30;:::i;:::-;7109:41;;7299:1;7290:7;7286:15;7283:1;7280:22;7260:1;7253:9;7233:83;7210:139;;7329:18;;:::i;:::-;7210:139;6994:362;6946:410;;;;:::o;7362:442::-;7511:4;7549:2;7538:9;7534:18;7526:26;;7562:71;7630:1;7619:9;7615:17;7606:6;7562:71;:::i;:::-;7643:72;7711:2;7700:9;7696:18;7687:6;7643:72;:::i;:::-;7725;7793:2;7782:9;7778:18;7769:6;7725:72;:::i;:::-;7362:442;;;;;;:::o;7810:332::-;7931:4;7969:2;7958:9;7954:18;7946:26;;7982:71;8050:1;8039:9;8035:17;8026:6;7982:71;:::i;:::-;8063:72;8131:2;8120:9;8116:18;8107:6;8063:72;:::i;:::-;7810:332;;;;;:::o;8148:191::-;8188:3;8207:20;8225:1;8207:20;:::i;:::-;8202:25;;8241:20;8259:1;8241:20;:::i;:::-;8236:25;;8284:1;8281;8277:9;8270:16;;8305:3;8302:1;8299:10;8296:36;;;8312:18;;:::i;:::-;8296:36;8148:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "998600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"blockReward()": "2493",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"cap()": "infinite",
								"decimals()": "405",
								"name()": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"setBlockReward(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_mintMinerReward()": "infinite",
								"_update(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "A0"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 422,
									"end": 766,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 422,
									"end": 766,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 573,
									"end": 585,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 547,
									"end": 553,
									"name": "PUSH",
									"source": 8,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 541,
									"end": 544,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 541,
									"end": 553,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 541,
									"end": 553,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 541,
									"end": 553,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 541,
									"end": 553,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 541,
									"end": 553,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 541,
									"end": 553,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 541,
									"end": 553,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4D79546F6B656E00000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4D544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 756,
									"end": 760,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 765,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 752,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 804,
									"end": 805,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 5,
									"value": "392E1E2700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 788,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 788,
									"end": 806,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 788,
									"end": 806,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 752,
									"end": 817,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 752,
									"end": 817,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 833,
									"end": 837,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 826,
									"end": 837,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 826,
									"end": 837,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 826,
									"end": 837,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 826,
									"end": 837,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 716,
									"end": 844,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 618,
									"end": 626,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "42C1D80"
								},
								{
									"begin": 611,
									"end": 614,
									"modifierDepth": 3,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 611,
									"end": 626,
									"modifierDepth": 3,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 611,
									"end": 626,
									"modifierDepth": 3,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 603,
									"end": 669,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 603,
									"end": 669,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 680,
									"end": 718,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 686,
									"end": 698,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "39E7139A8C08FA06000000"
								},
								{
									"begin": 680,
									"end": 685,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 680,
									"end": 685,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 685,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 680,
									"end": 718,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 680,
									"end": 718,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 680,
									"end": 718,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 680,
									"end": 718,
									"modifierDepth": 3,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 680,
									"end": 718,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 752,
									"end": 758,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 743,
									"end": 749,
									"modifierDepth": 3,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 743,
									"end": 758,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 743,
									"end": 758,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 743,
									"end": 758,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 743,
									"end": 758,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 743,
									"end": 758,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 743,
									"end": 758,
									"modifierDepth": 3,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 743,
									"end": 758,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 729,
									"end": 740,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 729,
									"end": 758,
									"modifierDepth": 3,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 729,
									"end": 758,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 729,
									"end": 758,
									"modifierDepth": 3,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 729,
									"end": 758,
									"modifierDepth": 3,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 422,
									"end": 766,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1414,
									"end": 1615,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1414,
									"end": 1615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1565,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1549,
									"end": 1553,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1557,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1559,
									"end": 1564,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1548,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1529,
									"end": 1548,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1548,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1565,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1565,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1565,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1529,
									"end": 1565,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1529,
									"end": 1565,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1615,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1615,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1615,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1414,
									"end": 1615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1167,
									"end": 1171,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1173,
									"end": 1175,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1177,
									"end": 1182,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1166,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1153,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1214,
									"end": 1215,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1202,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1198,
									"end": 1216,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1232,
									"end": 1249,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1255,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1252,
									"end": 1257,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1232,
									"end": 1257,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1232,
									"end": 1257,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1285,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1299,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1288,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1301,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1271,
									"end": 1301,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1328,
									"end": 1337,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1337,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1387,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1389,
									"end": 1398,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 5,
									"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1364,
									"end": 1399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1399,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1315,
									"end": 1414,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1218,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1218,
									"end": 1424,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1194,
									"end": 1424,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1430,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1430,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 967,
									"end": 974,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 993,
									"end": 997,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 986,
									"end": 997,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 986,
									"end": 997,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1004,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 923,
									"end": 1004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2849,
									"end": 2946,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 2849,
									"end": 2946,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2901,
									"end": 2908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2927,
									"end": 2939,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2927,
									"end": 2939,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2920,
									"end": 2939,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2920,
									"end": 2939,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2849,
									"end": 2946,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2849,
									"end": 2946,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "113"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "71"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 9,
									"value": "126"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 2054,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 1874,
									"end": 2054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1922,
									"end": 1999,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1919,
									"end": 1920,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1912,
									"end": 2000,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2023,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2009,
									"end": 2024,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2043,
									"end": 2047,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2040,
									"end": 2041,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2033,
									"end": 2048,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2470,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2060,
									"end": 2470,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2100,
									"end": 2107,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2123,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 2141,
									"end": 2142,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2143,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2123,
									"end": 2143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2143,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 2123,
									"end": 2143,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2118,
									"end": 2143,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2118,
									"end": 2143,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2157,
									"end": 2177,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2157,
									"end": 2177,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2157,
									"end": 2177,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2157,
									"end": 2177,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 2157,
									"end": 2177,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2177,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2177,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2212,
									"end": 2213,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2209,
									"end": 2210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2205,
									"end": 2214,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 2252,
									"end": 2263,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2234,
									"end": 2264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2234,
									"end": 2264,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 2234,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2223,
									"end": 2264,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2223,
									"end": 2264,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2413,
									"end": 2414,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2404,
									"end": 2411,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2400,
									"end": 2415,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2397,
									"end": 2398,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2394,
									"end": 2416,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2374,
									"end": 2375,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2367,
									"end": 2376,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2347,
									"end": 2430,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2324,
									"end": 2463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 2324,
									"end": 2463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2443,
									"end": 2461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 2443,
									"end": 2461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2324,
									"end": 2463,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 2324,
									"end": 2463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2108,
									"end": 2470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2470,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2470,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2470,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2060,
									"end": 2470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2476,
									"end": 2575,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2476,
									"end": 2575,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2528,
									"end": 2534,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2562,
									"end": 2567,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2556,
									"end": 2568,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2568,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2546,
									"end": 2568,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2476,
									"end": 2575,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2476,
									"end": 2575,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2476,
									"end": 2575,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2476,
									"end": 2575,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2581,
									"end": 2761,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2581,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2629,
									"end": 2706,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2626,
									"end": 2627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2619,
									"end": 2707,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2726,
									"end": 2730,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2723,
									"end": 2724,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2716,
									"end": 2731,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2750,
									"end": 2754,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2740,
									"end": 2755,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2767,
									"end": 2947,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 2767,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2815,
									"end": 2892,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2812,
									"end": 2813,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2805,
									"end": 2893,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 2916,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2909,
									"end": 2910,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2902,
									"end": 2917,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2936,
									"end": 2940,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2933,
									"end": 2934,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2926,
									"end": 2941,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2953,
									"end": 3273,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2953,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2997,
									"end": 3003,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3034,
									"end": 3035,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3028,
									"end": 3032,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3024,
									"end": 3036,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3014,
									"end": 3036,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3014,
									"end": 3036,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3082,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3071,
									"end": 3083,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3092,
									"end": 3173,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 3092,
									"end": 3173,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3158,
									"end": 3162,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 3150,
									"end": 3156,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3163,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3136,
									"end": 3163,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3136,
									"end": 3163,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3092,
									"end": 3173,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 3092,
									"end": 3173,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3220,
									"end": 3222,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3218,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3209,
									"end": 3223,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3189,
									"end": 3207,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3186,
									"end": 3224,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3183,
									"end": 3267,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3239,
									"end": 3257,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 3239,
									"end": 3257,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3239,
									"end": 3257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3239,
									"end": 3257,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 3239,
									"end": 3257,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3267,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 3183,
									"end": 3267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3004,
									"end": 3273,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2953,
									"end": 3273,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2953,
									"end": 3273,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2953,
									"end": 3273,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2953,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3279,
									"end": 3420,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3279,
									"end": 3420,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3328,
									"end": 3332,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3351,
									"end": 3354,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3354,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3354,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3374,
									"end": 3377,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3371,
									"end": 3372,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3364,
									"end": 3378,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3408,
									"end": 3412,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3405,
									"end": 3406,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3395,
									"end": 3413,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 3413,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 3413,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3279,
									"end": 3420,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3279,
									"end": 3420,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3279,
									"end": 3420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3279,
									"end": 3420,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3519,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3426,
									"end": 3519,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3463,
									"end": 3469,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3510,
									"end": 3512,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3505,
									"end": 3507,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3498,
									"end": 3503,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3494,
									"end": 3508,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3490,
									"end": 3513,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3480,
									"end": 3513,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3480,
									"end": 3513,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3519,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3519,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3519,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3426,
									"end": 3519,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3632,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3525,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3569,
									"end": 3577,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3619,
									"end": 3624,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3617,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3609,
									"end": 3625,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3588,
									"end": 3625,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3588,
									"end": 3625,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3632,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3632,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3632,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3632,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3525,
									"end": 3632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3707,
									"end": 3713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3757,
									"end": 3758,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 3745,
									"end": 3755,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3741,
									"end": 3759,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3877,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 3810,
									"end": 3876,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3799,
									"end": 3808,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3877,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3780,
									"end": 3877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3877,
									"name": "tag",
									"source": 9,
									"value": "146"
								},
								{
									"begin": 3780,
									"end": 3877,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3937,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 3928,
									"end": 3936,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3917,
									"end": 3926,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3937,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3898,
									"end": 3937,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3937,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 3898,
									"end": 3937,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3886,
									"end": 3937,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 3886,
									"end": 3937,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3970,
									"end": 3974,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 3975,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3959,
									"end": 3964,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3976,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3946,
									"end": 3976,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3946,
									"end": 3976,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4019,
									"end": 4023,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4009,
									"end": 4017,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4005,
									"end": 4024,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4003,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4025,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3985,
									"end": 4025,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3985,
									"end": 4025,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3714,
									"end": 4031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3714,
									"end": 4031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3638,
									"end": 4031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4037,
									"end": 4097,
									"name": "tag",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 4037,
									"end": 4097,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4065,
									"end": 4068,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4086,
									"end": 4091,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4079,
									"end": 4091,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4079,
									"end": 4091,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4037,
									"end": 4097,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4037,
									"end": 4097,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4037,
									"end": 4097,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4037,
									"end": 4097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4103,
									"end": 4245,
									"name": "tag",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 4103,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4162,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4186,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 4204,
									"end": 4238,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 4213,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 4231,
									"end": 4236,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4213,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 4213,
									"end": 4237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4213,
									"end": 4237,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 4213,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4238,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 4204,
									"end": 4238,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4204,
									"end": 4238,
									"name": "tag",
									"source": 9,
									"value": "151"
								},
								{
									"begin": 4204,
									"end": 4238,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4186,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 4186,
									"end": 4239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4186,
									"end": 4239,
									"name": "tag",
									"source": 9,
									"value": "150"
								},
								{
									"begin": 4186,
									"end": 4239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4239,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4173,
									"end": 4239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4103,
									"end": 4245,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4103,
									"end": 4245,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4103,
									"end": 4245,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4103,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4251,
									"end": 4326,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 4251,
									"end": 4326,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4294,
									"end": 4297,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4315,
									"end": 4320,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4308,
									"end": 4320,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4308,
									"end": 4320,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4251,
									"end": 4326,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4251,
									"end": 4326,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4251,
									"end": 4326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4251,
									"end": 4326,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4332,
									"end": 4601,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4332,
									"end": 4601,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4442,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 4473,
									"end": 4480,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4442,
									"end": 4481,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "86"
								},
								{
									"begin": 4442,
									"end": 4481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4442,
									"end": 4481,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 4442,
									"end": 4481,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4503,
									"end": 4594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 4552,
									"end": 4593,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 4576,
									"end": 4592,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4552,
									"end": 4593,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 4552,
									"end": 4593,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4552,
									"end": 4593,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 4552,
									"end": 4593,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4544,
									"end": 4550,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4537,
									"end": 4541,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4531,
									"end": 4542,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4503,
									"end": 4594,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 4503,
									"end": 4594,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4503,
									"end": 4594,
									"name": "tag",
									"source": 9,
									"value": "156"
								},
								{
									"begin": 4503,
									"end": 4594,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4497,
									"end": 4501,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4490,
									"end": 4595,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4408,
									"end": 4601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4332,
									"end": 4601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4332,
									"end": 4601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4332,
									"end": 4601,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4332,
									"end": 4601,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4680,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4607,
									"end": 4680,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4652,
									"end": 4655,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4673,
									"end": 4674,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4666,
									"end": 4674,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4666,
									"end": 4674,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4680,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4607,
									"end": 4680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4686,
									"end": 4875,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 4686,
									"end": 4875,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4763,
									"end": 4795,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 4763,
									"end": 4795,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4763,
									"end": 4795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4763,
									"end": 4795,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 4763,
									"end": 4795,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 4862,
									"end": 4868,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4854,
									"end": 4860,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4852,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4869,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4804,
									"end": 4869,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4869,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 4804,
									"end": 4869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4739,
									"end": 4875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4686,
									"end": 4875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4686,
									"end": 4875,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4686,
									"end": 4875,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4881,
									"end": 5067,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 4881,
									"end": 5067,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4958,
									"end": 4961,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4951,
									"end": 4956,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4948,
									"end": 4962,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 5049,
									"end": 5050,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5042,
									"end": 5047,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 5012,
									"end": 5051,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5051,
									"name": "tag",
									"source": 9,
									"value": "166"
								},
								{
									"begin": 5012,
									"end": 5051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 4978,
									"end": 4983,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4974,
									"end": 4987,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "tag",
									"source": 9,
									"value": "165"
								},
								{
									"begin": 4941,
									"end": 5061,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4881,
									"end": 5067,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4881,
									"end": 5067,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4881,
									"end": 5067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5073,
									"end": 5616,
									"name": "tag",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 5073,
									"end": 5616,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5174,
									"end": 5176,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5169,
									"end": 5172,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5166,
									"end": 5177,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5163,
									"end": 5609,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5163,
									"end": 5609,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 5163,
									"end": 5609,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5246,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 5240,
									"end": 5245,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5246,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 5208,
									"end": 5246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5246,
									"name": "tag",
									"source": 9,
									"value": "169"
								},
								{
									"begin": 5208,
									"end": 5246,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5292,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 5310,
									"end": 5320,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5292,
									"end": 5321,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 5292,
									"end": 5321,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5292,
									"end": 5321,
									"name": "tag",
									"source": 9,
									"value": "170"
								},
								{
									"begin": 5292,
									"end": 5321,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5282,
									"end": 5290,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5278,
									"end": 5322,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5475,
									"end": 5477,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5463,
									"end": 5473,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5478,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5506,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5506,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 5457,
									"end": 5506,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5496,
									"end": 5504,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5481,
									"end": 5504,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5481,
									"end": 5504,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5457,
									"end": 5506,
									"name": "tag",
									"source": 9,
									"value": "171"
								},
								{
									"begin": 5457,
									"end": 5506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5519,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 5575,
									"end": 5597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 5593,
									"end": 5596,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 5575,
									"end": 5597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5575,
									"end": 5597,
									"name": "tag",
									"source": 9,
									"value": "173"
								},
								{
									"begin": 5575,
									"end": 5597,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5565,
									"end": 5573,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5561,
									"end": 5598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5548,
									"end": 5559,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5519,
									"end": 5599,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 5519,
									"end": 5599,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5519,
									"end": 5599,
									"name": "tag",
									"source": 9,
									"value": "172"
								},
								{
									"begin": 5519,
									"end": 5599,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5178,
									"end": 5609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5178,
									"end": 5609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5163,
									"end": 5609,
									"name": "tag",
									"source": 9,
									"value": "168"
								},
								{
									"begin": 5163,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5073,
									"end": 5616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5073,
									"end": 5616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5073,
									"end": 5616,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5073,
									"end": 5616,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5739,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 5622,
									"end": 5739,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5676,
									"end": 5684,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5726,
									"end": 5731,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5724,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5716,
									"end": 5732,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 5695,
									"end": 5732,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5695,
									"end": 5732,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5739,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5739,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5739,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5739,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5622,
									"end": 5739,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5914,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 5745,
									"end": 5914,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5822,
									"end": 5873,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 5870,
									"end": 5871,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5866,
									"end": 5872,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5858,
									"end": 5863,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5855,
									"end": 5856,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 5851,
									"end": 5864,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 5822,
									"end": 5873,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 5822,
									"end": 5873,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5822,
									"end": 5873,
									"name": "tag",
									"source": 9,
									"value": "176"
								},
								{
									"begin": 5822,
									"end": 5873,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5818,
									"end": 5874,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5903,
									"end": 5907,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 5897,
									"end": 5901,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5893,
									"end": 5908,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5883,
									"end": 5908,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5883,
									"end": 5908,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5796,
									"end": 5914,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5914,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5914,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5914,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5914,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5745,
									"end": 5914,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 6214,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 5919,
									"end": 6214,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5995,
									"end": 5999,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6141,
									"end": 6170,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 6166,
									"end": 6169,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6160,
									"end": 6164,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6141,
									"end": 6170,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 6141,
									"end": 6170,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6141,
									"end": 6170,
									"name": "tag",
									"source": 9,
									"value": "178"
								},
								{
									"begin": 6141,
									"end": 6170,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6133,
									"end": 6170,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6133,
									"end": 6170,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6203,
									"end": 6206,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6200,
									"end": 6201,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6196,
									"end": 6207,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6190,
									"end": 6194,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6187,
									"end": 6208,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6208,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6179,
									"end": 6208,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 6214,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 6214,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 6214,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 6214,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5919,
									"end": 6214,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6219,
									"end": 7614,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 6219,
									"end": 7614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 6369,
									"end": 6372,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6373,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 6336,
									"end": 6373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6336,
									"end": 6373,
									"name": "tag",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 6336,
									"end": 6373,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6456,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6430,
									"end": 6436,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6427,
									"end": 6457,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6424,
									"end": 6480,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6424,
									"end": 6480,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 6424,
									"end": 6480,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6460,
									"end": 6478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 6460,
									"end": 6478,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 6460,
									"end": 6478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6460,
									"end": 6478,
									"name": "tag",
									"source": 9,
									"value": "182"
								},
								{
									"begin": 6460,
									"end": 6478,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6424,
									"end": 6480,
									"name": "tag",
									"source": 9,
									"value": "181"
								},
								{
									"begin": 6424,
									"end": 6480,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6504,
									"end": 6542,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 6536,
									"end": 6540,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6530,
									"end": 6541,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 6504,
									"end": 6542,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 6504,
									"end": 6542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6504,
									"end": 6542,
									"name": "tag",
									"source": 9,
									"value": "183"
								},
								{
									"begin": 6504,
									"end": 6542,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6589,
									"end": 6656,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 6649,
									"end": 6655,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6641,
									"end": 6647,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6635,
									"end": 6639,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6589,
									"end": 6656,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "92"
								},
								{
									"begin": 6589,
									"end": 6656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6589,
									"end": 6656,
									"name": "tag",
									"source": 9,
									"value": "184"
								},
								{
									"begin": 6589,
									"end": 6656,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6683,
									"end": 6684,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6707,
									"end": 6711,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6694,
									"end": 6711,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6694,
									"end": 6711,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6739,
									"end": 6741,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6731,
									"end": 6737,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6728,
									"end": 6742,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6756,
									"end": 6757,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6751,
									"end": 7369,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6751,
									"end": 7369,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 6751,
									"end": 7369,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 6751,
									"end": 7369,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7413,
									"end": 7414,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7430,
									"end": 7436,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7427,
									"end": 7504,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7427,
									"end": 7504,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 7427,
									"end": 7504,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7479,
									"end": 7488,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7474,
									"end": 7477,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 7470,
									"end": 7489,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7464,
									"end": 7490,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7455,
									"end": 7490,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7455,
									"end": 7490,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7427,
									"end": 7504,
									"name": "tag",
									"source": 9,
									"value": "187"
								},
								{
									"begin": 7427,
									"end": 7504,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7530,
									"end": 7597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 7590,
									"end": 7596,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7583,
									"end": 7588,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7530,
									"end": 7597,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 7530,
									"end": 7597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7530,
									"end": 7597,
									"name": "tag",
									"source": 9,
									"value": "188"
								},
								{
									"begin": 7530,
									"end": 7597,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7524,
									"end": 7528,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7517,
									"end": 7598,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7386,
									"end": 7608,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6721,
									"end": 7608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 6721,
									"end": 7608,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6751,
									"end": 7369,
									"name": "tag",
									"source": 9,
									"value": "186"
								},
								{
									"begin": 6751,
									"end": 7369,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6803,
									"end": 6807,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6799,
									"end": 6808,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6791,
									"end": 6797,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6787,
									"end": 6809,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6837,
									"end": 6874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 6869,
									"end": 6873,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6837,
									"end": 6874,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 6837,
									"end": 6874,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6837,
									"end": 6874,
									"name": "tag",
									"source": 9,
									"value": "189"
								},
								{
									"begin": 6837,
									"end": 6874,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6896,
									"end": 6897,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "tag",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6924,
									"end": 6931,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6918,
									"end": 6932,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7003,
									"end": 7012,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6998,
									"end": 7001,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6994,
									"end": 7013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6988,
									"end": 7014,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6980,
									"end": 6986,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6973,
									"end": 7015,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7054,
									"end": 7055,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7046,
									"end": 7052,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7042,
									"end": 7056,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7032,
									"end": 7056,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7032,
									"end": 7056,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7101,
									"end": 7103,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7090,
									"end": 7099,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7086,
									"end": 7104,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7073,
									"end": 7104,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7073,
									"end": 7104,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6947,
									"end": 6951,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6944,
									"end": 6945,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6940,
									"end": 6952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6935,
									"end": 6952,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6935,
									"end": 6952,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "190"
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "tag",
									"source": 9,
									"value": "192"
								},
								{
									"begin": 6910,
									"end": 7118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7146,
									"end": 7152,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7137,
									"end": 7144,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7134,
									"end": 7153,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7310,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7310,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 7131,
									"end": 7310,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7204,
									"end": 7213,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7199,
									"end": 7202,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7195,
									"end": 7214,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7189,
									"end": 7215,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7247,
									"end": 7295,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 7289,
									"end": 7293,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7281,
									"end": 7287,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7277,
									"end": 7294,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7266,
									"end": 7275,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7247,
									"end": 7295,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 7247,
									"end": 7295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7247,
									"end": 7295,
									"name": "tag",
									"source": 9,
									"value": "194"
								},
								{
									"begin": 7247,
									"end": 7295,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7239,
									"end": 7245,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7232,
									"end": 7296,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7154,
									"end": 7310,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7310,
									"name": "tag",
									"source": 9,
									"value": "193"
								},
								{
									"begin": 7131,
									"end": 7310,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7352,
									"end": 7353,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7344,
									"end": 7350,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 7340,
									"end": 7354,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7336,
									"end": 7358,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7330,
									"end": 7334,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 7323,
									"end": 7359,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6758,
									"end": 7369,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6758,
									"end": 7369,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6758,
									"end": 7369,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6721,
									"end": 7608,
									"name": "tag",
									"source": 9,
									"value": "185"
								},
								{
									"begin": 6721,
									"end": 7608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6721,
									"end": 7608,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6311,
									"end": 7614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6311,
									"end": 7614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6311,
									"end": 7614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6219,
									"end": 7614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6219,
									"end": 7614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6219,
									"end": 7614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7620,
									"end": 7705,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 7620,
									"end": 7705,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7665,
									"end": 7672,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7694,
									"end": 7699,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7699,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7683,
									"end": 7699,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7620,
									"end": 7705,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7620,
									"end": 7705,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7620,
									"end": 7705,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7620,
									"end": 7705,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7711,
									"end": 7869,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 7711,
									"end": 7869,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7769,
									"end": 7778,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7802,
									"end": 7863,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 7820,
									"end": 7862,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 7829,
									"end": 7861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 7855,
									"end": 7860,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7829,
									"end": 7861,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 7829,
									"end": 7861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7829,
									"end": 7861,
									"name": "tag",
									"source": 9,
									"value": "199"
								},
								{
									"begin": 7829,
									"end": 7861,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7820,
									"end": 7862,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "85"
								},
								{
									"begin": 7820,
									"end": 7862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7820,
									"end": 7862,
									"name": "tag",
									"source": 9,
									"value": "198"
								},
								{
									"begin": 7820,
									"end": 7862,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7802,
									"end": 7863,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 7802,
									"end": 7863,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7802,
									"end": 7863,
									"name": "tag",
									"source": 9,
									"value": "197"
								},
								{
									"begin": 7802,
									"end": 7863,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7789,
									"end": 7863,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7789,
									"end": 7863,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7711,
									"end": 7869,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7711,
									"end": 7869,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7711,
									"end": 7869,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7711,
									"end": 7869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 8022,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 7875,
									"end": 8022,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7970,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 8009,
									"end": 8014,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7970,
									"end": 8015,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 7970,
									"end": 8015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7970,
									"end": 8015,
									"name": "tag",
									"source": 9,
									"value": "201"
								},
								{
									"begin": 7970,
									"end": 8015,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7965,
									"end": 7968,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7958,
									"end": 8016,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 8022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 8022,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 8022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8028,
									"end": 8266,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 8028,
									"end": 8266,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8129,
									"end": 8133,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8167,
									"end": 8169,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8156,
									"end": 8165,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8152,
									"end": 8170,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8144,
									"end": 8170,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8144,
									"end": 8170,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8180,
									"end": 8259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 8256,
									"end": 8257,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8245,
									"end": 8254,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8241,
									"end": 8258,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8232,
									"end": 8238,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8180,
									"end": 8259,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 8180,
									"end": 8259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8180,
									"end": 8259,
									"name": "tag",
									"source": 9,
									"value": "203"
								},
								{
									"begin": 8180,
									"end": 8259,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8028,
									"end": 8266,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8028,
									"end": 8266,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8028,
									"end": 8266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8028,
									"end": 8266,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8028,
									"end": 8266,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8272,
									"end": 8390,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 8272,
									"end": 8390,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8359,
									"end": 8383,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 8377,
									"end": 8382,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 8359,
									"end": 8383,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 8359,
									"end": 8383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8359,
									"end": 8383,
									"name": "tag",
									"source": 9,
									"value": "205"
								},
								{
									"begin": 8359,
									"end": 8383,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8354,
									"end": 8357,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8347,
									"end": 8384,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8272,
									"end": 8390,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8272,
									"end": 8390,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8272,
									"end": 8390,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8618,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 8396,
									"end": 8618,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8489,
									"end": 8493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8527,
									"end": 8529,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8516,
									"end": 8525,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8512,
									"end": 8530,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8504,
									"end": 8530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8504,
									"end": 8530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8611,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 8608,
									"end": 8609,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8597,
									"end": 8606,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8593,
									"end": 8610,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8584,
									"end": 8590,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8611,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 8540,
									"end": 8611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8611,
									"name": "tag",
									"source": 9,
									"value": "207"
								},
								{
									"begin": 8540,
									"end": 8611,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8618,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8618,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8618,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8618,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8396,
									"end": 8618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8624,
									"end": 8793,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 8624,
									"end": 8793,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8708,
									"end": 8719,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8742,
									"end": 8748,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8737,
									"end": 8740,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8730,
									"end": 8749,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8782,
									"end": 8786,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8777,
									"end": 8780,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8773,
									"end": 8787,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8758,
									"end": 8787,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8758,
									"end": 8787,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8624,
									"end": 8793,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 8624,
									"end": 8793,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 8624,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8624,
									"end": 8793,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8624,
									"end": 8793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8799,
									"end": 9024,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 8799,
									"end": 9024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8939,
									"end": 8973,
									"name": "PUSH",
									"source": 9,
									"value": "436170206D757374206265206174206C65617374203730206D696C6C696F6E20"
								},
								{
									"begin": 8935,
									"end": 8936,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8927,
									"end": 8933,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8923,
									"end": 8937,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8916,
									"end": 8974,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9008,
									"end": 9016,
									"name": "PUSH",
									"source": 9,
									"value": "746F6B656E730000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9003,
									"end": 9005,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8995,
									"end": 9001,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8991,
									"end": 9006,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8984,
									"end": 9017,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8799,
									"end": 9024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8799,
									"end": 9024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9030,
									"end": 9396,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 9030,
									"end": 9396,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9172,
									"end": 9175,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9193,
									"end": 9260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 9257,
									"end": 9259,
									"name": "PUSH",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 9252,
									"end": 9255,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9193,
									"end": 9260,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 9193,
									"end": 9260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9193,
									"end": 9260,
									"name": "tag",
									"source": 9,
									"value": "211"
								},
								{
									"begin": 9193,
									"end": 9260,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9186,
									"end": 9260,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9186,
									"end": 9260,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9269,
									"end": 9362,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "212"
								},
								{
									"begin": 9358,
									"end": 9361,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9269,
									"end": 9362,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 9269,
									"end": 9362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9269,
									"end": 9362,
									"name": "tag",
									"source": 9,
									"value": "212"
								},
								{
									"begin": 9269,
									"end": 9362,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9387,
									"end": 9389,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 9382,
									"end": 9385,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9378,
									"end": 9390,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9371,
									"end": 9390,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9371,
									"end": 9390,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9030,
									"end": 9396,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9030,
									"end": 9396,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9030,
									"end": 9396,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9030,
									"end": 9396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9402,
									"end": 9821,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 9402,
									"end": 9821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9568,
									"end": 9572,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9606,
									"end": 9608,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 9595,
									"end": 9604,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9591,
									"end": 9609,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9583,
									"end": 9609,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9583,
									"end": 9609,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9655,
									"end": 9664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9649,
									"end": 9653,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9645,
									"end": 9665,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 9641,
									"end": 9642,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 9630,
									"end": 9639,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 9626,
									"end": 9643,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 9619,
									"end": 9666,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9683,
									"end": 9814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 9809,
									"end": 9813,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9683,
									"end": 9814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 9683,
									"end": 9814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9683,
									"end": 9814,
									"name": "tag",
									"source": 9,
									"value": "214"
								},
								{
									"begin": 9683,
									"end": 9814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9675,
									"end": 9814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9675,
									"end": 9814,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9402,
									"end": 9821,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 9402,
									"end": 9821,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 9402,
									"end": 9821,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9402,
									"end": 9821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9827,
									"end": 9945,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 9827,
									"end": 9945,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9914,
									"end": 9938,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 9932,
									"end": 9937,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 9914,
									"end": 9938,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 9914,
									"end": 9938,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9914,
									"end": 9938,
									"name": "tag",
									"source": 9,
									"value": "216"
								},
								{
									"begin": 9914,
									"end": 9938,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9909,
									"end": 9912,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 9902,
									"end": 9939,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 9827,
									"end": 9945,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9827,
									"end": 9945,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9827,
									"end": 9945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10072,
									"end": 10076,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10110,
									"end": 10112,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 10099,
									"end": 10108,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10095,
									"end": 10113,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10087,
									"end": 10113,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10087,
									"end": 10113,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10123,
									"end": 10194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 10191,
									"end": 10192,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10180,
									"end": 10189,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10176,
									"end": 10193,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10167,
									"end": 10173,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10123,
									"end": 10194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 10123,
									"end": 10194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10123,
									"end": 10194,
									"name": "tag",
									"source": 9,
									"value": "218"
								},
								{
									"begin": 10123,
									"end": 10194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10204,
									"end": 10276,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 10272,
									"end": 10274,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10261,
									"end": 10270,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10257,
									"end": 10275,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10248,
									"end": 10254,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10204,
									"end": 10276,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 10204,
									"end": 10276,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10204,
									"end": 10276,
									"name": "tag",
									"source": 9,
									"value": "219"
								},
								{
									"begin": 10204,
									"end": 10276,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 9951,
									"end": 10283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10289,
									"end": 10480,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 10289,
									"end": 10480,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10329,
									"end": 10332,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10348,
									"end": 10368,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 10366,
									"end": 10367,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10348,
									"end": 10368,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 10348,
									"end": 10368,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10348,
									"end": 10368,
									"name": "tag",
									"source": 9,
									"value": "221"
								},
								{
									"begin": 10348,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10343,
									"end": 10368,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10343,
									"end": 10368,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10382,
									"end": 10402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 10400,
									"end": 10401,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10382,
									"end": 10402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 10382,
									"end": 10402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10382,
									"end": 10402,
									"name": "tag",
									"source": 9,
									"value": "222"
								},
								{
									"begin": 10382,
									"end": 10402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10377,
									"end": 10402,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10377,
									"end": 10402,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10425,
									"end": 10426,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10422,
									"end": 10423,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10418,
									"end": 10427,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10411,
									"end": 10427,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10411,
									"end": 10427,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10446,
									"end": 10449,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 10443,
									"end": 10444,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10440,
									"end": 10450,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 10437,
									"end": 10473,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 10437,
									"end": 10473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 10437,
									"end": 10473,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 10453,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 10453,
									"end": 10471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 10453,
									"end": 10471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10453,
									"end": 10471,
									"name": "tag",
									"source": 9,
									"value": "224"
								},
								{
									"begin": 10453,
									"end": 10471,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10437,
									"end": 10473,
									"name": "tag",
									"source": 9,
									"value": "223"
								},
								{
									"begin": 10437,
									"end": 10473,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10289,
									"end": 10480,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10289,
									"end": 10480,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10289,
									"end": 10480,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10289,
									"end": 10480,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10289,
									"end": 10480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10635,
									"end": 10639,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10673,
									"end": 10675,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 10662,
									"end": 10671,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 10658,
									"end": 10676,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10650,
									"end": 10676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 10650,
									"end": 10676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10686,
									"end": 10757,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 10754,
									"end": 10755,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 10743,
									"end": 10752,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10739,
									"end": 10756,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10730,
									"end": 10736,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 10686,
									"end": 10757,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 10686,
									"end": 10757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10686,
									"end": 10757,
									"name": "tag",
									"source": 9,
									"value": "226"
								},
								{
									"begin": 10686,
									"end": 10757,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10767,
									"end": 10839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 10835,
									"end": 10837,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 10824,
									"end": 10833,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10820,
									"end": 10838,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10811,
									"end": 10817,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 10767,
									"end": 10839,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 10767,
									"end": 10839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10767,
									"end": 10839,
									"name": "tag",
									"source": 9,
									"value": "227"
								},
								{
									"begin": 10767,
									"end": 10839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10849,
									"end": 10921,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 10917,
									"end": 10919,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 10906,
									"end": 10915,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 10902,
									"end": 10920,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 10893,
									"end": 10899,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 10849,
									"end": 10921,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 10849,
									"end": 10921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10849,
									"end": 10921,
									"name": "tag",
									"source": 9,
									"value": "228"
								},
								{
									"begin": 10849,
									"end": 10921,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10486,
									"end": 10928,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 10934,
									"end": 11156,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 10934,
									"end": 11156,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 11027,
									"end": 11031,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11065,
									"end": 11067,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 11054,
									"end": 11063,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 11050,
									"end": 11068,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11042,
									"end": 11068,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 11042,
									"end": 11068,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 11078,
									"end": 11149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 11146,
									"end": 11147,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 11135,
									"end": 11144,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 11131,
									"end": 11148,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 11122,
									"end": 11128,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 11078,
									"end": 11149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 11078,
									"end": 11149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 11078,
									"end": 11149,
									"name": "tag",
									"source": 9,
									"value": "230"
								},
								{
									"begin": 11078,
									"end": 11149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 10934,
									"end": 11156,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 10934,
									"end": 11156,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 10934,
									"end": 11156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10934,
									"end": 11156,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 10934,
									"end": 11156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "ASSIGNIMMUTABLE",
									"source": 8,
									"value": "932"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1618,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201290132b36b3545838b8a60977f0605efd61fb23a63a194e0ab3e14ea81fccdc64736f6c634300081c0033",
									".code": [
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "1A18E707"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "1A18E707"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "355274EA"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "AC168A1"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1618,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 387,
											"end": 413,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 387,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 387,
											"end": 413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1238,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1238,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 387,
											"end": 413,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 387,
											"end": 413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1322,
											"end": 1328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1322,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1322,
											"end": 1337,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1322,
											"end": 1337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1308,
											"end": 1337,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1337,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1337,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1238,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 967,
											"end": 974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSHIMMUTABLE",
											"source": 5,
											"value": "932"
										},
										{
											"begin": 986,
											"end": 997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 986,
											"end": 997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1615,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 1414,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1549,
											"end": 1553,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1559,
											"end": 1564,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 1529,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1529,
											"end": 1565,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 1529,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1173,
											"end": 1175,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 1153,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1153,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1202,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1216,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1252,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1252,
											"end": 1257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 1252,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1232,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1288,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1288,
											"end": 1301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1288,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1328,
											"end": 1337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "9E79F85400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 1364,
											"end": 1399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1399,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 1315,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1218,
											"end": 1424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 1194,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1059,
											"end": 1430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 9
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 6760,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6808,
											"end": 6885,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6886,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6909,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6902,
											"end": 6903,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6895,
											"end": 6910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6929,
											"end": 6933,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6926,
											"end": 6927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6934,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7356,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6946,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6986,
											"end": 6993,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7009,
											"end": 7029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 7009,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7004,
											"end": 7029,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7004,
											"end": 7029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 7061,
											"end": 7062,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7043,
											"end": 7063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7098,
											"end": 7099,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7095,
											"end": 7096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7138,
											"end": 7149,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7120,
											"end": 7150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7109,
											"end": 7150,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7109,
											"end": 7150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7290,
											"end": 7297,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7286,
											"end": 7301,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7283,
											"end": 7284,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7302,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7233,
											"end": 7316,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7210,
											"end": 7349,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 7329,
											"end": 7347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7210,
											"end": 7349,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7210,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6994,
											"end": 7356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7356,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7356,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6946,
											"end": 7356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7511,
											"end": 7515,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7551,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 7538,
											"end": 7547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7534,
											"end": 7552,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7526,
											"end": 7552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7562,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7630,
											"end": 7631,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7615,
											"end": 7632,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7612,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7562,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 7562,
											"end": 7633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7562,
											"end": 7633,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 7562,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7711,
											"end": 7713,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7700,
											"end": 7709,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7696,
											"end": 7714,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7687,
											"end": 7693,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7643,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7643,
											"end": 7715,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7643,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7793,
											"end": 7795,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7782,
											"end": 7791,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7725,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7362,
											"end": 7804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7931,
											"end": 7935,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7971,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7958,
											"end": 7967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7954,
											"end": 7972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7946,
											"end": 7972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 8050,
											"end": 8051,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8048,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8032,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7982,
											"end": 8053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7982,
											"end": 8053,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 7982,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 8131,
											"end": 8133,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8120,
											"end": 8129,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8063,
											"end": 8135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8063,
											"end": 8135,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 8063,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 8142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8339,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 8148,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8191,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8207,
											"end": 8227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 8207,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8227,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8202,
											"end": 8227,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8241,
											"end": 8261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 8241,
											"end": 8261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8236,
											"end": 8261,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8236,
											"end": 8261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8277,
											"end": 8286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8270,
											"end": 8286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8302,
											"end": 8303,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8299,
											"end": 8309,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8296,
											"end": 8332,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8296,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8296,
											"end": 8332,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8312,
											"end": 8330,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 8312,
											"end": 8330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8312,
											"end": 8330,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 8312,
											"end": 8330,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8296,
											"end": 8332,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8296,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8339,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8339,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8339,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/ERC-20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"blockReward()": "0ac168a1",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBlockReward(uint256)": "1a18e707",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increasedSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20ExceededCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"ERC20InvalidCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setBlockReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20ExceededCap(uint256,uint256)\":[{\"details\":\"Total supply cap has been exceeded.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidCap(uint256)\":[{\"details\":\"The supplied cap is not a valid cap.\"}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC-20.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x9a961321311c070327b31fba89d821346225a411f946c9e84b330afdfdbb1d60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://084698c9feace630ff29919baad9df0721944eb2ecaf942ef807935bbbe41b5a\",\"dweb:/ipfs/Qmet4EQYqPLSKo7UPBNGaVw5NPATNkiLsqSCnCgg5kAPg4\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ERC-20.sol\":{\"keccak256\":\"0xa8c1dcd20bf19d0f940a3837387f55712a4c111892a4c772b6db85d07a24d21b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9920a1974b044de482b88fe96d3246e69b426a83e99c16ad1a691b52873d4872\",\"dweb:/ipfs/QmWXfPptP5NJWvdGZNoQfPT3L9JHqkrrkyXpks2LPdmhDo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1092,
								"contract": "contracts/ERC-20.sol:MyToken",
								"label": "blockReward",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/ERC-20.sol:26:61:\n   |\n26 |     function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual  {\n   |                                                             ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 942,
					"file": "contracts/ERC-20.sol",
					"start": 928
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1079,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1078
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1048
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1049,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1048,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1079,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1048,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								1048,
								877,
								1078
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1035
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1041
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1047
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 1079,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1078,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1078,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								1048,
								877,
								1078
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Capped": [
							1022
						]
					},
					"id": 1023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "122:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1023,
							"sourceUnit": 800,
							"src": "148:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "156:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "ERC20",
										"nameLocations": [
											"296:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "296:5:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "296:5:5"
								}
							],
							"canonicalName": "ERC20Capped",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "185:77:5",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": true,
							"id": 1022,
							"linearizedBaseContracts": [
								1022,
								799,
								189,
								1048,
								877,
								1078
							],
							"name": "ERC20Capped",
							"nameLocation": "281:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 932,
									"mutability": "immutable",
									"name": "_cap",
									"nameLocation": "334:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1022,
									"src": "308:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 931,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "308:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "345:59:5",
										"text": " @dev Total supply cap has been exceeded."
									},
									"errorSelector": "9e79f854",
									"id": 939,
									"name": "ERC20ExceededCap",
									"nameLocation": "415:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "increasedSupply",
												"nameLocation": "440:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "432:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "465:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "457:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "431:38:5"
									},
									"src": "409:61:5"
								},
								{
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "476:60:5",
										"text": " @dev The supplied cap is not a valid cap."
									},
									"errorSelector": "392e1e27",
									"id": 944,
									"name": "ERC20InvalidCap",
									"nameLocation": "547:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "571:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "563:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "562:13:5"
									},
									"src": "541:35:5"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "742:102:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 950,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "756:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "756:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "752:65:5",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "767:50:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 953,
																	"name": "ERC20InvalidCap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "788:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "788:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 956,
															"nodeType": "RevertStatement",
															"src": "781:25:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 959,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "826:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 960,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "833:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "826:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "826:11:5"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "582:129:5",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 964,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "736:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "728:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:14:5"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "742:0:5"
									},
									"scope": 1022,
									"src": "716:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "976:28:5",
										"statements": [
											{
												"expression": {
													"id": 970,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 932,
													"src": "993:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 969,
												"id": 971,
												"nodeType": "Return",
												"src": "986:11:5"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "850:68:5",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "932:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:5"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "967:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:9:5"
									},
									"scope": 1022,
									"src": "923:81:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "1143:287:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1167:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "1173:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 984,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1153:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Capped_$1022_$",
																"typeString": "type(contract super ERC20Capped)"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1159:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1153:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1153:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "1153:30:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "1198:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1206:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 993,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1206:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1206:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1198:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1019,
												"nodeType": "IfStatement",
												"src": "1194:230:5",
												"trueBody": {
													"id": 1018,
													"nodeType": "Block",
													"src": "1218:206:5",
													"statements": [
														{
															"assignments": [
																999
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 999,
																	"mutability": "mutable",
																	"name": "maxSupply",
																	"nameLocation": "1240:9:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1018,
																	"src": "1232:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 998,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1232:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1002,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1000,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "1252:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:5:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1232:25:5"
														},
														{
															"assignments": [
																1004
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1004,
																	"mutability": "mutable",
																	"name": "supply",
																	"nameLocation": "1279:6:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1018,
																	"src": "1271:14:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1003,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1271:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1007,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1005,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "1288:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1288:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1271:30:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1008,
																	"name": "supply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "1319:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1009,
																	"name": "maxSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "1328:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1319:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1017,
															"nodeType": "IfStatement",
															"src": "1315:99:5",
															"trueBody": {
																"id": 1016,
																"nodeType": "Block",
																"src": "1339:75:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1012,
																					"name": "supply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1004,
																					"src": "1381:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1013,
																					"name": "maxSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 999,
																					"src": "1389:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1011,
																				"name": "ERC20ExceededCap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 939,
																				"src": "1364:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1364:35:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1015,
																		"nodeType": "RevertStatement",
																		"src": "1357:42:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "1010:44:5",
										"text": " @dev See {ERC20-_update}."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1068:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 982,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1134:8:5"
									},
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1084:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1076:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1098:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1090:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1110:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "1102:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1075:41:5"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:5"
									},
									"scope": 1022,
									"src": "1059:371:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1023,
							"src": "263:1169:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								939,
								944
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "122:1311:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							1048
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1024,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 878,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1025,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1028,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:6"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1048,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1048,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1044,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1048,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1078
						]
					},
					"id": 1079,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1078,
							"linearizedBaseContracts": [
								1078
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1056,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1055,
												"id": 1058,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1078,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1065,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1067,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1078,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1073,
												"id": 1075,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1078,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1079,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"contracts/ERC-20.sol": {
				"ast": {
					"absolutePath": "contracts/ERC-20.sol",
					"exportedSymbols": {
						"Context": [
							1078
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"ERC20Capped": [
							1022
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1048
						],
						"MyToken": [
							1237
						],
						"Ownable": [
							147
						]
					},
					"id": 1238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1080,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1081,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 800,
							"src": "61:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol",
							"id": 1082,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 1023,
							"src": "118:72:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 924,
							"src": "192:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 148,
							"src": "268:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1085,
										"name": "ERC20Capped",
										"nameLocations": [
											"344:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1022,
										"src": "344:11:8"
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "344:11:8"
								},
								{
									"baseName": {
										"id": 1087,
										"name": "ERC20Burnable",
										"nameLocations": [
											"357:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "357:13:8"
									},
									"id": 1088,
									"nodeType": "InheritanceSpecifier",
									"src": "357:13:8"
								},
								{
									"baseName": {
										"id": 1089,
										"name": "Ownable",
										"nameLocations": [
											"372:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "372:7:8"
									},
									"id": 1090,
									"nodeType": "InheritanceSpecifier",
									"src": "372:7:8"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1237,
							"linearizedBaseContracts": [
								1237,
								147,
								923,
								1022,
								799,
								189,
								1048,
								877,
								1078
							],
							"name": "MyToken",
							"nameLocation": "333:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0ac168a1",
									"id": 1092,
									"mutability": "mutable",
									"name": "blockReward",
									"nameLocation": "402:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "387:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1091,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "387:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "592:174:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "611:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3730303030303030",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "618:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_70000000_by_1",
																	"typeString": "int_const 70000000"
																},
																"value": "70000000"
															},
															"src": "611:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436170206d757374206265206174206c65617374203730206d696c6c696f6e20746f6b656e73",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "628:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a",
																"typeString": "literal_string \"Cap must be at least 70 million tokens\""
															},
															"value": "Cap must be at least 70 million tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1cd3cabe53b2ea3cc2d403262cd486a1ebaf04bc85bd2f2cbb69a56023c084a",
																"typeString": "literal_string \"Cap must be at least 70 million tokens\""
															}
														],
														"id": 1115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "603:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "603:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "686:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_70000000000000000000000000_by_1",
																"typeString": "int_const 70000000000000000000000000"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3730303030303030",
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "700:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_70000000_by_1",
																	"typeString": "int_const 70000000"
																},
																"value": "70000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "711:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "715:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "711:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "700:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_70000000000000000000000000_by_1",
																"typeString": "int_const 70000000000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_70000000000000000000000000_by_1",
																"typeString": "int_const 70000000000000000000000000"
															}
														],
														"id": 1122,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "680:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "680:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "680:38:8"
											},
											{
												"expression": {
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1131,
														"name": "blockReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "729:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1132,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "743:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "752:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "756:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "752:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "743:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "729:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "729:29:8"
											}
										]
									},
									"id": 1140,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79546f6b656e",
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "501:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
														"typeString": "literal_string \"MyToken\""
													},
													"value": "MyToken"
												},
												{
													"hexValue": "4d544b",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "512:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
														"typeString": "literal_string \"MTK\""
													},
													"value": "MTK"
												}
											],
											"id": 1103,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1100,
												"name": "ERC20",
												"nameLocations": [
													"495:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "495:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "495:23:8"
										},
										{
											"arguments": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1105,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "541:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "547:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "551:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "547:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "541:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1110,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1104,
												"name": "ERC20Capped",
												"nameLocations": [
													"529:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1022,
												"src": "529:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "529:25:8"
										},
										{
											"arguments": [
												{
													"id": 1112,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1098,
													"src": "573:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1113,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1111,
												"name": "Ownable",
												"nameLocations": [
													"565:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "565:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "565:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "442:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "434:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "455:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "447:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "471:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "463:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:51:8"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:8"
									},
									"scope": 1237,
									"src": "422:344:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "811:53:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1144,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "828:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "834:8:8",
															"memberName": "coinbase",
															"nodeType": "MemberAccess",
															"src": "828:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1146,
															"name": "blockReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "844:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1143,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "822:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "822:34:8"
											}
										]
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintMinerReward",
									"nameLocation": "783:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:8"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:8"
									},
									"scope": 1237,
									"src": "774:90:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "962:268:8",
										"statements": [
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "currentSupply",
														"nameLocation": "993:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "985:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1159,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "985:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1161,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "1009:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "985:37:8"
											},
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "miner",
														"nameLocation": "1041:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1198,
														"src": "1033:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1164,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1033:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"expression": {
														"id": 1166,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "1049:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1055:8:8",
													"memberName": "coinbase",
													"nodeType": "MemberAccess",
													"src": "1049:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1033:30:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1169,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "1080:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1096:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1088:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1170,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1088:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1088:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1080:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1175,
																	"name": "miner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "1102:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1119:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1111:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1176,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1111:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1111:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1102:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1080:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1182,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "1125:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1183,
																"name": "miner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "1131:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1125:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1080:56:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1186,
																"name": "currentSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "1140:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1187,
																"name": "blockReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "1156:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1140:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1189,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1171:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1171:5:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1140:36:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1080:96:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1197,
												"nodeType": "IfStatement",
												"src": "1076:147:8",
												"trueBody": {
													"id": 1196,
													"nodeType": "Block",
													"src": "1178:45:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1193,
																	"name": "_mintMinerReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "1193:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1193:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1195,
															"nodeType": "ExpressionStatement",
															"src": "1193:18:8"
														}
													]
												}
											}
										]
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "881:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "910:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "902:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "924:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "916:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "936:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "928:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:42:8"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:8"
									},
									"scope": 1237,
									"src": "872:358:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "1297:48:8",
										"statements": [
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1206,
														"name": "blockReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "1308:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1207,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "1322:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1331:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"hexValue": "3138",
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1335:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "1331:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															}
														},
														"src": "1322:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1308:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "1308:29:8"
											}
										]
									},
									"functionSelector": "1a18e707",
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1203,
												"name": "onlyOwner",
												"nameLocations": [
													"1287:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1287:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1287:9:8"
										}
									],
									"name": "setBlockReward",
									"nameLocation": "1247:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1270:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "1262:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:16:8"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1297:0:8"
									},
									"scope": 1237,
									"src": "1238:107:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										606,
										1021
									],
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "1518:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1230,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "1549:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1219,
															"src": "1555:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "1559:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1227,
															"name": "ERC20Capped",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "1529:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1022_$",
																"typeString": "type(contract ERC20Capped)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1541:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1021,
														"src": "1529:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1529:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "1529:36:8"
											}
										]
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1423:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1225,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1223,
												"name": "ERC20",
												"nameLocations": [
													"1498:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1498:5:8"
											},
											{
												"id": 1224,
												"name": "ERC20Capped",
												"nameLocations": [
													"1505:11:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1022,
												"src": "1505:11:8"
											}
										],
										"src": "1489:28:8"
									},
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1439:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1431:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1453:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1445:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1465:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1457:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:41:8"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:0:8"
									},
									"scope": 1237,
									"src": "1414:201:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1238,
							"src": "324:1294:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								939,
								944
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "33:1589:8"
				},
				"id": 8
			}
		}
	}
}